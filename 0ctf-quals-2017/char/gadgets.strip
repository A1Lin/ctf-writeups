Gadgets information
============================================================
0x0013576b : aaa ; adc al, 3 ; add byte ptr [ebx], al ; sbb al, 0xbb ; jmp ebx
0x00176658 : aaa ; add edi, ebp ; call dword ptr [eax]
0x00198e6d : aaa ; clc ; jmp dword ptr [eax]
0x00168b55 : aad 0 ; add byte ptr [edx + edx*8], al ; out dx, al ; jmp esp
0x00094831 : aad 0x60 ; or al, 0 ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x00019c68 : aad 0x89 ; ret 0x6c89
0x0017527e : aad 0xed ; jmp dword ptr [edx]
0x00196452 : aad 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00167b48 : aam 0x15 ; jmp 0x167b4e
0x00168158 : aam 0x59 ; in al, dx ; call eax
0x00167d60 : aam 0xb0 ; jmp 0x167d66
0x00168f30 : aam 0xee ; out dx, eax ; jmp dword ptr [eax]
0x00189c21 : aam 0xf4 ; call dword ptr [edx]
0x00197a45 : aam 0xf7 ; jmp dword ptr [ebx]
0x00166175 : aam 0xfc ; call esp
0x0018995a : aam 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00176f5c : aam 9 ; out dx, eax ; call esp
0x00169e45 : aas ; add dword ptr [eax], eax ; insd dword ptr es:[edi], dx ; xor ecx, esi ; call esp
0x00195254 : aas ; xor al, 0xf7 ; call dword ptr [eax]
0x00166b7c : adc ah, bh ; cld ; call dword ptr [eax]
0x00126c62 : adc al, 0x24 ; mov eax, dword ptr [eax + 0x1a0] ; call eax
0x00129d7c : adc al, 0x24 ; ret
0x000c6c44 : adc al, 0x39 ; ret 0x850f
0x000f7a53 : adc al, 0x39 ; ret 0xa7d
0x000f7a5d : adc al, 0x39 ; ret 0xf67c
0x000c5e77 : adc al, 0x83 ; les ebp, ptr [eax] ; pop esi ; pop edi ; pop ebp ; ret
0x00018069 : adc al, 0x83 ; ret 0x108
0x0012526b : adc al, 0x83 ; ret 0x8328
0x0009816b : adc al, 0x83 ; ret 0x8b04
0x00124d33 : adc al, 0x89 ; rcr byte ptr [ebx + 0x5e], 1 ; ret
0x00019d2a : adc al, 0x89 ; ret 0x4c89
0x00094c46 : adc al, 0x8b ; inc esp ; and al, 0xc ; pop ebx ; pop esi ; ret
0x000f7a50 : adc al, 0x8b ; push ecx ; adc al, 0x39 ; ret 0xa7d
0x00056a6c : adc al, 0xc1 ; clc ; add bh, byte ptr [ecx] ; ret 0x1974
0x0006896e : adc al, 0xe8 ; call dword ptr [ebx]
0x00077b6e : adc al, 0xe8 ; jmp dword ptr [ecx]
0x0013804e : adc al, 0xee ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00135722 : adc al, 3 ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x0013576c : adc al, 3 ; add byte ptr [ebx], al ; sbb al, 0xbb ; jmp ebx
0x0009897a : adc al, byte ptr [eax] ; add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x00009550 : adc al, byte ptr [eax] ; or al, 0 ; mov eax, dword ptr [0xd0000010] ; ret 7
0x00009440 : adc al, byte ptr [eax] ; or al, 0 ; ret 0x38
0x00004230 : adc al, byte ptr [eax] ; or al, 0 ; ret 0x52
0x00095c75 : adc al, dh ; ret
0x000e9925 : adc bl, dh ; ret
0x00009555 : adc byte ptr [eax], al ; add al, dl ; ret 7
0x000c5b3e : adc byte ptr [eax], al ; add byte ptr [eax], al ; xchg ebx, edi ; neg eax ; pop edi ; ret
0x0005452b : adc byte ptr [eax], al ; add byte ptr [ecx - 0x7cad8836], cl ; ret 0x830f
0x00144347 : adc byte ptr [ebp - 0x79f00f93], cl ; call dword ptr [eax]
0x00098528 : adc byte ptr [ebp - 0x7ccc8b0a], al ; ret 0x8310
0x000f8b4b : adc byte ptr [ebx + 0x74000878], al ; push es ; xor eax, eax ; ret
0x00198e55 : adc byte ptr [ebx + 0xc0e7e04], al ; ret
0x00127953 : adc byte ptr [ebx + 0xcc48300], cl ; ret
0x00138e7e : adc byte ptr [ebx - 0x167cef3e], al ; adc byte ptr [eax], bh ; ret 0x840f
0x00135a23 : adc byte ptr [ebx], al ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x000a572d : adc byte ptr [ecx], ch ; lds ecx, ptr [ecx + 0x5d5f5ee8] ; ret
0x00019c66 : adc byte ptr [ecx], cl ; aad 0x89 ; ret 0x6c89
0x00117c68 : adc byte ptr [ecx], cl ; ret 0xb60f
0x000a573a : adc byte ptr [ecx], dh ; rcr byte ptr [esi + 0x5f], 0x5d ; ret
0x0009527a : adc byte ptr [edi - 0x3d], bl ; lea esi, dword ptr [esi] ; xor eax, eax ; pop edi ; ret
0x00148f62 : adc byte ptr [edi], cl ; test dword ptr [edi - 0xa000000], esp ; ret 0xf20
0x00148e42 : adc byte ptr [edi], cl ; test dword ptr [esi - 0x9fffffd], esi ; ret 0xf20
0x0014723b : adc byte ptr [edi], cl ; test edi, esi ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf10
0x00167474 : adc byte ptr [edx - 3], cl ; jmp edx
0x00188f50 : adc byte ptr [edx], dh ; hlt ; jmp dword ptr [esi]
0x00114a77 : adc byte ptr [esi + 0xf], bl ; mov dh, 0xc0 ; pop edi ; pop ebp ; ret
0x000a8669 : adc byte ptr [esi], cl ; add byte ptr [eax], al ; pop esi ; add eax, edx ; ret
0x00166e75 : adc ch, bh ; call dword ptr [edx + 0x22fffd10]
0x00166e79 : adc ch, bh ; jmp dword ptr [edx]
0x00166e65 : adc ch, bh ; jmp edx
0x000a8536 : adc ch, byte ptr [ecx] ; ret 0x18b
0x00167264 : adc ch, byte ptr [esi] ; std ; push dword ptr [edx + 0x2e] ; std ; call edx
0x00076e45 : adc cl, byte ptr [ecx - 0x76d7dbac] ; dec esp ; and al, 0x2c ; call eax
0x00167630 : adc cl, byte ptr [esi - 3] ; call dword ptr [edx + 0x12fffd4e]
0x0009892e : adc dh, byte ptr [ecx] ; rol byte ptr [ebp - 0x3f6bf02e], 0xf3 ; ret
0x00184729 : adc dl, dh ; jmp dword ptr [eax]
0x00009540 : adc dword ptr [eax], eax ; and byte ptr [eax], al ; ret
0x0000796a : adc dword ptr [eax], eax ; ret
0x0003602d : adc dword ptr [ebx + 0x5e5b2cc4], eax ; pop edi ; pop ebp ; ret
0x00087661 : adc dword ptr [esi - 0x77], esp ; push ecx ; add al, 0x5b ; ret
0x0000713c : adc eax, 0x22000000 ; add byte ptr [eax + eax], cl ; ret
0x0009533a : adc eax, 0x29c0bc0f ; ret 0x860f
0x00087978 : adc eax, 0x5bfffffe ; ret
0x000e745a : adc eax, 0x81000429 ; ret
0x000b9a34 : adc eax, 0xb8907174 ; and byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x00169525 : adc eax, dword ptr [ecx] ; add byte ptr [ebp + ecx*2 - 0x10], ah ; jmp dword ptr [eax]
0x00089976 : adc eax, dword ptr [edx] ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x00085829 : adc eax, dword ptr [edx] ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x00089c29 : adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x00088362 : adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; mov eax, edx ; pop ebx ; ret
0x00085849 : adc eax, dword ptr [edx] ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x0008586b : adc eax, dword ptr [edx] ; movlpd qword ptr [edx + 5], xmm1 ; mov eax, edx ; ret
0x00094c62 : adc ebx, dword ptr [eax + 0xe] ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00094b42 : adc ecx, dword ptr [eax + 5] ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00094b62 : adc ecx, dword ptr [eax + 6] ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00089c4f : adc ecx, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; ret
0x0008586f : adc ecx, dword ptr [edx + 5] ; mov eax, edx ; ret
0x00089c6f : adc ecx, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; ret
0x0008572f : adc ecx, dword ptr [edx + 6] ; mov eax, edi ; pop edi ; ret
0x00089b2f : adc ecx, dword ptr [edx + 7] ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x0008574f : adc ecx, dword ptr [edx + 7] ; mov eax, edi ; pop edi ; ret
0x0008742a : adc ecx, dword ptr [edx + 8] ; mov eax, edi ; pop edi ; pop ebx ; ret
0x00198645 : adc edi, eax ; jmp dword ptr [edi]
0x00094973 : adc esp, dword ptr [eax + 0xc] ; add byte ptr [ebx], al ; or al, 0x99 ; jmp ecx
0x00169947 : add ah, ah ; mov bl, 0xf0 ; jmp eax
0x0016994f : add ah, ah ; mov ch, 0xf0 ; jmp dword ptr [eax]
0x0019914b : add ah, al ; clc ; jmp dword ptr [edi]
0x00178173 : add ah, al ; mov al, byte ptr [eax] ; add dh, cl ; sti ; call dword ptr [eax]
0x00174860 : add ah, al ; ret
0x00167c2f : add ah, al ; xor ebp, ebx ; jmp esp
0x00199523 : add ah, bh ; dec edi ; clc ; jmp dword ptr [edx]
0x00184433 : add ah, bl ; cmc ; int1 ; call dword ptr [ebx]
0x0017427d : add ah, byte ptr [ebp + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00187831 : add ah, byte ptr [ecx + 0xa] ; ret
0x00179821 : add ah, byte ptr [edx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00185c23 : add ah, byte ptr [edx + 0xe] ; add al, 0xc6 ; ret
0x00188324 : add ah, byte ptr [esi + 0xa] ; ret
0x00089c4c : add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 5] ; lea eax, dword ptr [edx + 0xc] ; ret
0x0008586c : add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 5] ; mov eax, edx ; ret
0x00089c6c : add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 6] ; lea eax, dword ptr [edx + 0xd] ; ret
0x0008572c : add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 6] ; mov eax, edi ; pop edi ; ret
0x0008574c : add ah, byte ptr [esi + 0xf] ; adc ecx, dword ptr [edx + 7] ; mov eax, edi ; pop edi ; ret
0x00188a6b : add ah, dh ; sbb esp, esi ; call eax
0x00169c67 : add ah, dh ; sub al, 0xf1 ; jmp esp
0x00167d5f : add ah, dl ; mov al, 0xeb ; call eax
0x00176f5b : add ah, dl ; or edi, ebp ; call esp
0x00168f2f : add ah, dl ; out dx, al ; out dx, eax ; jmp dword ptr [eax]
0x00168157 : add ah, dl ; pop ecx ; in al, dx ; call eax
0x00079076 : add al, 0 ; add al, ch ; ret 0xfffc
0x000e513e : add al, 0 ; add al, ch ; sub eax, 0x8100044c ; ret
0x00097f29 : add al, 0 ; add byte ptr [eax], al ; add byte ptr [esi + 0x5f], bl ; pop ebp ; ret
0x00129a4d : add al, 0 ; add byte ptr [eax], al ; add esp, 0xc ; ret
0x000a7431 : add al, 0 ; add byte ptr [eax], al ; ret
0x000c7731 : add al, 0 ; add byte ptr [ecx - 0x74725bb3], cl ; movsb byte ptr es:[edi], byte ptr [esi] ; ret 0xfffb
0x000e5329 : add al, 0 ; add byte ptr [ecx], cl ; ret 0x850f
0x00076f57 : add al, 0x24 ; add byte ptr [eax], al ; add byte ptr [eax], al ; call dword ptr [eax]
0x00074d6a : add al, 0x24 ; add byte ptr [eax], al ; add byte ptr [eax], al ; call dword ptr [ecx]
0x00074d49 : add al, 0x24 ; call dword ptr [ecx]
0x00098679 : add al, 0x24 ; call edi
0x0009872c : add al, 0x24 ; call esi
0x00079073 : add al, 0x24 ; pop eax ; add al, 0 ; add al, ch ; ret 0xfffc
0x00198074 : add al, 0x43 ; or eax, dword ptr [edx] ; push esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00174233 : add al, 0x45 ; or esi, dword ptr [esi + 0xa] ; ret
0x0018996e : add al, 0x48 ; or eax, dword ptr [edx] ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00026f3a : add al, 0x50 ; and eax, 0x1000 ; ret
0x00026e2a : add al, 0x50 ; and eax, 0x200 ; ret
0x00026e5a : add al, 0x50 ; and eax, 0x8000 ; ret
0x0014544b : add al, 0x5d ; pop ebx ; ret
0x00145452 : add al, 0x5e ; pop edi ; pop ebp ; pop ebx ; xor eax, eax ; ret
0x00089a4c : add al, 0x5f ; ret
0x000d8a2b : add al, 0x66 ; mov dword ptr [eax], edx ; xor eax, eax ; ret
0x00089a57 : add al, 0x66 ; mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x00126f2e : add al, 0x83 ; les ebp, ptr [eax] ; mov eax, edx ; pop ebx ; ret
0x00025f7b : add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00027033 : add al, 0x83 ; loopne 0x270ba ; ret
0x00025721 : add al, 0x83 ; ret 0x3910
0x000d4851 : add al, 0x83 ; ret 0x8340
0x0011887c : add al, 0x83 ; ret 0x8901
0x000c7362 : add al, 0x85 ; ror byte ptr [ecx - 0x77f04fab], cl ; ret
0x000c8d78 : add al, 0x85 ; ror byte ptr [edi], 0x94 ; ret 0xa5e9
0x0018473d : add al, 0x87 ; add eax, dword ptr [ebx] ; imul eax, dword ptr [ecx], 0xa ; ret
0x00177e71 : add al, 0x87 ; add eax, dword ptr [ebx] ; int1 ; add dword ptr [edx], ecx ; ret
0x00174a4d : add al, 0x87 ; add eax, dword ptr [ebx] ; pop ecx ; add al, 0xa ; ret
0x00187f6d : add al, 0x87 ; add eax, dword ptr [ebx] ; push ebx ; add cl, byte ptr [edx] ; ret
0x0019887d : add al, 0x87 ; add eax, dword ptr [ebx] ; salc ; add cl, byte ptr [edx] ; ret
0x00187c39 : add al, 0x87 ; add eax, dword ptr [ebx] ; xchg byte ptr [edx + ecx], al ; ret
0x00196d45 : add al, 0x87 ; add eax, dword ptr [edx] ; je 0x196d5b ; ret
0x00195e2d : add al, 0x87 ; add eax, dword ptr [edx] ; jno 0x195e43 ; ret
0x00085676 : add al, 0x88 ; inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x00089a46 : add al, 0x88 ; inc edx ; add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x00085679 : add al, 0x89 ; clc ; pop edi ; ret
0x00098f6b : add al, 0x89 ; cmp al, 0x24 ; call esi
0x00114171 : add al, 0x89 ; jl 0x1141a1 ; add al, 0x89 ; xor al, 0x24 ; call dword ptr [eax]
0x000d9353 : add al, 0x89 ; nop ; or al, 1 ; add byte ptr [eax], al ; xor eax, eax ; ret
0x000d9369 : add al, 0x89 ; nop ; or byte ptr [ecx], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x00094a3a : add al, 0x89 ; or byte ptr [ebx + 0x5b0c2444], cl ; pop esi ; ret
0x0011415d : add al, 0x89 ; push esp ; and al, 4 ; mov dword ptr [esp], esi ; call dword ptr [eax]
0x00068678 : add al, 0x89 ; push esp ; and al, 8 ; call 0x669a9
0x00067645 : add al, 0x89 ; push esp ; and al, 8 ; call 0x66c29
0x00079534 : add al, 0x89 ; push esp ; and al, 8 ; call eax
0x00124a55 : add al, 0x89 ; ret 0x8365
0x00114137 : add al, 0x89 ; ret 0xc031
0x00126f3f : add al, 0x89 ; ret 0xebeb
0x000b903b : add al, 0x89 ; sal bl, 1 ; ret
0x00114161 : add al, 0x89 ; xor al, 0x24 ; call dword ptr [eax]
0x00048e76 : add al, 0x89 ; xor al, 0x24 ; call eax
0x00129933 : add al, 0x8b ; inc eax ; pop esp ; ret
0x00129923 : add al, 0x8b ; inc eax ; push eax ; ret
0x00094a5e : add al, 0x8b ; inc esp ; and al, 0xc ; pop ebx ; pop esi ; ret
0x000d8a46 : add al, 0x8b ; inc esp ; and al, 8 ; mov dword ptr [eax], edx ; xor eax, eax ; ret
0x0002692c : add al, 0x8b ; insb byte ptr es:[edi], dx ; and al, 8 ; add esp, 0xc ; ret
0x00076c25 : add al, 0x8b ; je 0x76c55 ; xor al, 0x89 ; xor ch, cl ; ret 0xfffe
0x0001985b : add al, 0x8b ; push esp ; and al, 0x30 ; mov dword ptr [esp], edx ; call eax
0x00114b73 : add al, 0x8b ; push esp ; and al, 0x60 ; mov dword ptr [esp], edx ; call eax
0x00095a60 : add al, 0x8d ; inc edi ; lcall ptr [esi + 0x5f] ; pop ebp ; ret
0x00095a74 : add al, 0x8d ; inc edi ; std ; pop esi ; pop edi ; pop ebp ; ret
0x00089a49 : add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x00026f7c : add al, 0x90 ; ret
0x00168440 : add al, 0x92 ; in al, dx ; jmp eax
0x00168468 : add al, 0x96 ; in al, dx ; call eax
0x0001925f : add al, 0xb8 ; ret 0
0x00197e35 : add al, 0xc5 ; dec eax ; or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00199448 : add al, 0xc5 ; dec eax ; or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x0019903d : add al, 0xc5 ; dec eax ; or esp, dword ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x00174625 : add al, 0xc5 ; inc ebp ; or eax, dword ptr [edx] ; push esi ; ret
0x0018883d : add al, 0xc5 ; inc ebx ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x00174738 : add al, 0xc5 ; inc ebx ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00186540 : add al, 0xc5 ; inc ecx ; or eax, dword ptr [ebx] ; push ecx ; add dword ptr [edx], ecx ; ret
0x00184564 : add al, 0xc5 ; inc ecx ; or ebp, dword ptr [esi + 0xa] ; ret
0x0019585b : add al, 0xc5 ; inc ecx ; or ebx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x0018832f : add al, 0xc5 ; inc ecx ; or edx, dword ptr [esi + 0xa] ; ret
0x00184467 : add al, 0xc5 ; inc edi ; or eax, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x00187b63 : add al, 0xc5 ; inc edx ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00174678 : add al, 0xc5 ; inc edx ; or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00175834 : add al, 0xc5 ; inc esp ; or ebx, dword ptr [edx + 0xa] ; ret
0x0018874c : add al, 0xc5 ; inc esp ; or edi, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00199755 : add al, 0xc7 ; mov bl, 0x41 ; or ebx, dword ptr [eax + 0xa] ; ret
0x00168b58 : add al, 0xd2 ; out dx, al ; jmp esp
0x000d904a : add al, 0xe8 ; pushal ; ret
0x0008712b : add al, 0xf ; test dword ptr [esi + 6], ebx ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00166e41 : add al, 0xfd ; call dword ptr [eax]
0x00126f3c : add al, 0xff ; push eax ; add al, 0x89 ; ret 0xebeb
0x000d9a6a : add al, 1 ; ret 0x689
0x00097c7c : add al, 1 ; ret 0xff85
0x00186534 : add al, 2 ; jl 0x186546 ; ret
0x00189849 : add al, 3 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00187f40 : add al, 3 ; pop ebp ; push es ; ret
0x0018783b : add al, 4 ; lds eax, ptr [ebx + 0xb] ; dec ecx ; ret
0x00189c43 : add al, 4 ; lds eax, ptr [ecx + 0xb] ; add bl, byte ptr [esi + 0xa] ; ret
0x00196223 : add al, 4 ; lds ecx, ptr [eax + 0xb] ; add bl, byte ptr [ecx + 0xa] ; ret
0x0001934a : add al, 5 ; add byte ptr [eax], al ; pop ebx ; ret
0x00186a3f : add al, al ; call ecx
0x00179c2f : add al, al ; out dx, eax ; jmp esi
0x00187b2f : add al, al ; xor al, 0xf3 ; call dword ptr [esi]
0x00184727 : add al, bh ; adc dl, dh ; jmp dword ptr [eax]
0x00089b6e : add al, bl ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x00195252 : add al, byte ptr [eax] ; aas ; xor al, 0xf7 ; call dword ptr [eax]
0x00125d3f : add al, byte ptr [eax] ; add byte ptr [eax], al ; add bl, ch ; ret
0x00129a69 : add al, byte ptr [eax] ; add byte ptr [eax], al ; add esp, 0xc ; ret
0x00055e49 : add al, byte ptr [eax] ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x00095343 : add al, byte ptr [eax] ; add byte ptr [ecx], al ; clc ; add eax, ecx ; pop edi ; ret
0x000c6c4a : add al, byte ptr [eax] ; add byte ptr [ecx], bh ; ret 0x840f
0x00199d3e : add al, byte ptr [eax] ; and byte ptr [esi - 8], bl ; jmp dword ptr [ebx]
0x0019895e : add al, byte ptr [eax] ; cdq ; xor bh, al ; call dword ptr [eax]
0x00199522 : add al, byte ptr [eax] ; cld ; dec edi ; clc ; jmp dword ptr [edx]
0x00195a56 : add al, byte ptr [eax] ; cmp dword ptr [edx - 9], ecx ; call dword ptr [eax]
0x00197136 : add al, byte ptr [eax] ; dec eax ; mov cl, 0xf7 ; jmp dword ptr [esi]
0x00199d76 : add al, byte ptr [eax] ; dec eax ; pop esi ; clc ; jmp dword ptr [ebx]
0x0019946a : add al, byte ptr [eax] ; inc esp ; dec ebp ; clc ; jmp dword ptr [ebx]
0x0019535a : add al, byte ptr [eax] ; inc esp ; xor dh, bh ; call ebx
0x00199322 : add al, byte ptr [eax] ; insb byte ptr es:[edi], dx ; inc esp ; clc ; jmp dword ptr [eax]
0x0019933a : add al, byte ptr [eax] ; je 0x199387 ; clc ; jmp dword ptr [edi]
0x00198642 : add al, byte ptr [eax] ; jl 0x19865e ; clc ; jmp dword ptr [edi]
0x0019914a : add al, byte ptr [eax] ; les edi, ptr [esi] ; clc ; jmp dword ptr [edi]
0x00197442 : add al, byte ptr [eax] ; lodsb al, byte ptr [esi] ; ret
0x0019542a : add al, byte ptr [eax] ; mov word ptr [edi + esi*8], dr0 ; call dword ptr [eax]
0x00195d42 : add al, byte ptr [eax] ; mov word ptr [edi - 9], es ; jmp dword ptr [esi]
0x00195222 : add al, byte ptr [eax] ; pop edi ; xor al, 0xf7 ; call dword ptr [eax]
0x00198e6a : add al, byte ptr [eax] ; push esp ; aaa ; clc ; jmp dword ptr [eax]
0x0019877e : add al, byte ptr [eax] ; pushal ; sbb eax, edi ; call edx
0x0019595e : add al, byte ptr [ebx + 0xe590203] ; add al, 0xc6 ; ret
0x00178a7e : add al, byte ptr [ebx + eax*4 + 3] ; add al, byte ptr [esi + 0xe] ; add al, 0xc6 ; ret
0x00179d36 : add al, byte ptr [ebx + eax*4 + 3] ; jns 0x179d52 ; add al, 0xc6 ; ret
0x00178b6a : add al, byte ptr [ebx + eax*4 + 3] ; pushal ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00097c76 : add al, byte ptr [ebx - 0x1d3efe3e] ; add al, 1 ; ret 0xff85
0x00045e34 : add al, byte ptr [ebx - 0x4e343] ; call dword ptr [eax]
0x00174168 : add al, byte ptr [ebx] ; pop esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x46 ; ret
0x000a8874 : add al, byte ptr [ecx] ; ret 0x3c8d
0x00199c69 : add al, byte ptr [edi + 0xe] ; or byte ptr [esi + ecx + 4], al ; ret
0x00185c22 : add al, byte ptr [edx] ; bound ecx, qword ptr [esi] ; add al, 0xc6 ; ret
0x00197529 : add al, byte ptr [edx] ; pop eax ; push cs ; add al, 0xc6 ; ret
0x00196a2d : add al, byte ptr [edx] ; push ecx ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x0018534b : add al, ch ; inc edx ; call dword ptr [eax]
0x00174c6e : add al, ch ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00079078 : add al, ch ; ret 0xfffc
0x000e5140 : add al, ch ; sub eax, 0x8100044c ; ret
0x0018537b : add al, cl ; inc edx ; call dword ptr [eax]
0x00186477 : add al, cl ; insd dword ptr es:[edi], dx ; add dword ptr [eax], eax ; jmp 0x11185771
0x00174a77 : add al, cl ; push ebx ; add byte ptr [eax], al ; je 0x174adb ; in eax, dx ; call dword ptr [eax]
0x00188877 : add al, cl ; xchg eax, ecx ; add dword ptr [eax], eax ; cld ; hlt ; call dword ptr [eax]
0x00009557 : add al, dl ; ret 7
0x000d6e43 : add bh, ah ; ret
0x00125d3d : add bh, al ; add al, byte ptr [eax] ; add byte ptr [eax], al ; add bl, ch ; ret
0x000c7458 : add bh, al ; inc eax ; sbb al, 0 ; add byte ptr [eax], al ; add dh, dh ; ret 0xc740
0x000a726b : add bh, bh ; pop esi ; pop edi ; ret
0x00124a52 : add bh, bh ; push eax ; add al, 0x89 ; ret 0x8365
0x000b9b72 : add bh, bh ; ret
0x00056a6f : add bh, byte ptr [ecx] ; ret 0x1974
0x00179c71 : add bh, byte ptr [edx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00166e31 : add bh, ch ; call eax
0x00194c5b : add bh, dh ; sub esi, edi ; call dword ptr [eax]
0x0009843f : add bl, al ; xor eax, eax ; ret
0x0019752a : add bl, byte ptr [eax + 0xe] ; add al, 0xc6 ; ret
0x0019816d : add bl, byte ptr [ebp + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00189971 : add bl, byte ptr [ebx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00185831 : add bl, byte ptr [edx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00189b6f : add bl, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x00174225 : add bl, byte ptr [edx + ecx + 0xe] ; add al, 0xc6 ; ret
0x00189c48 : add bl, byte ptr [esi + 0xa] ; ret
0x000a7a2e : add bl, ch ; ret 0xb48d
0x0000713b : add byte ptr [0x22000000], dl ; add byte ptr [eax + eax], cl ; ret
0x0000583b : add byte ptr [eax + 0x22000001], bl ; add byte ptr [eax + eax], cl ; ret
0x000b906a : add byte ptr [eax + 0x26748d], dl ; ret
0x00177f27 : add byte ptr [eax + 0x28], cl ; out dx, eax ; call edx
0x0019443f : add byte ptr [eax + 0x3800024d], dl ; and dh, bh ; call dword ptr [eax]
0x0019524f : add byte ptr [eax + 0x3f00025b], ah ; xor al, 0xf7 ; call dword ptr [eax]
0x0018543b : add byte ptr [eax + 0x42], cl ; call dword ptr [eax]
0x00185437 : add byte ptr [eax + 0x4800015d], cl ; inc edx ; call dword ptr [eax]
0x0017463f : add byte ptr [eax + 0x54], al ; add byte ptr [eax], al ; pushfd ; fsubr st(4) ; jmp dword ptr [edi]
0x0001706a : add byte ptr [eax + 0x5b], bl ; pop esi ; pop edi ; pop ebp ; ret
0x00195427 : add byte ptr [eax + 0x5d], bh ; add al, byte ptr [eax] ; mov word ptr [edi + esi*8], dr0 ; call dword ptr [eax]
0x00174f4f : add byte ptr [eax + 0x5d], dl ; add byte ptr [eax], al ; pop esp ; imul ebp ; jmp dword ptr [ebx]
0x0018503f : add byte ptr [eax + 0x5e], al ; add dword ptr [eax], eax ; jl 0x185073 ; jmp dword ptr [esi]
0x00199d77 : add byte ptr [eax + 0x5e], cl ; clc ; jmp dword ptr [ebx]
0x00195357 : add byte ptr [eax + 0x61], bl ; add al, byte ptr [eax] ; inc esp ; xor dh, bh ; call ebx
0x0017433f : add byte ptr [eax + 0x6a00004c], dl ; aad 0xec ; call dword ptr [eax]
0x00195d3f : add byte ptr [eax + 0x6b], al ; add al, byte ptr [eax] ; mov word ptr [edi - 9], es ; jmp dword ptr [esi]
0x00176f57 : add byte ptr [eax + 0x7d], bl ; add byte ptr [eax], al ; aam 9 ; out dx, eax ; call esp
0x00187524 : add byte ptr [eax + 0xe], dh ; or byte ptr [edx + 9], al ; add eax, dword ptr [edx] ; push esi ; ret
0x00129a67 : add byte ptr [eax + 2], bh ; add esp, 0xc ; ret
0x000a742f : add byte ptr [eax + 4], bh ; ret
0x000a743f : add byte ptr [eax + 5], bh ; ret
0x000a744f : add byte ptr [eax + 6], bh ; ret
0x000a745f : add byte ptr [eax + 7], bh ; ret
0x00129a57 : add byte ptr [eax + 8], bh ; add esp, 0xc ; ret
0x00149155 : add byte ptr [eax + 8], bh ; pop edi ; ret
0x00177127 : add byte ptr [eax + eax], ch ; add byte ptr [eax], al ; jl 0x1771b1 ; add byte ptr [eax], al ; ret
0x00177c27 : add byte ptr [eax + eax], ch ; add byte ptr [eax], al ; jl 0x177bbc ; add byte ptr [eax], al ; ret 0xef21
0x00175d57 : add byte ptr [eax + eax], ch ; add byte ptr [eax], al ; lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; ret
0x0017745f : add byte ptr [eax + eax], ch ; add byte ptr [eax], al ; mov ah, 0x7d ; add byte ptr [eax], al ; ret 0xef13
0x0017923b : add byte ptr [eax + eax], ch ; add byte ptr [eax], al ; nop ; wait ; add byte ptr [eax], al ; ret
0x00009551 : add byte ptr [eax + eax], cl ; mov eax, dword ptr [0xd0000010] ; ret 7
0x00005841 : add byte ptr [eax + eax], cl ; ret
0x00009441 : add byte ptr [eax + eax], cl ; ret 0x38
0x00004231 : add byte ptr [eax + eax], cl ; ret 0x52
0x00167b4f : add byte ptr [eax + ebx - 0x15], dl ; call dword ptr [eax]
0x0018865b : add byte ptr [eax + ebx*8], ah ; jmp dword ptr [esi]
0x00186a3b : add byte ptr [eax + edi*2], bh ; add dword ptr [eax], eax ; sal dl, 0xf2 ; call ecx
0x0018674b : add byte ptr [eax + esi*2 - 0xdf7ffff], bl ; call dword ptr [eax]
0x000f975a : add byte ptr [eax - 0x158b7f80], 0x89 ; ret 0xeac1
0x00185347 : add byte ptr [eax - 0x17fffea4], bl ; inc edx ; call dword ptr [eax]
0x00168e27 : add byte ptr [eax - 0x25], cl ; out dx, eax ; jmp eax
0x0018856f : add byte ptr [eax - 0x29], ah ; jmp dword ptr [ecx]
0x0014763e : add byte ptr [eax - 0x3fcea1a5], dl ; pop edi ; ret
0x0019503f : add byte ptr [eax - 0x43fffda7], dl ; xor bh, dh ; call dword ptr [eax]
0x00199467 : add byte ptr [eax - 0x5e], ch ; add al, byte ptr [eax] ; inc esp ; dec ebp ; clc ; jmp dword ptr [ebx]
0x00199147 : add byte ptr [eax - 0x61], cl ; add al, byte ptr [eax] ; les edi, ptr [esi] ; clc ; jmp dword ptr [edi]
0x00198e67 : add byte ptr [eax - 0x64], ch ; add al, byte ptr [eax] ; push esp ; aaa ; clc ; jmp dword ptr [eax]
0x00188a67 : add byte ptr [eax - 0x68], ch ; add dword ptr [eax], eax ; hlt ; sbb esp, esi ; call eax
0x0019863f : add byte ptr [eax - 0x6c], al ; add al, byte ptr [eax] ; jl 0x198661 ; clc ; jmp dword ptr [edi]
0x00188657 : add byte ptr [eax - 0x6c], bl ; add dword ptr [eax], eax ; and al, 0xd8 ; jmp dword ptr [esi]
0x00188067 : add byte ptr [eax - 0x72], ch ; add dword ptr [eax], eax ; je 0x188034 ; jmp dword ptr [eax]
0x0019743f : add byte ptr [eax - 0x7e], al ; add al, byte ptr [eax] ; lodsb al, byte ptr [esi] ; ret
0x00187467 : add byte ptr [eax - 0x7e], ch ; add dword ptr [eax], eax ; test byte ptr [ecx], cl ; call edi
0x00194c57 : add byte ptr [eax - 0x8fffdab], ch ; sub esi, edi ; call dword ptr [eax]
0x00186e67 : add byte ptr [eax - 1], ah ; call dword ptr [eax]
0x000e5059 : add byte ptr [eax - 1], bh ; pop ebx ; pop esi ; pop edi ; ret
0x00007967 : add byte ptr [eax - 8], ah ; adc dword ptr [eax], eax ; ret
0x000e9a79 : add byte ptr [eax], 0 ; add esp, 0x18 ; mov al, 1 ; pop ebx ; ret
0x00026e5e : add byte ptr [eax], 0 ; ret
0x00199d3f : add byte ptr [eax], ah ; pop esi ; clc ; jmp dword ptr [ebx]
0x00176656 : add byte ptr [eax], al ; aaa ; add edi, ebp ; call dword ptr [eax]
0x00168156 : add byte ptr [eax], al ; aam 0x59 ; in al, dx ; call eax
0x00167d5e : add byte ptr [eax], al ; aam 0xb0 ; jmp 0x167d68
0x00168f2e : add byte ptr [eax], al ; aam 0xee ; out dx, eax ; jmp dword ptr [eax]
0x00176f5a : add byte ptr [eax], al ; aam 9 ; out dx, eax ; call esp
0x0000943e : add byte ptr [eax], al ; adc al, byte ptr [eax] ; or al, 0 ; ret 0x38
0x0000422e : add byte ptr [eax], al ; adc al, byte ptr [eax] ; or al, 0 ; ret 0x52
0x0000953e : add byte ptr [eax], al ; adc dword ptr [eax], eax ; and byte ptr [eax], al ; ret
0x0000837e : add byte ptr [eax], al ; adc dword ptr [eax], eax ; int1 ; jmp dword ptr [edx]
0x0016843e : add byte ptr [eax], al ; add al, 0x92 ; in al, dx ; jmp eax
0x00168466 : add byte ptr [eax], al ; add al, 0x96 ; in al, dx ; call eax
0x00168b56 : add byte ptr [eax], al ; add al, 0xd2 ; out dx, al ; jmp esp
0x00168b7e : add byte ptr [eax], al ; add al, 0xd9 ; out dx, al ; call eax
0x000d7060 : add byte ptr [eax], al ; add bl, ch ; ret
0x000a7a2c : add byte ptr [eax], al ; add bl, ch ; ret 0xb48d
0x000b9068 : add byte ptr [eax], al ; add byte ptr [eax + 0x26748d], dl ; ret
0x000a742d : add byte ptr [eax], al ; add byte ptr [eax + 4], bh ; ret
0x000a743d : add byte ptr [eax], al ; add byte ptr [eax + 5], bh ; ret
0x000a744d : add byte ptr [eax], al ; add byte ptr [eax + 6], bh ; ret
0x000a745d : add byte ptr [eax], al ; add byte ptr [eax + 7], bh ; ret
0x00149153 : add byte ptr [eax], al ; add byte ptr [eax + 8], bh ; pop edi ; ret
0x0019743d : add byte ptr [eax], al ; add byte ptr [eax - 0x7e], al ; add al, byte ptr [eax] ; lodsb al, byte ptr [esi] ; ret
0x0000837c : add byte ptr [eax], al ; add byte ptr [eax], al ; adc dword ptr [eax], eax ; int1 ; jmp dword ptr [edx]
0x0000837a : add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; adc dword ptr [eax], eax ; int1 ; jmp dword ptr [edx]
0x000a9a29 : add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], al ; ret 0x9389
0x0000837b : add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], dl ; add cl, dh ; jmp dword ptr [edx]
0x000d8435 : add byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 8 ; ret
0x00095c7c : add byte ptr [eax], al ; add byte ptr [eax], al ; bsf eax, eax ; add eax, edx ; ret
0x00076f59 : add byte ptr [eax], al ; add byte ptr [eax], al ; call dword ptr [eax]
0x00074d6c : add byte ptr [eax], al ; add byte ptr [eax], al ; call dword ptr [ecx]
0x00125d40 : add byte ptr [eax], al ; add byte ptr [eax], al ; jmp 0x125d0e
0x00098070 : add byte ptr [eax], al ; add byte ptr [eax], al ; jne 0x98071 ; pop esi ; pop edi ; pop ebp ; ret
0x0014843c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [ecx + 2] ; ret
0x0014844c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [ecx + 3] ; ret
0x0014845c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [ecx + 5] ; ret
0x0014846c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [ecx + 6] ; ret
0x0014847c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [ecx + 7] ; ret
0x0014742c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x0014743c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x0014744c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x0014745c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x0014746c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x0014747c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x0014795c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0014794c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0014793c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x00149c4c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 4] ; pop edi ; ret
0x0014792c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x00149c3c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x00148b2c : add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xe] ; ret
0x0008763c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [ecx], edx ; pop ebx ; ret
0x000b483c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [esp], edi ; call esi
0x0006626a : add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [esp], edx ; call eax
0x0006455c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [esp], esi ; call 0x707e9
0x000a742c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 4 ; ret
0x000a743c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 5 ; ret
0x000a744c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 6 ; ret
0x000a745c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, 7 ; ret
0x00127944 : add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, dword ptr [edx] ; add esp, 0xc ; ret
0x0009416c : add byte ptr [eax], al ; add byte ptr [eax], al ; mov eax, edi ; pop ebx ; pop edi ; ret
0x0008767c : add byte ptr [eax], al ; add byte ptr [eax], al ; movlpd qword ptr [ecx], xmm0 ; pop ebx ; ret
0x00149b7c : add byte ptr [eax], al ; add byte ptr [eax], al ; pop esi ; xor eax, eax ; pop edi ; ret
0x00019b64 : add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x00129a74 : add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; add esp, 0xc ; ret
0x000f723c : add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop ebx ; ret
0x0009597c : add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x0013837d : add byte ptr [eax], al ; add byte ptr [eax], bh ; ret 0x840f
0x000b9a62 : add byte ptr [eax], al ; add byte ptr [ebp - 0x2f], dh ; ret
0x00087a4d : add byte ptr [eax], al ; add byte ptr [ebp - 0x7cc78a40], al ; ret
0x00098071 : add byte ptr [eax], al ; add byte ptr [ebp - 0xe], dh ; pop esi ; pop edi ; pop ebp ; ret
0x000d9346 : add byte ptr [eax], al ; add byte ptr [ebx + 0x27602fa], al ; ret
0x00055c45 : add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; ret
0x00127945 : add byte ptr [eax], al ; add byte ptr [ebx + 0xcc48302], cl ; ret
0x00079267 : add byte ptr [eax], al ; add byte ptr [ebx - 0x16a4e73c], al ; in eax, dx ; ret 0xffff
0x00124a6d : add byte ptr [eax], al ; add byte ptr [ebx - 0x2f76e73c], al ; pop ebx ; ret
0x00149140 : add byte ptr [eax], al ; add byte ptr [ebx - 0x7bf0fc01], al ; ret 0
0x0011967d : add byte ptr [eax], al ; add byte ptr [ebx], bh ; lodsb al, byte ptr [esi] ; ret
0x0008766d : add byte ptr [eax], al ; add byte ptr [ecx + 0x3518911], cl ; pop ebx ; ret
0x0008764d : add byte ptr [eax], al ; add byte ptr [ecx + 0x4518811], cl ; pop ebx ; ret
0x000f5c43 : add byte ptr [eax], al ; add byte ptr [ecx + 0x72e82434], cl ; ret
0x0006455d : add byte ptr [eax], al ; add byte ptr [ecx + 0x78e82434], cl ; ret 0
0x000a5d5a : add byte ptr [eax], al ; add byte ptr [ecx + 0xfc085fe], cl ; xchg eax, ebp ; ret 0xd589
0x000f5c26 : add byte ptr [eax], al ; add byte ptr [ecx - 0x7017dbcc], cl ; ret
0x000a9a2b : add byte ptr [eax], al ; add byte ptr [ecx], al ; ret 0x9389
0x00038463 : add byte ptr [eax], al ; add byte ptr [ecx], ch ; ret 0x848d
0x0007435d : add byte ptr [eax], al ; add byte ptr [ecx], ch ; ret 0x933b
0x0000837d : add byte ptr [eax], al ; add byte ptr [ecx], dl ; add cl, dh ; jmp dword ptr [edx]
0x000c5b3f : add byte ptr [eax], al ; add byte ptr [edi + 0x5fd8f7fb], al ; ret
0x000a7222 : add byte ptr [eax], al ; add byte ptr [edi + 2], bh ; neg eax ; ret
0x0004507d : add byte ptr [eax], al ; add byte ptr [edi], cl ; inc ebp ; ret 0x8588
0x00124243 : add byte ptr [eax], al ; add byte ptr [edi], cl ; inc esp ; ret 0x8965
0x0009556d : add byte ptr [eax], al ; add byte ptr [edi], cl ; mov esp, 0x5ff801c0 ; ret
0x00054e3d : add byte ptr [eax], al ; add byte ptr [edi], cl ; xchg eax, esp ; ret 0xd089
0x0000713d : add byte ptr [eax], al ; add byte ptr [edx], ah ; add byte ptr [eax + eax], cl ; ret
0x0000943d : add byte ptr [eax], al ; add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x38
0x0000422d : add byte ptr [eax], al ; add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x52
0x0008767d : add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; adc eax, dword ptr [ecx] ; pop ebx ; ret
0x00095758 : add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; xlatb ; ret
0x000f8755 : add byte ptr [eax], al ; add cl, ch ; ret 0xfffd
0x0014685b : add byte ptr [eax], al ; add dh, dh ; ret 0x7501
0x000c745d : add byte ptr [eax], al ; add dh, dh ; ret 0xc740
0x00148f3c : add byte ptr [eax], al ; add dh, dh ; ret 0xf04
0x00148e3d : add byte ptr [eax], al ; add dh, dh ; ret 0xf10
0x00148f66 : add byte ptr [eax], al ; add dh, dh ; ret 0xf20
0x00148f6f : add byte ptr [eax], al ; add dh, dh ; ret 0xf40
0x00124b32 : add byte ptr [eax], al ; add dword ptr [ebp + 0x75], esi ; add esp, 8 ; pop ebx ; ret
0x00148e33 : add byte ptr [eax], al ; add eax, 3 ; pop edi ; ret
0x00148e59 : add byte ptr [eax], al ; add eax, 7 ; pop edi ; ret
0x00128c47 : add byte ptr [eax], al ; add esp, 0x14 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x000e9a7a : add byte ptr [eax], al ; add esp, 0x18 ; mov al, 1 ; pop ebx ; ret
0x00124a6e : add byte ptr [eax], al ; add esp, 0x18 ; mov eax, edx ; pop ebx ; ret
0x00079268 : add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; jmp 0x75568
0x00027731 : add byte ptr [eax], al ; add esp, 0x28 ; pop ebx ; ret
0x00115664 : add byte ptr [eax], al ; add esp, 0x48c ; ret
0x00078334 : add byte ptr [eax], al ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000d953f : add byte ptr [eax], al ; add esp, 0x54c ; ret
0x0007566e : add byte ptr [eax], al ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00129a4f : add byte ptr [eax], al ; add esp, 0xc ; ret
0x00068f5a : add byte ptr [eax], al ; add esp, 0xec ; ret
0x000d8437 : add byte ptr [eax], al ; add esp, 8 ; ret
0x00184722 : add byte ptr [eax], al ; and al, 0x55 ; add dword ptr [eax], eax ; clc ; adc dl, dh ; jmp dword ptr [eax]
0x00177f22 : add byte ptr [eax], al ; and al, 0x8d ; add byte ptr [eax], al ; dec eax ; sub bh, ch ; call edx
0x00168526 : add byte ptr [eax], al ; and al, 0xaf ; in al, dx ; call dword ptr [eax]
0x0000583e : add byte ptr [eax], al ; and al, byte ptr [eax] ; or al, 0 ; ret
0x0009556e : add byte ptr [eax], al ; bsf eax, eax ; add eax, edi ; pop edi ; ret
0x00095c7e : add byte ptr [eax], al ; bsf eax, eax ; add eax, edx ; ret
0x00095123 : add byte ptr [eax], al ; bsr eax, eax ; add eax, edi ; pop edi ; ret
0x0009582e : add byte ptr [eax], al ; bsr eax, eax ; lea eax, dword ptr [eax + ecx + 0x10] ; ret
0x0009583e : add byte ptr [eax], al ; bsr eax, eax ; lea eax, dword ptr [eax + ecx + 0x20] ; ret
0x0009584e : add byte ptr [eax], al ; bsr eax, eax ; lea eax, dword ptr [eax + ecx + 0x30] ; ret
0x00076f5b : add byte ptr [eax], al ; call dword ptr [eax]
0x00074d6e : add byte ptr [eax], al ; call dword ptr [ecx]
0x00019530 : add byte ptr [eax], al ; call eax
0x0018453a : add byte ptr [eax], al ; cmp al, 0x53 ; add dword ptr [eax], eax ; cmp bh, 0xf1 ; call edi
0x00186a3a : add byte ptr [eax], al ; cmp al, 0x78 ; add dword ptr [eax], eax ; sal dl, 0xf2 ; call ecx
0x00199d3a : add byte ptr [eax], al ; cmp al, 0xab ; add al, byte ptr [eax] ; and byte ptr [esi - 8], bl ; jmp dword ptr [ebx]
0x00199336 : add byte ptr [eax], al ; cmp byte ptr [ecx + 0x44740002], ah ; clc ; jmp dword ptr [edi]
0x000d9347 : add byte ptr [eax], al ; cmp edx, 2 ; jbe 0xd9358 ; ret
0x00185346 : add byte ptr [eax], al ; cwde ; pop esp ; add dword ptr [eax], eax ; call 0x1118459c
0x00168e26 : add byte ptr [eax], al ; dec eax ; fucomi st(7) ; jmp eax
0x00199146 : add byte ptr [eax], al ; dec eax ; lahf ; add al, byte ptr [eax] ; les edi, ptr [esi] ; clc ; jmp dword ptr [edi]
0x00177f26 : add byte ptr [eax], al ; dec eax ; sub bh, ch ; call edx
0x00188f4a : add byte ptr [eax], al ; dec esp ; popfd ; add dword ptr [eax], eax ; adc byte ptr [edx], dh ; hlt ; jmp dword ptr [esi]
0x00186476 : add byte ptr [eax], al ; enter 0x16d, 0 ; jmp 0x11185772
0x00188876 : add byte ptr [eax], al ; enter 0x191, 0 ; cld ; hlt ; call dword ptr [eax]
0x00174a76 : add byte ptr [eax], al ; enter 0x53, 0 ; je 0x174adc ; in eax, dx ; call dword ptr [eax]
0x00175472 : add byte ptr [eax], al ; fmul dword ptr [ebx] ; add byte ptr [eax], al ; mov byte ptr [ebx], al ; out dx, al ; call dword ptr [ecx]
0x00167f5e : add byte ptr [eax], al ; imul bl ; jmp eax
0x0018497e : add byte ptr [eax], al ; in al, 0 ; add dword ptr [eax], eax ; pop esp ; sbb dl, dh ; call dword ptr [ecx]
0x00195d3e : add byte ptr [eax], al ; inc eax ; imul eax, dword ptr [edx], 0 ; mov word ptr [edi - 9], es ; jmp dword ptr [esi]
0x0018503e : add byte ptr [eax], al ; inc eax ; pop esi ; add dword ptr [eax], eax ; jl 0x185074 ; jmp dword ptr [esi]
0x0017463e : add byte ptr [eax], al ; inc eax ; push esp ; add byte ptr [eax], al ; pushfd ; fsubr st(4) ; jmp dword ptr [edi]
0x0019863e : add byte ptr [eax], al ; inc eax ; xchg eax, esp ; add al, byte ptr [eax] ; jl 0x198662 ; clc ; jmp dword ptr [edi]
0x0016816e : add byte ptr [eax], al ; inc esp ; pop edx ; in al, dx ; call dword ptr [eax]
0x0017892a : add byte ptr [eax], al ; inc esp ; sub ch, bh ; jmp dword ptr [ebx]
0x0018856a : add byte ptr [eax], al ; insb byte ptr es:[edi], dx ; xchg eax, ebx ; add dword ptr [eax], eax ; pushal ; xlatb ; jmp dword ptr [ecx]
0x0016887e : add byte ptr [eax], al ; int1 ; je 0x168877 ; inc dword ptr [eax] ; ret
0x00178176 : add byte ptr [eax], al ; into ; sti ; call dword ptr [eax]
0x0014576b : add byte ptr [eax], al ; ja 0x145777 ; neg eax ; ret
0x00168836 : add byte ptr [eax], al ; je 0x1688af ; in eax, dx ; jmp dword ptr [eax - 0x3d]
0x00174a7a : add byte ptr [eax], al ; je 0x174ad8 ; in eax, dx ; call dword ptr [eax]
0x00176622 : add byte ptr [eax], al ; je 0x17669e ; add byte ptr [eax], al ; push edi ; add edi, ebp ; call dword ptr [eax]
0x00199d72 : add byte ptr [eax], al ; je 0x199d2a ; add al, byte ptr [eax] ; dec eax ; pop esi ; clc ; jmp dword ptr [ebx]
0x00149733 : add byte ptr [eax], al ; jg 0x149749 ; neg eax ; pop edi ; pop esi ; pop ebx ; ret
0x00149824 : add byte ptr [eax], al ; jg 0x149836 ; neg eax ; ret
0x000a7223 : add byte ptr [eax], al ; jg 0xa722f ; neg eax ; ret
0x0017712a : add byte ptr [eax], al ; jl 0x1771ae ; add byte ptr [eax], al ; ret
0x00177c2a : add byte ptr [eax], al ; jl 0x177bb9 ; add byte ptr [eax], al ; ret 0xef21
0x0019877a : add byte ptr [eax], al ; jl 0x19871c ; add al, byte ptr [eax] ; pushal ; sbb eax, edi ; call edx
0x00125d42 : add byte ptr [eax], al ; jmp 0x125d0c
0x000a7a2d : add byte ptr [eax], al ; jmp 0xa79f6
0x000d7061 : add byte ptr [eax], al ; jmp 0xd702b
0x00146c54 : add byte ptr [eax], al ; jne 0x146de9 ; pop ebx ; ret
0x00098072 : add byte ptr [eax], al ; jne 0x9806f ; pop esi ; pop edi ; pop ebp ; ret
0x000b9a63 : add byte ptr [eax], al ; jne 0xb9a3d ; ret
0x00195426 : add byte ptr [eax], al ; js 0x195490 ; add al, byte ptr [eax] ; mov word ptr [edi + esi*8], dr0 ; call dword ptr [eax]
0x00148f4f : add byte ptr [eax], al ; lea eax, dword ptr [eax + 3] ; pop edi ; ret
0x00148429 : add byte ptr [eax], al ; lea eax, dword ptr [ecx + 0xc] ; ret
0x0014843e : add byte ptr [eax], al ; lea eax, dword ptr [ecx + 2] ; ret
0x0014844e : add byte ptr [eax], al ; lea eax, dword ptr [ecx + 3] ; ret
0x0014845e : add byte ptr [eax], al ; lea eax, dword ptr [ecx + 5] ; ret
0x0014846e : add byte ptr [eax], al ; lea eax, dword ptr [ecx + 6] ; ret
0x0014847e : add byte ptr [eax], al ; lea eax, dword ptr [ecx + 7] ; ret
0x00147354 : add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x0014743e : add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x0014744e : add byte ptr [eax], al ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x0014745e : add byte ptr [eax], al ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x0014726b : add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x0014746e : add byte ptr [eax], al ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x0014747e : add byte ptr [eax], al ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x00147831 : add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00147856 : add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xc] ; pop edi ; ret
0x0014795e : add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0014794e : add byte ptr [eax], al ; lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0014793e : add byte ptr [eax], al ; lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x0014792e : add byte ptr [eax], al ; lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x00148a50 : add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xb] ; ret
0x00148b2e : add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xe] ; ret
0x00148a79 : add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xf] ; ret
0x00148a26 : add byte ptr [eax], al ; lea eax, dword ptr [edx + 7] ; ret
0x0002457b : add byte ptr [eax], al ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00178172 : add byte ptr [eax], al ; les ecx, ptr [edx + 0x26ce0000] ; sti ; call dword ptr [eax]
0x00167c2e : add byte ptr [eax], al ; les esi, ptr [ebx] ; jmp 0x167c38
0x00175d5a : add byte ptr [eax], al ; lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; ret
0x0019895a : add byte ptr [eax], al ; lodsb al, byte ptr [esi] ; xchg eax, edx ; add al, byte ptr [eax] ; cdq ; xor bh, al ; call dword ptr [eax]
0x00168876 : add byte ptr [eax], al ; loope 0x1688f3 ; in eax, dx ; call eax
0x00186962 : add byte ptr [eax], al ; mov ah, 0x72 ; add dword ptr [eax], eax ; cdq ; hlt ; call dword ptr [eax]
0x00186e62 : add byte ptr [eax], al ; mov ah, 0x77 ; add dword ptr [eax], eax ; pushal ; push edx ; call dword ptr [eax]
0x00187062 : add byte ptr [eax], al ; mov ah, 0x79 ; add dword ptr [eax], eax ; pop ecx ; add ebx, esi ; call dword ptr [eax]
0x00177462 : add byte ptr [eax], al ; mov ah, 0x7d ; add byte ptr [eax], al ; ret 0xef13
0x0019524e : add byte ptr [eax], al ; mov al, byte ptr [0x3f00025b] ; xor al, 0xf7 ; call dword ptr [eax]
0x00089b3e : add byte ptr [eax], al ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; ret
0x0008575e : add byte ptr [eax], al ; mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edx ; ret
0x00185436 : add byte ptr [eax], al ; mov byte ptr [ebp + 1], bl ; add byte ptr [eax + 0x42], cl ; call dword ptr [eax]
0x00175476 : add byte ptr [eax], al ; mov byte ptr [ebx], al ; out dx, al ; call dword ptr [ecx]
0x00168d26 : add byte ptr [eax], al ; mov ch, 0xce ; out dx, eax ; call dword ptr [eax]
0x00045048 : add byte ptr [eax], al ; mov dword ptr [ebp - 0x4b8], edi ; jmp edx
0x00019346 : add byte ptr [eax], al ; mov dword ptr [ecx + 0x504], edx ; pop ebx ; ret
0x0008764e : add byte ptr [eax], al ; mov dword ptr [ecx], edx ; mov byte ptr [ecx + 4], dl ; pop ebx ; ret
0x0008766e : add byte ptr [eax], al ; mov dword ptr [ecx], edx ; mov dword ptr [ecx + 3], edx ; pop ebx ; ret
0x0008765e : add byte ptr [eax], al ; mov dword ptr [ecx], edx ; mov word ptr [ecx + 4], dx ; pop ebx ; ret
0x0008763e : add byte ptr [eax], al ; mov dword ptr [ecx], edx ; pop ebx ; ret
0x00125d3c : add byte ptr [eax], al ; mov dword ptr [edx], 0 ; jmp 0x125d12
0x000d9126 : add byte ptr [eax], al ; mov dword ptr [esp + 4], eax ; call 0xc5438
0x00098f66 : add byte ptr [eax], al ; mov dword ptr [esp + 4], eax ; mov dword ptr [esp], edi ; call esi
0x00067c4c : add byte ptr [eax], al ; mov dword ptr [esp + 8], ecx ; mov dword ptr [esp], edx ; call eax
0x000b483e : add byte ptr [eax], al ; mov dword ptr [esp], edi ; call esi
0x0006455e : add byte ptr [eax], al ; mov dword ptr [esp], esi ; call 0x707e7
0x000b5c3b : add byte ptr [eax], al ; mov dword ptr gs:[edx], ecx ; add esp, 0x28 ; pop ebx ; ret
0x000a742e : add byte ptr [eax], al ; mov eax, 4 ; ret
0x000a743e : add byte ptr [eax], al ; mov eax, 5 ; ret
0x000a744e : add byte ptr [eax], al ; mov eax, 6 ; ret
0x000a745e : add byte ptr [eax], al ; mov eax, 7 ; ret
0x00149154 : add byte ptr [eax], al ; mov eax, 8 ; pop edi ; ret
0x00168856 : add byte ptr [eax], al ; mov eax, dword ptr [0x10ffed74] ; ret 0
0x0008557e : add byte ptr [eax], al ; mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; ret
0x00127946 : add byte ptr [eax], al ; mov eax, dword ptr [edx] ; add esp, 0xc ; ret
0x0002702e : add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; and eax, 0x7f ; ret
0x0012992e : add byte ptr [eax], al ; mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x5c] ; ret
0x00148251 : add byte ptr [eax], al ; mov eax, ecx ; ret
0x0009416e : add byte ptr [eax], al ; mov eax, edi ; pop ebx ; pop edi ; ret
0x00118a62 : add byte ptr [eax], al ; mov eax, edx ; pop esi ; pop edi ; ret
0x00019933 : add byte ptr [eax], al ; mov ebx, dword ptr [esp + 0xc] ; add esp, 0x1c ; ret
0x00064943 : add byte ptr [eax], al ; mov edx, eax ; jmp 0x6492a
0x00114523 : add byte ptr [eax], al ; mov esi, dword ptr [esp + 0x14] ; add esp, 0x1c ; ret
0x0008762e : add byte ptr [eax], al ; mov word ptr [ecx], dx ; mov byte ptr [ecx + 2], dl ; pop ebx ; ret
0x0018853a : add byte ptr [eax], al ; mov word ptr [esi + 0x1a850001], cs ; hlt ; call dword ptr [eax]
0x0008767e : add byte ptr [eax], al ; movlpd qword ptr [ecx], xmm0 ; pop ebx ; ret
0x00176652 : add byte ptr [eax], al ; movsb byte ptr es:[edi], byte ptr [esi] ; outsd dx, dword ptr [esi] ; add byte ptr [eax], al ; aaa ; add edi, ebp ; call dword ptr [eax]
0x0017433e : add byte ptr [eax], al ; nop ; dec esp ; add byte ptr [eax], al ; push -0x2b ; in al, dx ; call dword ptr [eax]
0x000b9069 : add byte ptr [eax], al ; nop ; lea esi, dword ptr [esi] ; ret
0x0014763d : add byte ptr [eax], al ; nop ; pop ebx ; pop esi ; xor eax, eax ; pop edi ; ret
0x0017923e : add byte ptr [eax], al ; nop ; wait ; add byte ptr [eax], al ; ret
0x0010507c : add byte ptr [eax], al ; or byte ptr [edi], 0x45 ; ret 0x90c3
0x000a7e7d : add byte ptr [eax], al ; or byte ptr [edi], 0x4e ; ret 0xc483
0x00178146 : add byte ptr [eax], al ; out dx, al ; sti ; call dword ptr [eax]
0x00176f56 : add byte ptr [eax], al ; pop eax ; jge 0x176f64 ; add ah, dl ; or edi, ebp ; call esp
0x00017069 : add byte ptr [eax], al ; pop eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00195356 : add byte ptr [eax], al ; pop eax ; popal ; add al, byte ptr [eax] ; inc esp ; xor dh, bh ; call ebx
0x00188656 : add byte ptr [eax], al ; pop eax ; xchg eax, esp ; add dword ptr [eax], eax ; and al, 0xd8 ; jmp dword ptr [esi]
0x00055c46 : add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x0001934c : add byte ptr [eax], al ; pop ebx ; ret
0x00087130 : add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x000a866b : add byte ptr [eax], al ; pop esi ; add eax, edx ; ret
0x00149b7e : add byte ptr [eax], al ; pop esi ; xor eax, eax ; pop edi ; ret
0x00174f52 : add byte ptr [eax], al ; pop esp ; imul ebp ; jmp dword ptr [ebx]
0x00168976 : add byte ptr [eax], al ; popfd ; in eax, dx ; jmp dword ptr [eax]
0x00174342 : add byte ptr [eax], al ; push -0x2b ; in al, dx ; call dword ptr [eax]
0x00199466 : add byte ptr [eax], al ; push 0x440002a2 ; dec ebp ; clc ; jmp dword ptr [ebx]
0x00198e66 : add byte ptr [eax], al ; push 0x5400029c ; aaa ; clc ; jmp dword ptr [eax]
0x00187466 : add byte ptr [eax], al ; push 0x84000182 ; or ebx, esi ; call edi
0x00188a66 : add byte ptr [eax], al ; push 0xf4000198 ; sbb esp, esi ; call eax
0x00174f4e : add byte ptr [eax], al ; push eax ; pop ebp ; add byte ptr [eax], al ; pop esp ; imul ebp ; jmp dword ptr [ebx]
0x0001966e : add byte ptr [eax], al ; push ebx ; call 0x129d7c
0x00176626 : add byte ptr [eax], al ; push edi ; add edi, ebp ; call dword ptr [eax]
0x00168e2e : add byte ptr [eax], al ; push esp ; fucomi st(7) ; call eax
0x00007966 : add byte ptr [eax], al ; pushal ; clc ; adc dword ptr [eax], eax ; ret
0x00199b5e : add byte ptr [eax], al ; pushal ; test eax, 0x5bbc0002 ; clc ; call dword ptr [ecx]
0x00174642 : add byte ptr [eax], al ; pushfd ; fsubr st(4) ; jmp dword ptr [edi]
0x0018674a : add byte ptr [eax], al ; pushfd ; jo 0x186759 ; add byte ptr [eax], cl ; call dword ptr [eax]
0x0019527e : add byte ptr [eax], al ; rcr byte ptr [ebx + 2], 1 ; add byte ptr [edi], bl ; xor al, 0xf7 ; call dword ptr [eax]
0x00177466 : add byte ptr [eax], al ; ret 0xef13
0x00177c2e : add byte ptr [eax], al ; ret 0xef21
0x00105047 : add byte ptr [eax], al ; ror ax, 8 ; ret
0x00168866 : add byte ptr [eax], al ; sal dword ptr [ebp + ebp*8 - 1], 0x70 ; ret 0
0x00177622 : add byte ptr [eax], al ; sbb al, 0x15 ; out dx, eax ; jmp dword ptr [eax]
0x00167b7e : add byte ptr [eax], al ; sbb ebp, ebx ; jmp dword ptr [eax]
0x00168546 : add byte ptr [eax], al ; scasd eax, dword ptr es:[edi] ; in al, dx ; call eax
0x00189d26 : add byte ptr [eax], al ; sub byte ptr [ebx - 0x205bffff], ch ; hlt ; call dword ptr [edx]
0x00184b26 : add byte ptr [eax], al ; sub byte ptr [ecx + 1], bl ; add byte ptr [edx + ebx], ah ; jmp ebx
0x00178926 : add byte ptr [eax], al ; sub byte ptr [edi + 0x2a440000], dl ; out dx, eax ; jmp dword ptr [ebx]
0x00185c7e : add byte ptr [eax], al ; sub byte ptr [edx + 1], 0 ; sbb al, 0xdd ; jmp dword ptr [edx]
0x00168c36 : add byte ptr [eax], al ; test bl, bh ; out dx, al ; jmp dword ptr [eax]
0x00187032 : add byte ptr [eax], al ; test byte ptr [ecx + 1], bh ; add byte ptr [ecx + 1], bh ; call dword ptr [eax]
0x0016884e : add byte ptr [eax], al ; xchg eax, ecx ; je 0x168845 ; jmp eax
0x00178142 : add byte ptr [eax], al ; xchg eax, esp ; mov al, byte ptr [eax] ; add dh, ch ; sti ; call dword ptr [eax]
0x00167d46 : add byte ptr [eax], al ; xchg eax, esp ; xchg eax, esi ; jmp 0x167d50
0x000c5b40 : add byte ptr [eax], al ; xchg ebx, edi ; neg eax ; pop edi ; ret
0x00168356 : add byte ptr [eax], al ; xor al, 0x73 ; in al, dx ; call dword ptr [eax]
0x00197132 : add byte ptr [eax], al ; xor al, 0x7f ; add al, byte ptr [eax] ; dec eax ; mov cl, 0xf7 ; jmp dword ptr [esi]
0x0019912e : add byte ptr [eax], al ; xor byte ptr [edi + 0x3ebc0002], bl ; clc ; jmp dword ptr [eax]
0x0018442e : add byte ptr [eax], al ; xor byte ptr [edx + 1], dl ; add ah, bl ; cmc ; int1 ; call dword ptr [ebx]
0x0005566e : add byte ptr [eax], al ; xor eax, eax ; add esp, 0xc ; ret
0x000f723e : add byte ptr [eax], al ; xor eax, eax ; pop ebx ; ret
0x00167b7c : add byte ptr [eax], bh ; add byte ptr [ebx + ebx - 0x15], ah ; jmp dword ptr [eax]
0x00194443 : add byte ptr [eax], bh ; and dh, bh ; call dword ptr [eax]
0x00199337 : add byte ptr [eax], bh ; mov eax, dword ptr [0x44740002] ; clc ; jmp dword ptr [edi]
0x00194b57 : add byte ptr [eax], bh ; sub bh, dh ; call esi
0x00194473 : add byte ptr [eax], bl ; and dh, bh ; call dword ptr [eax]
0x00184b27 : add byte ptr [eax], ch ; pop ecx ; add dword ptr [eax], eax ; and al, 0x1a ; jmp ebx
0x00189d27 : add byte ptr [eax], ch ; stosd dword ptr es:[edi], eax ; add dword ptr [eax], eax ; movsb byte ptr es:[edi], byte ptr [esi] ; fcompi st(4) ; call dword ptr [edx]
0x00178927 : add byte ptr [eax], ch ; xchg eax, edi ; add byte ptr [eax], al ; inc esp ; sub ch, bh ; jmp dword ptr [ebx]
0x0018674f : add byte ptr [eax], cl ; call dword ptr [eax]
0x0018442f : add byte ptr [eax], dh ; push edx ; add dword ptr [eax], eax ; fdivr st(5), st(0) ; int1 ; call dword ptr [ebx]
0x00026f3d : add byte ptr [eax], dl ; add byte ptr [eax], al ; ret
0x00188f4f : add byte ptr [eax], dl ; xor dh, ah ; jmp dword ptr [esi]
0x00169e47 : add byte ptr [ebp + 0x31], ch ; int1 ; call esp
0x0002457c : add byte ptr [ebp + 0x5e5bf465], cl ; pop edi ; pop ebp ; ret 4
0x00038a3f : add byte ptr [ebp + 0x75168bd2], al ; sbb dh, dh ; ret 0x7501
0x00147069 : add byte ptr [ebp + 0xbf], cl ; add dh, dh ; ret 0x7510
0x00188f4b : add byte ptr [ebp + ebx*4 + 1], cl ; add byte ptr [eax], dl ; xor dh, ah ; jmp dword ptr [esi]
0x00168977 : add byte ptr [ebp + ebx*4 - 0x13], ah ; jmp dword ptr [eax]
0x00169527 : add byte ptr [ebp + ecx*2 - 0x10], ah ; jmp dword ptr [eax]
0x0019946b : add byte ptr [ebp + ecx*2 - 8], al ; jmp dword ptr [ebx]
0x00174a7b : add byte ptr [ebp + edx*2 - 0x13], dh ; call dword ptr [eax]
0x0019877b : add byte ptr [ebp + edx*4 + 2], bh ; add byte ptr [eax + 0x19], ah ; clc ; call edx
0x000b9a64 : add byte ptr [ebp - 0x2f], dh ; ret
0x00119757 : add byte ptr [ebp - 0x464b36d], cl ; inc dword ptr [ebx] ; xchg eax, esp ; ret
0x000b9965 : add byte ptr [ebp - 0x46], dh ; mov eax, 0xfffa ; pop ebx ; ret
0x00148a7a : add byte ptr [ebp - 0x6f3cf0be], cl ; mov eax, edx ; ret
0x0014842a : add byte ptr [ebp - 0x6f3cf3bf], cl ; lea eax, dword ptr [ecx + 1] ; ret
0x00087a4f : add byte ptr [ebp - 0x7cc78a40], al ; ret
0x00185043 : add byte ptr [ebp - 0xe], bh ; jmp dword ptr [esi]
0x00098073 : add byte ptr [ebp - 0xe], dh ; pop esi ; pop edi ; pop ebp ; ret
0x000e9a7b : add byte ptr [ebx + 0x1b018c4], al ; pop ebx ; ret
0x000d9348 : add byte ptr [ebx + 0x27602fa], al ; ret
0x00096b34 : add byte ptr [ebx + 0x29202454], cl ; ret 0xc083
0x000a5650 : add byte ptr [ebx + 0x391c2454], cl ; ret 0xcf74
0x000b9036 : add byte ptr [ebx + 0x47e00fa], al ; mov eax, edx ; ret
0x00026f77 : add byte ptr [ebx + 0x48b3040], cl ; nop ; ret
0x000f7a4d : add byte ptr [ebx + 0x518b1445], cl ; adc al, 0x39 ; ret 0xa7d
0x0007566f : add byte ptr [ebx + 0x5e5b5cc4], al ; pop edi ; pop ebp ; ret
0x00055c47 : add byte ptr [ebx + 0x5e], bl ; ret
0x00097b77 : add byte ptr [ebx + 0x5f5e40c4], al ; pop ebp ; ret
0x0014872f : add byte ptr [ebx + 0xb7c0fc2], al ; lea eax, dword ptr [ecx + 0xf] ; ret
0x00127947 : add byte ptr [ebx + 0xcc48302], cl ; ret
0x00199d73 : add byte ptr [ebx + ebp*4 + 2], dh ; add byte ptr [eax + 0x5e], cl ; clc ; jmp dword ptr [ebx]
0x00199d3b : add byte ptr [ebx + ebp*4], bh ; add al, byte ptr [eax] ; and byte ptr [esi - 8], bl ; jmp dword ptr [ebx]
0x00168e2f : add byte ptr [ebx + ebx*8 - 0x11], dl ; call eax
0x00198643 : add byte ptr [ebx + edx - 8], bh ; jmp dword ptr [edi]
0x0018453b : add byte ptr [ebx + edx*2], bh ; add dword ptr [eax], eax ; cmp bh, 0xf1 ; call edi
0x0018856b : add byte ptr [ebx + edx*4 + 1], ch ; add byte ptr [eax - 0x29], ah ; jmp dword ptr [ecx]
0x00168357 : add byte ptr [ebx + esi*2], dh ; in al, dx ; call dword ptr [eax]
0x00079269 : add byte ptr [ebx - 0x16a4e73c], al ; in eax, dx ; ret 0xffff
0x000f5d2f : add byte ptr [ebx - 0x18], dl ; cmp eax, 0x81000340 ; ret
0x0011995f : add byte ptr [ebx - 0x18], dl ; or eax, 0x81000104 ; ret
0x00128b4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81000012 ; ret
0x00126f4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x8100002e ; ret
0x000e8a4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81000413 ; ret
0x000b5c4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81000741 ; ret
0x00099b4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81000902 ; ret
0x00035b4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81000f42 ; ret
0x00035a4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81000f43 ; ret
0x00026c4f : add byte ptr [ebx - 0x18], dl ; sbb eax, 0x81001031 ; ret
0x000c5c3f : add byte ptr [ebx - 0x18], dl ; sub eax, 0x81000641 ; ret
0x00124a6f : add byte ptr [ebx - 0x2f76e73c], al ; pop ebx ; ret
0x0001934d : add byte ptr [ebx - 0x3d], bl ; ret
0x00107d6b : add byte ptr [ebx - 0x71f0ff08], al ; ret
0x0012992f : add byte ptr [ebx - 0x74fbdbbc], cl ; inc eax ; pop esp ; ret
0x000a7b24 : add byte ptr [ebx - 0x76dfdba4], cl ; ret 0x7c8b
0x0008737c : add byte ptr [ebx - 0x76fd76ff], cl ; clc ; pop edi ; pop ebx ; ret
0x00149142 : add byte ptr [ebx - 0x7bf0fc01], al ; ret 0
0x0002702f : add byte ptr [ebx - 0x7cfbdbbc], cl ; loopne 0x270be ; ret
0x000e5e4f : add byte ptr [ebx - 0x8f7dbbc], cl ; ret 0xeff0
0x000a7a2a : add byte ptr [ebx], cl ; add byte ptr [eax], al ; jmp 0xa79f9
0x000e5324 : add byte ptr [ebx], dh ; test byte ptr [eax + edi], ah ; add al, 0 ; add byte ptr [ecx], cl ; ret 0x850f
0x00168857 : add byte ptr [ecx + 0x10ffed74], ah ; ret 0
0x0000943b : add byte ptr [ecx + 0x12000000], bl ; add byte ptr [eax + eax], cl ; ret 0x38
0x0008766f : add byte ptr [ecx + 0x3518911], cl ; pop ebx ; ret
0x0016885f : add byte ptr [ecx + 0x40ffed74], dh ; ret 0
0x0008764f : add byte ptr [ecx + 0x4518811], cl ; pop ebx ; ret
0x0008765f : add byte ptr [ecx + 0x51896611], cl ; add al, 0x5b ; ret
0x000f5c45 : add byte ptr [ecx + 0x72e82434], cl ; ret
0x0006455f : add byte ptr [ecx + 0x78e82434], cl ; ret 0
0x0018575c : add byte ptr [ecx + 0xe], al ; or byte ptr [ebx + 0x40e5902], al ; ret
0x00198224 : add byte ptr [ecx + 0xe], al ; or byte ptr [ebx + 0x40e6f02], al ; ret
0x00184d70 : add byte ptr [ecx + 0xe], bl ; or byte ptr [ebx + 0x40e4902], al ; ret
0x00105078 : add byte ptr [ecx + 0xf9], al ; or byte ptr [edi], 0x45 ; ret 0x90c3
0x000a5d5c : add byte ptr [ecx + 0xfc085fe], cl ; xchg eax, ebp ; ret 0xd589
0x00187037 : add byte ptr [ecx + 1], bh ; call dword ptr [eax]
0x00187067 : add byte ptr [ecx + 1], bl ; call dword ptr [eax]
0x00194b53 : add byte ptr [ecx + ebx*2 + 2], dl ; add byte ptr [eax], bh ; sub bh, dh ; call esi
0x00187063 : add byte ptr [ecx + edi*2 + 0x1590001], dh ; call dword ptr [eax]
0x00187033 : add byte ptr [ecx + edi*2 + 0x1790001], al ; call dword ptr [eax]
0x00044566 : add byte ptr [ecx - 0x101], al ; jg 0x444ff ; ret 0x870f
0x000d9046 : add byte ptr [ecx - 0x17fbdbbc], cl ; pushal ; ret
0x00009553 : add byte ptr [ecx - 0x2ffffff0], ah ; ret 7
0x000d776e : add byte ptr [ecx - 0x3e3fce2f], cl ; jmp 0x2d06d84
0x0001925b : add byte ptr [ecx - 0x47fbdbbc], cl ; ret 0
0x00168554 : add byte ptr [ecx - 0x507c0000], dh ; in al, dx ; jmp dword ptr [eax]
0x000f5c28 : add byte ptr [ecx - 0x7017dbcc], cl ; ret
0x000c7733 : add byte ptr [ecx - 0x74725bb3], cl ; movsb byte ptr es:[edi], byte ptr [esi] ; ret 0xfffb
0x00105135 : add byte ptr [ecx - 0x76d7db8c], cl ; ret 0xeac1
0x00067c4d : add byte ptr [ecx - 0x76f7dbb4], cl ; adc al, 0x24 ; call eax
0x00098f67 : add byte ptr [ecx - 0x76fbdbbc], cl ; cmp al, 0x24 ; call esi
0x0005452d : add byte ptr [ecx - 0x7cad8836], cl ; ret 0x830f
0x00177f23 : add byte ptr [ecx*4 + 0x28480000], ah ; out dx, eax ; call edx
0x00124b33 : add byte ptr [ecx], al ; jne 0x124bb4 ; add esp, 8 ; pop ebx ; ret
0x000a9a2d : add byte ptr [ecx], al ; ret 0x9389
0x00056d49 : add byte ptr [ecx], al ; test dword ptr [eax - 0x16000011], esi ; ret 0xfffc
0x00078075 : add byte ptr [ecx], bh ; ret 0x850f
0x0006412c : add byte ptr [ecx], bh ; ror byte ptr [edi], 1 ; inc edx ; ret 0x4589
0x00119447 : add byte ptr [ecx], bh ; xchg eax, esp ; ret
0x00038465 : add byte ptr [ecx], ch ; ret 0x848d
0x0007435f : add byte ptr [ecx], ch ; ret 0x933b
0x0011452f : add byte ptr [ecx], ch ; ret 0xea83
0x000a9829 : add byte ptr [ecx], cl ; ret 0x840f
0x00068525 : add byte ptr [ecx], dh ; lcall ptr [ebx - 0x77] ; clc ; pop esi ; pop edi ; pop ebp ; ret
0x000e5643 : add byte ptr [ecx], dh ; rcr byte ptr [ebx - 0x77], cl ; rcr byte ptr [esi + 0x5f], 1 ; pop ebp ; ret
0x000e9637 : add byte ptr [ecx], dh ; shr bl, cl ; ret 0x748d
0x00087131 : add byte ptr [edi + 0x5b], bl ; ret
0x000c5b41 : add byte ptr [edi + 0x5fd8f7fb], al ; ret
0x00176627 : add byte ptr [edi + 1], dl ; out dx, eax ; call dword ptr [eax]
0x000a7224 : add byte ptr [edi + 2], bh ; neg eax ; ret
0x00149734 : add byte ptr [edi + 9], bh ; neg eax ; pop edi ; pop esi ; pop ebx ; ret
0x00176653 : add byte ptr [edi + ebp*2 + 0x1370000], ah ; out dx, eax ; call dword ptr [eax]
0x00176623 : add byte ptr [edi + ebp*2], dh ; add byte ptr [edi + 1], dl ; out dx, eax ; call dword ptr [eax]
0x00168547 : add byte ptr [edi + ebp*4 - 0x14], ah ; call eax
0x00168527 : add byte ptr [edi + ebp*4], ah ; in al, dx ; call dword ptr [eax]
0x00197133 : add byte ptr [edi + edi*2], dh ; add al, byte ptr [eax] ; dec eax ; mov cl, 0xf7 ; jmp dword ptr [esi]
0x00198e6b : add byte ptr [edi + esi - 8], dl ; jmp dword ptr [eax]
0x00186e63 : add byte ptr [edi + esi*2 - 0x9fffff], dh ; call dword ptr [eax]
0x00174f53 : add byte ptr [edi + esi*8 - 0x13], bl ; jmp dword ptr [ebx]
0x00195253 : add byte ptr [edi], bh ; xor al, 0xf7 ; call dword ptr [eax]
0x00098961 : add byte ptr [edi], cl ; inc esp ; ret 0x4489
0x000f9769 : add byte ptr [edi], cl ; inc esp ; ret 0x568d
0x00124245 : add byte ptr [edi], cl ; inc esp ; ret 0x8965
0x00098421 : add byte ptr [edi], cl ; inc esp ; rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00095124 : add byte ptr [edi], cl ; mov ebp, 0x5ff801c0 ; ret
0x0009556f : add byte ptr [edi], cl ; mov esp, 0x5ff801c0 ; ret
0x000d4867 : add byte ptr [edi], cl ; xchg eax, esp ; ret 0x3d
0x00054e40 : add byte ptr [edi], cl ; xchg eax, esp ; ret 0xd089
0x00176657 : add byte ptr [edi], dh ; add edi, ebp ; call dword ptr [eax]
0x00007963 : add byte ptr [edx + 0x6000004b], cl ; clc ; adc dword ptr [eax], eax ; ret
0x0017892b : add byte ptr [edx + ebp - 0x11], al ; jmp dword ptr [ebx]
0x0016816f : add byte ptr [edx + ebx*2 - 0x14], al ; call dword ptr [eax]
0x00184b2b : add byte ptr [edx + ebx], ah ; jmp ebx
0x00178143 : add byte ptr [edx + ecx*4 + 0x26ee0000], dl ; sti ; call dword ptr [eax]
0x0019895b : add byte ptr [edx + edx*4 + 0x32990002], ch ; clc ; call dword ptr [eax]
0x0016843f : add byte ptr [edx + edx*4], al ; in al, dx ; jmp eax
0x00168b57 : add byte ptr [edx + edx*8], al ; out dx, al ; jmp esp
0x0019535b : add byte ptr [edx + esi - 9], al ; call ebx
0x00186933 : add byte ptr [edx + esi*2 - 0xb46ffff], al ; call dword ptr [eax]
0x00186963 : add byte ptr [edx + esi*2 - 0xb66ffff], dh ; call dword ptr [eax]
0x00174343 : add byte ptr [edx - 0x2b], ch ; in al, dx ; call dword ptr [eax]
0x0008563f : add byte ptr [edx - 0x76fd77ff], cl ; clc ; pop edi ; ret
0x00184723 : add byte ptr [edx*2 + 0x10f80001], ah ; jmp dword ptr [eax]
0x0000583f : add byte ptr [edx], ah ; add byte ptr [eax + eax], cl ; ret
0x00026e2d : add byte ptr [edx], al ; add byte ptr [eax], al ; ret
0x0000943f : add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x38
0x0000422f : add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x52
0x0006503f : add byte ptr [esi + 0x53], dl ; call 0x129d7c
0x0009575a : add byte ptr [esi + 0xf], ah ; xlatb ; ret
0x000b9039 : add byte ptr [esi + 4], bh ; mov eax, edx ; ret
0x00168837 : add byte ptr [esi + ebp*2 - 0x13], dh ; jmp dword ptr [eax - 0x3d]
0x0016916f : add byte ptr [esi + ecx - 0x10], dh ; jmp dword ptr [eax]
0x0018853b : add byte ptr [esi + ecx*4 + 0x1a850001], cl ; hlt ; call dword ptr [eax]
0x0018806b : add byte ptr [esi + edi*4 - 0xd], dh ; jmp dword ptr [eax]
0x00168467 : add byte ptr [esi + edx*4], al ; in al, dx ; call eax
0x00167f5f : add byte ptr [esi + esi*8 - 0x15], ah ; jmp eax
0x00187c23 : add byte ptr [esi + esi], cl ; call dword ptr [ecx]
0x00149a77 : add byte ptr [esi - 0x77], dl ; ret 0xfe89
0x0019606b : add byte ptr [esi - 9], al ; jmp dword ptr [eax]
0x0018887b : add byte ptr [esi], bh ; cld ; hlt ; call dword ptr [eax]
0x0000422b : add byte ptr [esi], bl ; add byte ptr [eax], al ; add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x52
0x00199323 : add byte ptr [esp + eax*2 - 8], ch ; jmp dword ptr [eax]
0x0019933b : add byte ptr [esp + eax*2 - 8], dh ; jmp dword ptr [edi]
0x00125269 : add byte ptr [esp + edx - 0x7d], dh ; ret 0x8328
0x0008763b : add byte ptr es:[eax], al ; add byte ptr [eax], al ; mov dword ptr [ecx], edx ; pop ebx ; ret
0x0009416b : add byte ptr es:[eax], al ; add byte ptr [eax], al ; mov eax, edi ; pop ebx ; pop edi ; ret
0x000f723b : add byte ptr es:[eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop ebx ; ret
0x0009597b : add byte ptr es:[eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x000e9526 : add byte ptr es:[ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x00097b76 : add byte ptr es:[ebx + 0x5f5e40c4], al ; pop ebp ; ret
0x0012997e : add byte ptr es:[ebx - 0x74fbdbbc], cl ; inc eax ; pop eax ; ret
0x000e9636 : add byte ptr es:[ecx], dh ; shr bl, cl ; ret 0x748d
0x0008563e : add byte ptr es:[edx - 0x76fd77ff], cl ; clc ; pop edi ; ret
0x00019b3e : add byte ptr ss:[eax], al ; pop ebx ; ret
0x00117648 : add ch, al ; and eax, 0x81000127 ; ret
0x00166e25 : add ch, bh ; jmp dword ptr [eax]
0x00198c45 : add ch, byte ptr [eax + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00197d49 : add ch, byte ptr [ebp + 0x41140e0a] ; ret
0x0018793d : add ch, byte ptr [edx + ecx + 0xe] ; add al, 0xc7 ; ret
0x00166944 : add cl, ah ; cld ; call dword ptr [eax + 0x20fffce1]
0x00168877 : add cl, ah ; je 0x16886c ; call eax
0x00166a34 : add cl, bh ; cld ; call edx
0x00085668 : add cl, byte ptr [eax - 0x776fdbe] ; pop edi ; ret
0x00178d22 : add cl, byte ptr [ecx + 0xe] ; add al, 0xc6 ; ret
0x00088363 : add cl, byte ptr [ecx - 0x2f76f7be] ; pop ebx ; ret
0x0008584a : add cl, byte ptr [ecx - 0x2f76f7be] ; ret
0x0008582a : add cl, byte ptr [ecx - 0x2f76f8be] ; ret
0x00185664 : add cl, byte ptr [edi + 0xa] ; ret
0x0008784d : add cl, byte ptr [edi] ; test dword ptr [0x5bffffff], edi ; ret
0x0008746d : add cl, byte ptr [edi] ; test dword ptr [ebx + eax], ebx ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00148f38 : add cl, byte ptr [edi] ; test dword ptr [ecx - 0xa000000], esi ; ret 0xf04
0x0014863a : add cl, byte ptr [edi] ; test dword ptr [edi - 0x7d000000], ebx ; ret 0xf08
0x00148e25 : add cl, byte ptr [edi] ; test eax, esp ; add eax, dword ptr [eax] ; add dh, dh ; ret 0xf04
0x000f8757 : add cl, ch ; ret 0xfffd
0x00008421 : add cl, dh ; jmp edi
0x00145446 : add dh, bh ; fadd dword ptr [ebx + 0x5b5d04c4] ; ret
0x0013807a : add dh, bh ; ret 2
0x00095c6c : add dh, byte ptr [eax] ; ret
0x00195e30 : add dh, byte ptr [ecx + 0xa] ; ret
0x000d934b : add dh, byte ptr [esi + 2] ; ret
0x00178147 : add dh, ch ; sti ; call dword ptr [eax]
0x00178177 : add dh, cl ; sti ; call dword ptr [eax]
0x0014685d : add dh, dh ; ret 0x7501
0x000c745f : add dh, dh ; ret 0xc740
0x00147241 : add dh, dh ; ret 0xf10
0x00147252 : add dh, dh ; ret 0xf20
0x00147263 : add dh, dh ; ret 0xf40
0x00166e74 : add dl, byte ptr [eax] ; std ; call dword ptr [edx + 0x22fffd10]
0x00189636 : add dl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00196a2e : add dl, byte ptr [ecx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00198060 : add dl, byte ptr [edi + 0x43140e0a] ; ret
0x00196e3d : add dl, byte ptr [edx - 0x3938fbf2] ; ret
0x00198077 : add dl, byte ptr [esi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00196d42 : add dword ptr [0x3870486], 2 ; je 0x196d5e ; ret
0x00195e2a : add dword ptr [0x3870486], 2 ; jno 0x195e46 ; ret
0x00187f3d : add dword ptr [0x5d030486], 6 ; ret
0x00186531 : add dword ptr [0x7c020486], 0xa ; ret
0x00085641 : add dword ptr [eax + 0x5ff88902], ecx ; ret
0x000f7233 : add dword ptr [eax + 0xf], eax ; inc esp ; ret 0x8dc3
0x00167b46 : add dword ptr [eax], eax ; aam 0x15 ; jmp 0x167b50
0x00188f4e : add dword ptr [eax], eax ; adc byte ptr [edx], dh ; hlt ; jmp dword ptr [esi]
0x0014763c : add dword ptr [eax], eax ; add byte ptr [eax - 0x3fcea1a5], dl ; pop edi ; ret
0x00145769 : add dword ptr [eax], eax ; add byte ptr [eax], al ; ja 0x145779 ; neg eax ; ret
0x00149822 : add dword ptr [eax], eax ; add byte ptr [eax], al ; jg 0x149838 ; neg eax ; ret
0x000a7221 : add dword ptr [eax], eax ; add byte ptr [eax], al ; jg 0xa7231 ; neg eax ; ret
0x000e8c53 : add dword ptr [eax], eax ; add byte ptr [eax], al ; pop ebx ; ret
0x0005566c : add dword ptr [eax], eax ; add byte ptr [eax], al ; xor eax, eax ; add esp, 0xc ; ret
0x000d9044 : add dword ptr [eax], eax ; add byte ptr [ecx - 0x17fbdbbc], cl ; pushal ; ret
0x00078073 : add dword ptr [eax], eax ; add byte ptr [ecx], bh ; ret 0x850f
0x00095122 : add dword ptr [eax], eax ; add byte ptr [edi], cl ; mov ebp, 0x5ff801c0 ; ret
0x000d4865 : add dword ptr [eax], eax ; add byte ptr [edi], cl ; xchg eax, esp ; ret 0x3d
0x0000583d : add dword ptr [eax], eax ; add byte ptr [edx], ah ; add byte ptr [eax + eax], cl ; ret
0x00149a75 : add dword ptr [eax], eax ; add byte ptr [esi - 0x77], dl ; ret 0xfe89
0x0014723f : add dword ptr [eax], eax ; add dh, dh ; ret 0xf10
0x00147250 : add dword ptr [eax], eax ; add dh, dh ; ret 0xf20
0x00147261 : add dword ptr [eax], eax ; add dh, dh ; ret 0xf40
0x00184b2a : add dword ptr [eax], eax ; and al, 0x1a ; jmp ebx
0x0018865a : add dword ptr [eax], eax ; and al, 0xd8 ; jmp dword ptr [esi]
0x0018534a : add dword ptr [eax], eax ; call 0x11184598
0x00186966 : add dword ptr [eax], eax ; cdq ; hlt ; call dword ptr [eax]
0x00184726 : add dword ptr [eax], eax ; clc ; adc dl, dh ; jmp dword ptr [eax]
0x0018887a : add dword ptr [eax], eax ; cld ; hlt ; call dword ptr [eax]
0x0018453e : add dword ptr [eax], eax ; cmp bh, 0xf1 ; call edi
0x0018543a : add dword ptr [eax], eax ; dec eax ; inc edx ; call dword ptr [eax]
0x0016967e : add dword ptr [eax], eax ; dec ebp ; jb 0x169678 ; call dword ptr [eax]
0x00184432 : add dword ptr [eax], eax ; fdivr st(5), st(0) ; int1 ; call dword ptr [ebx]
0x00188a6a : add dword ptr [eax], eax ; hlt ; sbb esp, esi ; call eax
0x00169c66 : add dword ptr [eax], eax ; hlt ; sub al, 0xf1 ; jmp esp
0x00169e46 : add dword ptr [eax], eax ; insd dword ptr es:[edi], dx ; xor ecx, esi ; call esp
0x0018806a : add dword ptr [eax], eax ; je 0x188031 ; jmp dword ptr [eax]
0x00185042 : add dword ptr [eax], eax ; jl 0x185070 ; jmp dword ptr [esi]
0x0018647a : add dword ptr [eax], eax ; jmp 0x1118576e
0x00187036 : add dword ptr [eax], eax ; jns 0x187040 ; call dword ptr [eax]
0x00189d2a : add dword ptr [eax], eax ; movsb byte ptr es:[edi], byte ptr [esi] ; fcompi st(4) ; call dword ptr [edx]
0x0016997e : add dword ptr [eax], eax ; movsb byte ptr es:[edi], byte ptr [esi] ; mov bh, 0xf0 ; call esp
0x00187c22 : add dword ptr [eax], eax ; or al, 0x36 ; call dword ptr [ecx]
0x0018674e : add dword ptr [eax], eax ; or dl, dh ; call dword ptr [eax]
0x00187066 : add dword ptr [eax], eax ; pop ecx ; add ebx, esi ; call dword ptr [eax]
0x00167b4e : add dword ptr [eax], eax ; push esp ; sbb bl, ch ; call dword ptr [eax]
0x00186e66 : add dword ptr [eax], eax ; pushal ; push edx ; call dword ptr [eax]
0x0018856e : add dword ptr [eax], eax ; pushal ; xlatb ; jmp dword ptr [ecx]
0x00186a3e : add dword ptr [eax], eax ; sal dl, 0xf2 ; call ecx
0x0018746a : add dword ptr [eax], eax ; test byte ptr [ecx], cl ; call edi
0x0018853e : add dword ptr [eax], eax ; test dword ptr [edx], ebx ; hlt ; call dword ptr [eax]
0x0009587c : add dword ptr [eax], edx ; ret
0x00124b34 : add dword ptr [ebp + 0x75], esi ; add esp, 8 ; pop ebx ; ret
0x00094f4b : add dword ptr [ebp - 0x36], esi ; nop ; pop esi ; pop edi ; pop ebp ; ret
0x00097039 : add dword ptr [ebx + 0x211c244c], ecx ; ret 0xd789
0x000e8443 : add dword ptr [ebx + 0x5e5b24c4], eax ; ret
0x000f8b33 : add dword ptr [ebx + 0x5e5b3cc4], eax ; pop edi ; pop ebp ; ret
0x00019d26 : add dword ptr [ebx - 0x76ebdb94], ecx ; ret 0x4c89
0x00127c72 : add dword ptr [ebx - 0x7ac3dbbc], ecx ; ret 0x1574
0x00127b53 : add dword ptr [ebx - 0x7ac7dbbc], ecx ; ret 0x840f
0x000d4429 : add dword ptr [ebx - 0x7ccfdbbc], ecx ; ret 0x8940
0x00197035 : add dword ptr [ebx], 0x4f ; xchg byte ptr [edx], al ; jno 0x197053 ; add al, 0xc6 ; ret
0x00195b41 : add dword ptr [ebx], 0x51 ; xchg byte ptr [edx], al ; jo 0x195b5f ; add al, 0xc6 ; ret
0x00178b6c : add dword ptr [ebx], 0x60 ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00179d38 : add dword ptr [ebx], 0x79 ; push cs ; add al, 0xc6 ; ret
0x00089941 : add dword ptr [ecx + 0x3428d02], ecx ; pop edi ; ret
0x00089b71 : add dword ptr [ecx + 0x3428d02], ecx ; ret
0x00088431 : add dword ptr [ecx + 0x5bd08902], ecx ; ret
0x0008737e : add dword ptr [ecx + 0x5ff88902], ecx ; pop ebx ; ret
0x00049352 : add dword ptr [ecx - 0x760fd638], ecx ; inc ebp ; mov ah, 0xe9 ; ret
0x000a544b : add dword ptr [ecx], edi ; ret 0x1375
0x00038a62 : add dword ptr [ecx], edi ; ret 0x689
0x00124533 : add dword ptr [edi], ebp ; jbe 0x1244c2 ; ret 0xc709
0x0008744b : add dword ptr [edi], ecx ; test dword ptr [esi], edi ; add eax, dword ptr [eax] ; add byte ptr [edi + 0x5b], bl ; ret
0x0017416b : add dword ptr [edx], ecx ; push cs ; adc al, 0x46 ; ret
0x00089973 : add dword ptr [esi + 0xf], esp ; adc eax, dword ptr [edx] ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x0016997d : add dword ptr cs:[eax], eax ; movsb byte ptr es:[edi], byte ptr [esi] ; mov bh, 0xf0 ; call esp
0x00078072 : add dword ptr fs:[eax], eax ; add byte ptr [ecx], bh ; ret 0x850f
0x00019b63 : add eax, 0 ; ret
0x000c7352 : add eax, 0x108 ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0001952d : add eax, 0x18 ; call eax
0x000a7f33 : add eax, 0x291ff8c1 ; ret 0x1b8
0x0017485b : add eax, 0x3870486 ; add ah, al ; ret
0x0018565f : add eax, 0x3870486 ; add cl, byte ptr [edi + 0xa] ; ret
0x00195e2b : add eax, 0x3870486 ; add dh, byte ptr [ecx + 0xa] ; ret
0x0018754f : add eax, 0x3870486 ; add ebx, esi ; add dword ptr [edx], ecx ; ret
0x0019887b : add eax, 0x3870486 ; add edx, esi ; add cl, byte ptr [edx] ; ret
0x0019602f : add eax, 0x3870486 ; add esi, dword ptr [ecx + eax + 0xa] ; ret
0x00177e6f : add eax, 0x3870486 ; add esi, ecx ; add dword ptr [edx], ecx ; ret
0x00187f3e : add eax, 0x5d030486 ; push es ; ret
0x00138f6a : add eax, 0x81ffff0e ; ret
0x00134860 : add eax, 0x8b1c035f ; jmp ebx
0x00098438 : add eax, 0xc ; nop ; lea esi, dword ptr [esi] ; ret
0x00149227 : add eax, 0xc ; pop edi ; ret
0x00094b44 : add eax, 0xc24448b ; pop ebx ; pop esi ; ret
0x0001934b : add eax, 0xc35b0000 ; ret
0x0014922c : add eax, 0xd ; pop edi ; ret
0x00149231 : add eax, 0xe ; pop edi ; ret
0x000d9437 : add eax, 0xf0890000 ; pop ebx ; pop esi ; ret
0x00148e35 : add eax, 3 ; pop edi ; ret
0x00148e5b : add eax, 7 ; pop edi ; ret
0x00098430 : add eax, 8 ; ret
0x00019b62 : add eax, dword ptr [0] ; ret
0x000a7421 : add eax, dword ptr [eax] ; add byte ptr [eax], al ; ret
0x0008744f : add eax, dword ptr [eax] ; add byte ptr [edi + 0x5b], bl ; ret
0x00148e29 : add eax, dword ptr [eax] ; add dh, dh ; ret 0xf04
0x00148e46 : add eax, dword ptr [eax] ; add dh, dh ; ret 0xf20
0x00148e4f : add eax, dword ptr [eax] ; add dh, dh ; ret 0xf40
0x00118876 : add eax, dword ptr [ebx + 0x5689fce2] ; add al, 0x83 ; ret 0x8901
0x00198e52 : add eax, dword ptr [ebx + 0xe] ; adc byte ptr [ebx + 0xc0e7e04], al ; ret
0x00189848 : add eax, dword ptr [ebx + eax] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x0018473f : add eax, dword ptr [ebx] ; imul eax, dword ptr [ecx], 0xa ; ret
0x00177e73 : add eax, dword ptr [ebx] ; int1 ; add dword ptr [edx], ecx ; ret
0x00174a4f : add eax, dword ptr [ebx] ; pop ecx ; add al, 0xa ; ret
0x00187f6f : add eax, dword ptr [ebx] ; push ebx ; add cl, byte ptr [edx] ; ret
0x00187c3b : add eax, dword ptr [ebx] ; xchg byte ptr [edx + ecx], al ; ret
0x00196469 : add eax, dword ptr [ecx + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00029a29 : add eax, dword ptr [ecx] ; ret 0xd001
0x00187f3b : add eax, dword ptr [edx - 0x7d] ; add eax, 0x5d030486 ; push es ; ret
0x00178d21 : add eax, dword ptr [edx] ; dec ecx ; push cs ; add al, 0xc6 ; ret
0x00196d47 : add eax, dword ptr [edx] ; je 0x196d59 ; ret
0x00195e2f : add eax, dword ptr [edx] ; jno 0x195e41 ; ret
0x0018752a : add eax, dword ptr [edx] ; push esi ; ret
0x0008744e : add eax, dword ptr ds:[eax] ; add byte ptr [edi + 0x5b], bl ; ret
0x00019b61 : add eax, dword ptr gs:[0] ; ret
0x000c5c31 : add eax, ecx ; cmp esi, edx ; ja 0xc5c2f ; pop esi ; ret
0x00095276 : add eax, edi ; sub eax, 0x10 ; pop edi ; ret
0x00095964 : add eax, edi ; xor ch, ch ; add eax, ecx ; pop edi ; ret
0x00095237 : add eax, esi ; pop ebx ; pop esi ; sub eax, 0x10 ; pop edi ; ret
0x00166e2d : add ebp, edi ; inc dword ptr [eax + 2] ; std ; call eax
0x000a7d49 : add ebp, esi ; jmp 0xa7d13
0x00139459 : add ebx, 0x2dc87 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013934f : add ebx, 0x2dd91 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00139248 : add ebx, 0x2de98 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013913f : add ebx, 0x2dfa1 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00138f6e : add ebx, 0x2dfb2 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013914f : add ebx, 0x2e091 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00138479 : add ebx, 0x2eaa7 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013836f : add ebx, 0x2ebb1 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00138268 : add ebx, 0x2ecb8 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013815f : add ebx, 0x2edc1 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013804c : add ebx, 0x2ee14 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013816f : add ebx, 0x2eeb1 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00135769 : add ebx, 0x31437 ; add ebx, dword ptr [ebx + edi*4] ; jmp ebx
0x0018582e : add ebx, dword ptr [eax - 0x7a] ; add bl, byte ptr [edx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00187f41 : add ebx, dword ptr [ebp + 6] ; ret
0x00174169 : add ebx, dword ptr [ecx + eax + 0xa] ; push cs ; adc al, 0x46 ; ret
0x00134740 : add ebx, dword ptr [edi + 3] ; sbb al, 0x8b ; jmp ebx
0x00185e2d : add ebx, dword ptr [edx - 0xe] ; jmp dword ptr [edx]
0x00187554 : add ebx, esi ; add dword ptr [edx], ecx ; ret
0x00085633 : add ebx, esi ; movq qword ptr [edx], mm0 ; mov eax, edi ; pop edi ; ret
0x00094971 : add ecx, 0xc6013 ; add ecx, dword ptr [ecx + ebx*4] ; jmp ecx
0x00094954 : add ecx, 0xc6030 ; add ecx, dword ptr [ecx + ebx*4] ; jmp ecx
0x00094927 : add ecx, 0xc605d ; add ecx, dword ptr [ecx + ebx*4] ; jmp ecx
0x00094872 : add ecx, 0xc6092 ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x00094848 : add ecx, 0xc60bc ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x0009482f : add ecx, 0xc60d5 ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x00094749 : add ecx, 0xc61bb ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x00094a7c : add ecx, dword ptr [ebx + 0x5b0c2444] ; pop esi ; ret
0x00089a76 : add ecx, dword ptr [ecx + 0x428d0342] ; push es ; pop edi ; ret
0x00197526 : add ecx, dword ptr [edi - 0x7a] ; add al, byte ptr [edx] ; pop eax ; push cs ; add al, 0xc6 ; ret
0x00197036 : add ecx, dword ptr [edi - 0x7a] ; add dh, byte ptr [ecx + 0xe] ; add al, 0xc6 ; ret
0x00189131 : add edi, dword ptr [eax] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x00179d39 : add edi, dword ptr [ecx + 0xe] ; add al, 0xc6 ; ret
0x00176921 : add edi, ebp ; call dword ptr [ebx]
0x00148730 : add edx, 0xf ; jl 0x148748 ; lea eax, dword ptr [ecx + 0xf] ; ret
0x00126f2c : add edx, dword ptr [eax + 4] ; add esp, 0x28 ; mov eax, edx ; pop ebx ; ret
0x0017427a : add edx, dword ptr [ebx - 0x7a] ; add ah, byte ptr [ebp + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00179c6e : add edx, dword ptr [ebx - 0x7a] ; add bh, byte ptr [edx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x0019816a : add edx, dword ptr [ebx - 0x7a] ; add bl, byte ptr [ebp + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00174222 : add edx, dword ptr [ebx - 0x7a] ; add bl, byte ptr [edx + ecx + 0xe] ; add al, 0xc6 ; ret
0x00198c42 : add edx, dword ptr [ebx - 0x7a] ; add ch, byte ptr [eax + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00186c6c : add edx, dword ptr [ecx + eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00195b42 : add edx, dword ptr [ecx - 0x7a] ; add dh, byte ptr [eax + 0xe] ; add al, 0xc6 ; ret
0x0018793a : add edx, dword ptr [edi - 0x79] ; add ch, byte ptr [edx + ecx + 0xe] ; add al, 0xc7 ; ret
0x00095866 : add edx, eax ; jl 0x958a6 ; add eax, ecx ; ret
0x00095876 : add edx, eax ; jl 0x958a8 ; lea eax, dword ptr [ecx + eax + 0x10] ; ret
0x00196451 : add edx, ebp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00189959 : add edx, esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x00095d35 : add esi, dword ptr [eax + edx - 0x7d] ; ret 0x3904
0x00196034 : add esi, dword ptr [ecx + eax + 0xa] ; ret
0x0018737c : add esi, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x0006812c : add esi, ebx ; ret
0x00177e74 : add esi, ecx ; add dword ptr [edx], ecx ; ret
0x0018733b : add esi, esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x00114a75 : add esp, 0x10 ; pop esi ; movzx eax, al ; pop edi ; pop ebp ; ret
0x000a5738 : add esp, 0x10 ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x00124d31 : add esp, 0x14 ; mov eax, edx ; pop ebx ; pop esi ; ret
0x000e9a7c : add esp, 0x18 ; mov al, 1 ; pop ebx ; ret
0x000e8c4f : add esp, 0x18 ; mov eax, 1 ; pop ebx ; ret
0x0007926a : add esp, 0x18 ; pop ebx ; jmp 0x75566
0x00124773 : add esp, 0x1c ; mov eax, edx ; ret
0x00114e7c : add esp, 0x1c ; movzx eax, al ; ret
0x00019939 : add esp, 0x1c ; ret
0x00055450 : add esp, 0x28 ; pop ebx ; mov eax, edx ; ret
0x000a7b40 : add esp, 0x2c ; imul eax, edx ; ret
0x000e465b : add esp, 0x2c ; mov eax, ebp ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00065b72 : add esp, 0x2c ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00019871 : add esp, 0x2c ; ret
0x000d9c66 : add esp, 0x2c ; ret 8
0x000b555e : add esp, 0x30 ; pop ebx ; pop esi ; pop edi ; ret
0x00064642 : add esp, 0x3c ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0006627c : add esp, 0x3c ; pop ebx ; pop esi ; mov eax, edi ; pop edi ; pop ebp ; ret
0x00127b72 : add esp, 0x40 ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x00097b78 : add esp, 0x40 ; pop esi ; pop edi ; pop ebp ; ret
0x000e6261 : add esp, 0x40 ; ret
0x00019e46 : add esp, 0x44 ; ret
0x00115666 : add esp, 0x48c ; ret
0x000b697e : add esp, 0x4c ; mov eax, edx ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000d9541 : add esp, 0x54c ; ret
0x0006634b : add esp, 0x6c ; ret
0x000a7e62 : add esp, 0xc ; pop esi ; pop edi ; pop ebp ; ret
0x00055c42 : add esp, 0xc4 ; pop ebx ; pop esi ; ret
0x00068f5c : add esp, 0xec ; ret
0x00095a5e : add esp, 4 ; lea eax, dword ptr [edi - 1] ; pop esi ; pop edi ; pop ebp ; ret
0x00095a68 : add esp, 4 ; lea eax, dword ptr [edi - 2] ; pop esi ; pop edi ; pop ebp ; ret
0x00095a72 : add esp, 4 ; lea eax, dword ptr [edi - 3] ; pop esi ; pop edi ; pop ebp ; ret
0x00145449 : add esp, 4 ; pop ebp ; pop ebx ; ret
0x00145450 : add esp, 4 ; pop esi ; pop edi ; pop ebp ; pop ebx ; xor eax, eax ; ret
0x00025f7c : add esp, 8 ; ret
0x00095e78 : add esp, 8 ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x00178b6d : add esp, dword ptr [eax + 0xa] ; push cs ; add al, 0xc6 ; ret
0x00177359 : add esp, dword ptr [esi + 1] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00175846 : add esp, esp ; add dword ptr [edx], ecx ; ret
0x0017735a : add word ptr [edx], cx ; push cs ; adc al, 0x43 ; ret
0x00129b3a : and al, 0x10 ; mov dword ptr [edx], edi ; pop esi ; pop edi ; ret
0x00127952 : and al, 0x10 ; mov eax, dword ptr [eax] ; add esp, 0xc ; ret
0x00124771 : and al, 0x18 ; add esp, 0x1c ; mov eax, edx ; ret
0x000c5b7d : and al, 0x18 ; add esp, 0x28 ; pop ebx ; mov eax, edx ; ret
0x00079861 : and al, 0x18 ; mov dword ptr [esp + 4], edx ; call eax
0x00074d67 : and al, 0x18 ; mov dword ptr [esp], 0 ; call dword ptr [ecx]
0x00109841 : and al, 0x18 ; mov ebx, dword ptr [esp + 0x14] ; add esp, 0x1c ; ret
0x00074d44 : and al, 0x18 ; neg eax ; mov dword ptr [esp], eax ; call dword ptr [ecx]
0x00184b2c : and al, 0x1a ; jmp ebx
0x00097037 : and al, 0x1c ; add dword ptr [ebx + 0x211c244c], ecx ; ret 0xd789
0x0005544e : and al, 0x1c ; add esp, 0x28 ; pop ebx ; mov eax, edx ; ret
0x000b555c : and al, 0x1c ; add esp, 0x30 ; pop ebx ; pop esi ; pop edi ; ret
0x00126e61 : and al, 0x1c ; add esp, 0x34 ; pop ebx ; pop esi ; ret
0x00126878 : and al, 0x1c ; add esp, 0x6c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00019365 : and al, 0x1c ; call 0x129d7b
0x000d8461 : and al, 0x1c ; mov dword ptr [eax + 8], edx ; add esp, 8 ; ret
0x000a7b3e : and al, 0x24 ; add esp, 0x2c ; imul eax, edx ; ret
0x00069474 : and al, 0x24 ; add esp, 0x2c ; ret
0x0012755b : and al, 0x24 ; mov ebp, dword ptr [esp + 0x28] ; add esp, 0x2c ; ret 4
0x000d9c60 : and al, 0x24 ; mov ebp, dword ptr [esp + 0x28] ; add esp, 0x2c ; ret 8
0x0001986b : and al, 0x24 ; mov edi, dword ptr [esp + 0x28] ; add esp, 0x2c ; ret
0x000d5646 : and al, 0x24 ; movzx ebp, byte ptr [ecx + esi] ; jmp 0xd5618
0x00117173 : and al, 0x26 ; call 0x129d7b
0x0001986f : and al, 0x28 ; add esp, 0x2c ; ret
0x000d9c64 : and al, 0x28 ; add esp, 0x2c ; ret 8
0x00076e48 : and al, 0x28 ; mov dword ptr [esp + 0x2c], ecx ; call eax
0x00056164 : and al, 0x29 ; ret 0x838d
0x0011465c : and al, 0x29 ; ret 0xd739
0x00076e4c : and al, 0x2c ; call eax
0x000f767b : and al, 0x30 ; add esp, 0x5c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0001985e : and al, 0x30 ; mov dword ptr [esp], edx ; call eax
0x000e5b79 : and al, 0x30 ; mov ebp, dword ptr [esp + 0x38] ; add esp, 0x3c ; ret
0x000e5327 : and al, 0x38 ; add al, 0 ; add byte ptr [ecx], cl ; ret 0x850f
0x00116655 : and al, 0x38 ; add esp, 0x1c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000e625b : and al, 0x38 ; mov ebp, dword ptr [esp + 0x3c] ; add esp, 0x40 ; ret
0x00117144 : and al, 0x38 ; or byte ptr [ebp - 0x49], dh ; jmp 0x117114
0x000a7172 : and al, 0x39 ; dec edi ; and al, 0x75 ; js 0xa71e0 ; pop esi ; ret
0x000e625f : and al, 0x3c ; add esp, 0x40 ; ret
0x00019e40 : and al, 0x3c ; mov edi, dword ptr [esp + 0x40] ; add esp, 0x44 ; ret
0x00026736 : and al, 0x40 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00019e44 : and al, 0x40 ; add esp, 0x44 ; ret
0x00079b60 : and al, 0x40 ; mov dword ptr [esp + 4], edx ; call eax
0x00065d56 : and al, 0x44 ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00117846 : and al, 0x44 ; mov esi, dword ptr [esp + 0x48] ; add esp, 0x4c ; ret
0x00184724 : and al, 0x55 ; add dword ptr [eax], eax ; clc ; adc dl, dh ; jmp dword ptr [eax]
0x00079074 : and al, 0x58 ; add al, 0 ; add al, ch ; ret 0xfffc
0x000e5c31 : and al, 0x58 ; call 0x129d7b
0x00114b76 : and al, 0x60 ; mov dword ptr [esp], edx ; call eax
0x00066345 : and al, 0x64 ; mov ebp, dword ptr [esp + 0x68] ; add esp, 0x6c ; ret
0x00066349 : and al, 0x68 ; add esp, 0x6c ; ret
0x000b4653 : and al, 0x74 ; mov edi, dword ptr [esp + 0x78] ; add esp, 0x7c ; ret
0x000a7175 : and al, 0x75 ; js 0xa71dd ; pop esi ; ret
0x0002607c : and al, 0x81 ; ret 0x100
0x000a7b3f : and al, 0x83 ; les ebp, ptr [edi + ecx] ; scasd eax, dword ptr es:[edi] ; ret 0x90c3
0x00024b29 : and al, 0x83 ; ret 0x3b01
0x00079530 : and al, 0x89 ; insb byte ptr es:[edi], dx ; and al, 4 ; mov dword ptr [esp + 8], edx ; call eax
0x00117e44 : and al, 0x89 ; ret 0xbc80
0x0012755c : and al, 0x8b ; insb byte ptr es:[edi], dx ; and al, 0x28 ; add esp, 0x2c ; ret 4
0x000d9c61 : and al, 0x8b ; insb byte ptr es:[edi], dx ; and al, 0x28 ; add esp, 0x2c ; ret 8
0x00025f77 : and al, 0x8b ; je 0x25fa7 ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x0012662c : and al, 0x8b ; jl 0x12665c ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00067f4e : and al, 0x8b ; jl 0x67f7e ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000b947a : and al, 0x8b ; jl 0xb94aa ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000e822c : and al, 0x8b ; jl 0xe825c ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000e976e : and al, 0x8b ; jl 0xe979e ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000e985a : and al, 0x8b ; jl 0xe988a ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00177f24 : and al, 0x8d ; add byte ptr [eax], al ; dec eax ; sub bh, ch ; call edx
0x00168528 : and al, 0xaf ; in al, dx ; call dword ptr [eax]
0x00019937 : and al, 0xc ; add esp, 0x1c ; ret
0x00069d57 : and al, 0xc ; mov dword ptr [esp], esi ; call 0x669a9
0x00129d75 : and al, 0xc3 ; mov ecx, dword ptr [esp] ; ret
0x00129d79 : and al, 0xc3 ; mov edx, dword ptr [esp] ; ret
0x0018865c : and al, 0xd8 ; jmp dword ptr [esi]
0x000a5638 : and al, 0xe8 ; mov byte ptr [0x890004db], al ; ret 0x68b
0x000d8842 : and al, 0xe8 ; mov eax, 0x89fffffc ; ret 0xcb8
0x00045361 : and al, 0xe8 ; mov ecx, 0x89ffffca ; ret 0x16eb
0x00107e68 : and al, 0xe8 ; ret 0xff7f
0x000f5648 : and al, 0xe8 ; ret 8
0x000d5647 : and al, 0xf ; mov dh, 0x2c ; xor ebx, ebp ; ret
0x00047356 : and al, 0xf ; test byte ptr [eax], bh ; ret 0xffff
0x00114134 : and al, 0xff ; push eax ; add al, 0x89 ; ret 0xc031
0x00056a61 : and al, 0xff ; push eax ; sbb al, 0x89 ; ret 0x478b
0x00115f33 : and al, 0xff ; push esp ; and al, 0x24 ; add esp, 0x1c ; ret
0x00087568 : and al, 2 ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00025f7a : and al, 4 ; add esp, 8 ; ret
0x00027032 : and al, 4 ; and eax, 0x7f ; ret
0x00105032 : and al, 4 ; bswap eax ; ret
0x000d912a : and al, 4 ; call 0xc5434
0x00079533 : and al, 4 ; mov dword ptr [esp + 8], edx ; call eax
0x00098f6a : and al, 4 ; mov dword ptr [esp], edi ; call esi
0x00114160 : and al, 4 ; mov dword ptr [esp], esi ; call dword ptr [eax]
0x00048e75 : and al, 4 ; mov dword ptr [esp], esi ; call eax
0x00067922 : and al, 4 ; mov eax, dword ptr [eax + 0x24] ; mov eax, dword ptr [eax + 0x28] ; ret
0x00129922 : and al, 4 ; mov eax, dword ptr [eax + 0x50] ; ret
0x00129932 : and al, 4 ; mov eax, dword ptr [eax + 0x5c] ; ret
0x00098673 : and al, 4 ; mov eax, dword ptr [ebp] ; mov dword ptr [esp], eax ; call edi
0x00098726 : and al, 4 ; mov eax, dword ptr [ebp] ; mov dword ptr [esp], eax ; call esi
0x0002692b : and al, 4 ; mov ebp, dword ptr [esp + 8] ; add esp, 0xc ; ret
0x0001985a : and al, 4 ; mov edx, dword ptr [esp + 0x30] ; mov dword ptr [esp], edx ; call eax
0x00114b72 : and al, 4 ; mov edx, dword ptr [esp + 0x60] ; mov dword ptr [esp], edx ; call eax
0x000d8a2a : and al, 4 ; mov word ptr [eax], dx ; xor eax, eax ; ret
0x000d9436 : and al, 5 ; add byte ptr [eax], al ; mov eax, esi ; pop ebx ; pop esi ; ret
0x00066268 : and al, 8 ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [esp], edx ; call eax
0x0006867b : and al, 8 ; call 0x669a6
0x00067648 : and al, 8 ; call 0x66c26
0x00079537 : and al, 8 ; call eax
0x000d8a56 : and al, 8 ; mov dword ptr [eax + 4], edx ; xor eax, eax ; ret
0x000d8a49 : and al, 8 ; mov dword ptr [eax], edx ; xor eax, eax ; ret
0x00048e71 : and al, 8 ; mov dword ptr [esp + 4], ecx ; mov dword ptr [esp], esi ; call eax
0x000e4d76 : and al, 8 ; mov word ptr [edx + 0x3e], ax ; xor eax, eax ; ret
0x00005840 : and al, byte ptr [eax] ; or al, 0 ; ret
0x00098550 : and al, byte ptr [ebp + 0x5eeb75c9] ; pop edi ; pop ebp ; ret
0x000b9a39 : and byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x00047937 : and byte ptr [eax], al ; add byte ptr [ecx + 0x5f5e5bf8], cl ; pop ebp ; ret
0x00009542 : and byte ptr [eax], al ; ret
0x00119444 : and byte ptr [ebp - 0x6bc6ff8a], cl ; ret
0x000f6748 : and byte ptr [ebx - 0xf76eb3c], al ; pop ebx ; pop esi ; ret
0x0006896a : and byte ptr [ecx - 0x17ebdba4], cl ; call dword ptr [ebx]
0x00077b6a : and byte ptr [ecx - 0x17ebdba4], cl ; jmp dword ptr [ecx]
0x000a565b : and byte ptr [ecx], ch ; ret 0x895e
0x00096b38 : and byte ptr [ecx], ch ; ret 0xc083
0x00148664 : and byte ptr [edi], cl ; test dword ptr [ebp - 0x7d000000], esp ; ret 0xf0c
0x000a7160 : and byte ptr [edi], cl ; test dword ptr [ecx + 0x5f000000], ecx ; pop esi ; ret
0x00148e4b : and byte ptr [edi], cl ; test dword ptr [edx - 0x9fffffd], esi ; ret 0xf40
0x00148f6b : and byte ptr [edi], cl ; test dword ptr [esi - 0xa000000], ebp ; ret 0xf40
0x0014724c : and byte ptr [edi], cl ; test edi, ebp ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf20
0x00199d40 : and byte ptr [esi - 8], bl ; jmp dword ptr [ebx]
0x0016704d : and ch, bh ; call eax
0x00167029 : and ch, bh ; call edx
0x0016703d : and ch, bh ; call esi
0x00167039 : and ch, bh ; dec esp ; and ch, bh ; call esi
0x00167049 : and ch, bh ; inc esi ; and ch, bh ; call eax
0x000c733d : and cl, byte ptr [ebp + 0x5e5bf465] ; pop edi ; pop ebp ; ret
0x00037f69 : and dh, 0xff ; dec dword ptr [edi] ; movsb byte ptr es:[edi], byte ptr [esi] ; ret 0xc102
0x00194445 : and dh, bh ; call dword ptr [eax]
0x00177725 : and dl, dl ; out dx, al ; jmp dword ptr [edx]
0x00158921 : and dword ptr [esi + ebp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00026f3c : and eax, 0x1000 ; ret
0x00026e2c : and eax, 0x200 ; ret
0x00027034 : and eax, 0x7f ; ret
0x00026e5c : and eax, 0x8000 ; ret
0x0011764a : and eax, 0x81000127 ; ret
0x00098e47 : and eax, 0x830000cd ; les ebp, ptr [eax] ; pop ebx ; ret
0x00105044 : and eax, 0xffff ; ror ax, 8 ; ret
0x0010505c : and eax, 0xffffff ; ret
0x00149c7d : and eax, 1 ; je 0x149c69 ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00074f6c : and eax, ecx ; sub esi, eax ; mov dword ptr [esp], esi ; call dword ptr [edx]
0x00166340 : arpl ax, bx ; cld ; call dword ptr [ebx - 0x2c000328]
0x00165e3c : arpl cx, dx ; cld ; call dword ptr [ebx - 0x3c00032f]
0x0016632c : arpl di, dx ; cld ; call dword ptr [ebx - 0x3c000329]
0x00165e50 : arpl dx, dx ; cld ; call dword ptr [ebx - 0x3c00032e]
0x00167760 : bound ebx, qword ptr [ebp + edi*8 - 1] ; ret 0xfd5c
0x00179822 : bound ecx, qword ptr [edx] ; push cs ; add al, 0xc6 ; ret
0x00185c24 : bound ecx, qword ptr [esi] ; add al, 0xc6 ; ret
0x00095570 : bsf eax, eax ; add eax, edi ; pop edi ; ret
0x00095560 : bsf eax, eax ; lea eax, dword ptr [eax + edi - 0x10] ; pop edi ; ret
0x00095c70 : bsf eax, eax ; lea eax, dword ptr [eax + edx - 0x10] ; ret
0x00095c67 : bsf eax, eax ; lea eax, dword ptr [edx + eax + 0x30] ; ret
0x00095125 : bsr eax, eax ; add eax, edi ; pop edi ; ret
0x00095273 : bsr eax, eax ; add eax, edi ; sub eax, 0x10 ; pop edi ; ret
0x00095830 : bsr eax, eax ; lea eax, dword ptr [eax + ecx + 0x10] ; ret
0x00095840 : bsr eax, eax ; lea eax, dword ptr [eax + ecx + 0x20] ; ret
0x00095850 : bsr eax, eax ; lea eax, dword ptr [eax + ecx + 0x30] ; ret
0x00095924 : bsr edi, edi ; add eax, edi ; pop edi ; ret
0x00095970 : bsr edi, edi ; lea eax, dword ptr [eax + edi + 0x10] ; pop edi ; ret
0x00105034 : bswap eax ; ret
0x0018534c : call 0x11184596
0x00016f73 : call 0x129d79
0x00026c51 : call 0x129d7b
0x0006867d : call 0x669a4
0x0006764a : call 0x66c24
0x00064563 : call 0x707e2
0x00065f6f : call 0x72182
0x00115952 : call 0x80d4506a
0x000d4a5e : call 0x834e0ce8
0x000a5731 : call 0xc367b698
0x0012972d : call 0xc36ff694
0x000d912c : call 0xc5432
0x00166947 : call dword ptr [eax + 0x20fffce1]
0x00166e23 : call dword ptr [eax + 0x20fffd00]
0x00166353 : call dword ptr [ebx - 0x2c000327]
0x00166343 : call dword ptr [ebx - 0x2c000328]
0x0016632f : call dword ptr [ebx - 0x3c000329]
0x00165e53 : call dword ptr [ebx - 0x3c00032e]
0x00165e3f : call dword ptr [ebx - 0x3c00032f]
0x00167633 : call dword ptr [edx + 0x12fffd4e]
0x00166a23 : call dword ptr [edx + 0x22fffcf9]
0x00166e77 : call dword ptr [edx + 0x22fffd10]
0x00166f23 : call dword ptr [edx - 0x1d0002e2]
0x00187c25 : call dword ptr ss:[ecx]
0x0000943c : cdq ; add byte ptr [eax], al ; add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x38
0x00186968 : cdq ; hlt ; call dword ptr [eax]
0x00019658 : cdq ; sbb byte ptr [eax], al ; lea eax, dword ptr [ecx - 0x43dee] ; ret
0x00019638 : cdq ; sbb byte ptr [eax], al ; lea eax, dword ptr [ecx - 0x46116] ; ret
0x00198960 : cdq ; xor bh, al ; call dword ptr [eax]
0x00184728 : clc ; adc dl, dh ; jmp dword ptr [eax]
0x00007969 : clc ; adc dword ptr [eax], eax ; ret
0x00056a6e : clc ; add bh, byte ptr [ecx] ; ret 0x1974
0x00166a21 : clc ; cld ; call dword ptr [edx + 0x22fffcf9]
0x00166a31 : clc ; cld ; inc dword ptr [eax] ; stc ; cld ; call edx
0x000b9b53 : clc ; das ; je 0xb9b49 ; mov eax, 1 ; ret
0x00105566 : clc ; dec dword ptr [ecx + 0xf382444] ; xchg eax, esp ; ret 0xd285
0x00105d36 : clc ; dec dword ptr [ecx + 0xf442444] ; xchg eax, esp ; ret 0xd285
0x0019946e : clc ; jmp dword ptr [ebx]
0x00198646 : clc ; jmp dword ptr [edi]
0x00199526 : clc ; jmp dword ptr [edx]
0x000e6a68 : clc ; pop ds ; add esp, 0xc ; ret
0x00017e75 : clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10
0x00028f46 : clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00138260 : clc ; pop esi ; pop edi ; call 0x129d7c
0x00095d4e : clc ; pop esi ; pop edi ; ret
0x000b462e : clc ; push dword ptr [ebx + ebp - 0x77] ; ret 0xe283
0x00114263 : clc ; push dword ptr [ecx + eax*2 - 0x77] ; push esi ; sub al, 1 ; ret 0x5689
0x00095277 : clc ; sub eax, 0x10 ; pop edi ; ret
0x00067c5c : clc ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x00095965 : clc ; xor ch, ch ; add eax, ecx ; pop edi ; ret
0x00149a74 : cld ; add dword ptr [eax], eax ; add byte ptr [esi - 0x77], dl ; ret 0xfe89
0x00147260 : cld ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf40
0x00166946 : cld ; call dword ptr [eax + 0x20fffce1]
0x00166e22 : cld ; call dword ptr [eax + 0x20fffd00]
0x00166352 : cld ; call dword ptr [ebx - 0x2c000327]
0x00166342 : cld ; call dword ptr [ebx - 0x2c000328]
0x0016632e : cld ; call dword ptr [ebx - 0x3c000329]
0x00165e52 : cld ; call dword ptr [ebx - 0x3c00032e]
0x00165e3e : cld ; call dword ptr [ebx - 0x3c00032f]
0x00166a22 : cld ; call dword ptr [edx + 0x22fffcf9]
0x00165e2e : cld ; call ebx
0x0016653a : cld ; call edx
0x0016607a : cld ; call esi
0x00166176 : cld ; call esp
0x00166b7d : cld ; cld ; call dword ptr [eax]
0x00166b6d : cld ; cld ; jmp eax
0x00149722 : cld ; cmp eax, dword ptr [esi - 4] ; jne 0x149739 ; pop edi ; pop esi ; pop ebx ; ret
0x00166a7a : cld ; dec dword ptr [esi - 6] ; cld ; call esp
0x00199524 : cld ; dec edi ; clc ; jmp dword ptr [edx]
0x0018887d : cld ; hlt ; call dword ptr [eax]
0x0016684a : cld ; inc dword ptr [eax + 0x70fffce8] ; out 0xfc, al ; call dword ptr [eax]
0x00166952 : cld ; inc dword ptr [eax - 0x1d] ; cld ; call eax
0x0016675e : cld ; inc dword ptr [eax - 0x4f000327] ; frndint ; jmp eax
0x00167976 : cld ; inc dword ptr [eax - 0x6d] ; cld ; call eax
0x00166c7e : cld ; inc dword ptr [eax - 3] ; cld ; call eax
0x00166942 : cld ; inc dword ptr [eax] ; loope 0x16694c ; call dword ptr [eax + 0x20fffce1]
0x00166a32 : cld ; inc dword ptr [eax] ; stc ; cld ; call edx
0x00166672 : cld ; inc dword ptr [edx + ebx*8 - 0x254b0004] ; cld ; jmp esp
0x00167972 : cld ; inc eax ; xchg eax, edx ; cld ; inc dword ptr [eax - 0x6d] ; cld ; call eax
0x00165e42 : cld ; inc ebx ; sar esp, 1 ; push ebx ; sar esp, 1 ; jmp dword ptr [ebx]
0x00166332 : cld ; inc ebx ; xlatb ; cld ; push ebx ; xlatb ; cld ; jmp dword ptr [ebx]
0x00166036 : cld ; inc edx ; sar esp, 1 ; jmp edx
0x000f7322 : cld ; int1 ; inc dword ptr [ebx + 0x5e5b10c4] ; pop edi ; ret
0x00166776 : cld ; jmp dword ptr [eax - 0x2f000326]
0x0016625e : cld ; jmp dword ptr [eax - 0x2f00032d]
0x00165e2a : cld ; jmp dword ptr [ebx - 0x2c000330]
0x0016603a : cld ; jmp edx
0x00149725 : cld ; jne 0x149736 ; pop edi ; pop esi ; pop ebx ; ret
0x00134e44 : cld ; mov dword ptr [edx - 4], ecx ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00168354 : cld ; movsd dword ptr es:[edi], dword ptr [esi] ; add byte ptr [eax], al ; xor al, 0x73 ; in al, dx ; call dword ptr [eax]
0x00158846 : cld ; out -0x6b, eax ; push es ; cld ; ret
0x0016816c : cld ; popfd ; add byte ptr [eax], al ; inc esp ; pop edx ; in al, dx ; call dword ptr [eax]
0x0016694e : cld ; push dword ptr [eax + 0x40fffce2] ; jecxz 0x16695c ; call eax
0x0016684e : cld ; push dword ptr [eax - 0x1a] ; cld ; call dword ptr [eax]
0x00166762 : cld ; push dword ptr [eax - 0x1f000327] ; frndint ; call dword ptr [eax]
0x00166772 : cld ; push dword ptr [eax - 0x26] ; cld ; jmp dword ptr [eax - 0x2f000326]
0x00166b66 : cld ; push dword ptr [eax - 0x7f000305] ; cld ; cld ; jmp eax
0x00165e26 : cld ; push dword ptr [ebx - 0x30] ; cld ; jmp dword ptr [ebx - 0x2c000330]
0x00166a2e : cld ; push dword ptr [edx + 0xfffcf8] ; stc ; cld ; call edx
0x00166c56 : cld ; push dword ptr [esi + edi*8] ; cld ; call esp
0x00165e46 : cld ; push ebx ; sar esp, 1 ; jmp dword ptr [ebx]
0x00166336 : cld ; push ebx ; xlatb ; cld ; jmp dword ptr [ebx]
0x000a8535 : cli ; adc ch, byte ptr [ecx] ; ret 0x18b
0x000a8873 : cli ; add al, byte ptr [ecx] ; ret 0x3c8d
0x000b9038 : cli ; add byte ptr [esi + 4], bh ; mov eax, edx ; ret
0x000d934a : cli ; add dh, byte ptr [esi + 2] ; ret
0x000a7f32 : cli ; add eax, 0x291ff8c1 ; ret 0x1b8
0x00166a7d : cli ; cld ; call esp
0x00177c21 : cli ; fldz ; jmp dword ptr [edx]
0x000d8740 : cli ; inc dword ptr [ebp + 0x74c289c0] ; ret
0x00134b2c : cli ; lea eax, dword ptr [edi + eax + 0xa] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134c4c : cli ; lea eax, dword ptr [edi + eax + 0xc] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134d6c : cli ; lea eax, dword ptr [edi + eax + 0xe] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013473c : cli ; lea eax, dword ptr [edi + eax + 3] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013485c : cli ; lea eax, dword ptr [edi + eax + 5] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013497c : cli ; lea eax, dword ptr [edi + eax + 7] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x000e997a : cli ; or dh, byte ptr [edx - 0x77] ; ret 0xb60f
0x000a766e : cli ; or ebp, dword ptr [ecx] ; ret 0x5589
0x00129e40 : cli ; pop ds ; add esp, 0x18 ; pop esi ; ret
0x00147922 : cli ; pop edi ; ret
0x00158d2e : cli ; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret
0x00095757 : cmc ; add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; xlatb ; ret
0x00184435 : cmc ; int1 ; call dword ptr [ebx]
0x000a7d4a : cmc ; jmp 0xa7d12
0x000a7d46 : cmc ; sar ebp, 1 ; add ebp, esi ; jmp 0xa7d16
0x00095d4a : cmova eax, esi ; sub eax, edi ; pop esi ; pop edi ; ret
0x0014572a : cmovbe eax, edx ; pop esi ; pop ebp ; pop ebx ; ret
0x000c5d29 : cmovbe eax, esi ; mov esi, dword ptr [esp] ; add esp, 8 ; ret
0x00098422 : cmove eax, ecx ; ret
0x0009682c : cmove eax, edx ; add esp, 8 ; pop ebx ; ret
0x000a7e5f : cmovge eax, edx ; add esp, 0xc ; pop esi ; pop edi ; pop ebp ; ret
0x000a7926 : cmovne eax, edx ; jmp 0xa78d2
0x00166b6c : cmp ah, 0xfc ; jmp eax
0x00186645 : cmp ah, byte ptr [edi - 0xe] ; jmp dword ptr [edx]
0x000b993e : cmp ah, byte ptr [esi] ; mov edx, 0xffffffff ; cmovne eax, edx ; ret
0x00098f6d : cmp al, 0x24 ; call esi
0x0018453c : cmp al, 0x53 ; add dword ptr [eax], eax ; cmp bh, 0xf1 ; call edi
0x00186071 : cmp al, 0x5b ; jmp dword ptr [edx]
0x0006627e : cmp al, 0x5b ; pop esi ; mov eax, edi ; pop edi ; pop ebp ; ret
0x00186a3c : cmp al, 0x78 ; add dword ptr [eax], eax ; sal dl, 0xf2 ; call ecx
0x00127c76 : cmp al, 0x85 ; ret 0x1574
0x00064644 : cmp al, 0x89 ; clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00019e41 : cmp al, 0x8b ; jl 0x19e71 ; inc eax ; add esp, 0x44 ; ret
0x00199d3c : cmp al, 0xab ; add al, byte ptr [eax] ; and byte ptr [esi - 8], bl ; jmp dword ptr [ebx]
0x00055247 : cmp al, 0xc ; ret 0x4489
0x000e7458 : cmp al, 0xe8 ; adc eax, 0x81000429 ; ret
0x00077360 : cmp al, 0xe8 ; or eax, 0x81000b2a ; ret
0x00169459 : cmp al, 0xf0 ; jmp dword ptr [eax]
0x00194f42 : cmp al, 0xf6 ; jmp dword ptr [edx]
0x00114850 : cmp al, 1 ; ret 0x4689
0x00055e48 : cmp al, 2 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00107d69 : cmp al, byte ptr [eax] ; add byte ptr [ebx - 0x71f0ff08], al ; ret
0x00095565 : cmp al, dh ; pop edi ; ret
0x00176649 : cmp al, dl ; out dx, al ; jmp dword ptr [edx]
0x00184540 : cmp bh, 0xf1 ; call edi
0x00167325 : cmp bh, ch ; call dword ptr [edx]
0x00167321 : cmp bh, ch ; inc edx ; cmp bh, ch ; call dword ptr [edx]
0x00129b3d : cmp bl, byte ptr [esi + 0x5f] ; ret
0x000d705d : cmp byte ptr [eax + 0xc], bh ; jmp 0xd702f
0x000e5328 : cmp byte ptr [eax + eax], al ; add byte ptr [ecx], cl ; ret 0x850f
0x00117145 : cmp byte ptr [eax], cl ; jne 0x117105 ; jmp 0x117113
0x00017f22 : cmp byte ptr [ebp + 0xf], bl ; xchg eax, esp ; ret 0x348d
0x00068128 : cmp byte ptr [ebp - 0xcfc8740], al ; ret
0x00116656 : cmp byte ptr [ebx + 0x5e5b1cc4], al ; pop edi ; pop ebp ; ret
0x000d503f : cmp byte ptr [ebx - 0x7ccbdb8c], cl ; ret 0x8b01
0x00199338 : cmp byte ptr [ecx + 0x44740002], ah ; clc ; jmp dword ptr [edi]
0x00189132 : cmp byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00175741 : cmp byte ptr [ecx], dh ; out dx, al ; jmp dword ptr [edx]
0x0007646b : cmp byte ptr [edi], cl ; xchg eax, ebp ; ret 0xb60f
0x00036f3d : cmp byte ptr [edi], cl ; xchg eax, edx ; ret 0xd789
0x0010556b : cmp byte ptr [edi], cl ; xchg eax, esp ; ret 0xd285
0x00194976 : cmp dh, dh ; jmp dword ptr [edx]
0x00146867 : cmp dh, dh ; ret 0x7504
0x000f8b4c : cmp dword ptr [eax + 8], 0 ; je 0xf8b60 ; xor eax, eax ; ret
0x000a756e : cmp dword ptr [ecx + 8], esi ; jne 0xa7552 ; jmp 0xa753e
0x000a7173 : cmp dword ptr [edi + 0x24], ecx ; jne 0xa71f7 ; pop edi ; pop esi ; ret
0x00097e6d : cmp dword ptr [edx + eax*2 - 0x10], -1 ; pop ebx ; ret
0x00195a58 : cmp dword ptr [edx - 9], ecx ; call dword ptr [eax]
0x00087850 : cmp eax, 0x5bffffff ; ret
0x00126532 : cmp eax, 0x81000038 ; ret
0x00124c32 : cmp eax, 0x81000051 ; ret
0x000f5d32 : cmp eax, 0x81000340 ; ret
0x00194f3c : cmp eax, 0xd1cfff6 ; sar byte ptr [esi + esi*8], 1 ; jmp dword ptr [edx]
0x000a8478 : cmp eax, 0xfffff001 ; jae 0xa8487 ; ret
0x000b9374 : cmp eax, 0xfffff001 ; jae 0xb9383 ; ret
0x000c544a : cmp eax, 0xfffff001 ; jae 0xc5459 ; ret
0x000c5544 : cmp eax, 0xfffff001 ; jae 0xc5553 ; ret
0x000e4f2c : cmp eax, 0xfffff001 ; jae 0xe4f3b ; ret
0x000e7d58 : cmp eax, 0xfffff001 ; jae 0xe7d67 ; ret
0x000e7e28 : cmp eax, 0xfffff001 ; jae 0xe7e37 ; ret
0x000e8024 : cmp eax, 0xfffff001 ; jae 0xe8033 ; ret
0x000e8064 : cmp eax, 0xfffff001 ; jae 0xe8073 ; ret
0x000e815e : cmp eax, 0xfffff001 ; jae 0xe8199 ; ret
0x00149723 : cmp eax, dword ptr [esi - 4] ; jne 0x149738 ; pop edi ; pop esi ; pop ebx ; ret
0x000e8773 : cmp eax, ecx ; idiv bh ; add esp, 0x18 ; pop ebx ; ret
0x00095d48 : cmp eax, esi ; cmova eax, esi ; sub eax, edi ; pop esi ; pop edi ; ret
0x00105079 : cmp ecx, 0x80000000 ; cmovne eax, edx ; ret
0x000b9037 : cmp edx, 0 ; jle 0xb9048 ; mov eax, edx ; ret
0x000d9349 : cmp edx, 2 ; jbe 0xd9356 ; ret
0x000c5c33 : cmp esi, edx ; ja 0xc5c2d ; pop esi ; ret
0x00095c44 : cmp esp, dword ptr [esi + 0xf] ; xlatb ; ret 0xc085
0x00189a59 : cmpsb byte ptr [esi], byte ptr es:[edi] ; hlt ; jmp dword ptr [edi]
0x00148f65 : cmpsd dword ptr [esi], dword ptr es:[edi] ; add byte ptr [eax], al ; add dh, dh ; ret 0xf20
0x00174336 : cmpsd dword ptr [esi], dword ptr es:[edi] ; in al, dx ; jmp dword ptr [edx]
0x0000583c : cwde ; add dword ptr [eax], eax ; add byte ptr [edx], ah ; add byte ptr [eax + eax], cl ; ret
0x00188a69 : cwde ; add dword ptr [eax], eax ; hlt ; sbb esp, esi ; call eax
0x0013924a : cwde ; fiadd word ptr [edx] ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x00185348 : cwde ; pop esp ; add dword ptr [eax], eax ; call 0x1118459a
0x0014742b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x0014743b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x0014744b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x0014745b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x0014746b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x0014747b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x0014795b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x0014794b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x0014793b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x00149c4b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 4] ; pop edi ; ret
0x0014792b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x00149b7b : daa ; add byte ptr [eax], al ; add byte ptr [eax], al ; pop esi ; xor eax, eax ; pop edi ; ret
0x00169d49 : das ; int1 ; call esp
0x00169d21 : das ; int1 ; jmp esp
0x00124534 : das ; jbe 0x1244c1 ; ret 0xc709
0x000b9b54 : das ; je 0xb9b48 ; mov eax, 1 ; ret
0x0014442b : dec byte ptr [ebp - 0x7af00587] ; ret
0x0016843b : dec dword ptr [eax + 0x40000ab] ; xchg eax, edx ; in al, dx ; jmp eax
0x0013636b : dec dword ptr [eax - 0x2f7600b6] ; pop ebx ; ret
0x00166e63 : dec dword ptr [eax] ; adc ch, bh ; jmp edx
0x00095972 : dec dword ptr [ebp + 0x5f103844] ; ret
0x00079a71 : dec dword ptr [ebp + 0xb6] ; add al, ch ; ret
0x00096825 : dec dword ptr [ebp - 0x10cbb36d] ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x000c5c65 : dec dword ptr [ebp - 0xdd4636d] ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x000c6c40 : dec dword ptr [ebx + 0x39142454] ; ret 0x850f
0x00049727 : dec dword ptr [ebx + 0x440f8845] ; ret 0x4589
0x000d7735 : dec dword ptr [ebx + 0x5b0a8902] ; ret
0x00129d72 : dec dword ptr [ebx - 0x743cdbe4] ; or al, 0x24 ; ret
0x00026a57 : dec dword ptr [ecx + 0x5f5e5b10] ; ret
0x00105567 : dec dword ptr [ecx + 0xf382444] ; xchg eax, esp ; ret 0xd285
0x00105d37 : dec dword ptr [ecx + 0xf442444] ; xchg eax, esp ; ret 0xd285
0x00109975 : dec dword ptr [ecx - 0x72cbdbac] ; xchg eax, ebx ; call eax
0x000b9831 : dec dword ptr [ecx] ; ret 0x850f
0x000e5e78 : dec dword ptr [ecx] ; ror dword ptr [ecx - 0x3fcef7b8], 1 ; pop ebx ; ret
0x00097b70 : dec dword ptr [edi] ; inc ebp ; ret 0x748d
0x000b9944 : dec dword ptr [edi] ; inc ebp ; ret 0x8dc3
0x000a7925 : dec dword ptr [edi] ; inc ebp ; ret 0xa5eb
0x00046629 : dec dword ptr [edi] ; inc ebp ; ret 0xbd89
0x00145729 : dec dword ptr [edi] ; inc esi ; ret 0x5d5e
0x00038348 : dec dword ptr [edi] ; mov fs, word ptr [ebp - 0x76000002] ; ret 0x18e9
0x00167227 : dec dword ptr [edx - 0x150002d2] ; std ; call esp
0x00059873 : dec dword ptr [edx] ; add byte ptr [eax], al ; add byte ptr [edi], cl ; inc ebp ; ret 0x8589
0x00168b7b : dec dword ptr [esi + edx*8 - 0x26fc0000] ; out dx, al ; call eax
0x00166a7b : dec dword ptr [esi - 6] ; cld ; call esp
0x00094b43 : dec eax ; add eax, 0xc24448b ; pop ebx ; pop esi ; ret
0x0013636a : dec eax ; dec dword ptr [eax - 0x2f7600b6] ; pop ebx ; ret
0x00177b35 : dec eax ; fsubr st(6) ; jmp dword ptr [edx]
0x00168e28 : dec eax ; fucomi st(7) ; jmp eax
0x0018543c : dec eax ; inc edx ; call dword ptr [eax]
0x00195447 : dec eax ; inc edx ; idiv bh ; sbb al, 0xd ; xor byte ptr [ecx - 0xa], al ; jmp dword ptr [edx]
0x00199148 : dec eax ; lahf ; add al, byte ptr [eax] ; les edi, ptr [esi] ; clc ; jmp dword ptr [edi]
0x00168973 : dec eax ; leave ; add byte ptr [eax], al ; popfd ; in eax, dx ; jmp dword ptr [eax]
0x00197138 : dec eax ; mov cl, 0xf7 ; jmp dword ptr [esi]
0x0018996f : dec eax ; or eax, dword ptr [edx] ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00197e37 : dec eax ; or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x0019944a : dec eax ; or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x0019903f : dec eax ; or esp, dword ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x00199d78 : dec eax ; pop esi ; clc ; jmp dword ptr [ebx]
0x00094d29 : dec eax ; pop ss ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x000e5023 : dec eax ; push eax ; mov dword ptr [eax + 0x54], edx ; xor eax, eax ; pop ebx ; ret
0x00094b63 : dec eax ; push es ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00177f28 : dec eax ; sub bh, ch ; call edx
0x00169c65 : dec ebp ; add dword ptr [eax], eax ; hlt ; sub al, 0xf1 ; jmp esp
0x0019946d : dec ebp ; clc ; jmp dword ptr [ebx]
0x0001756f : dec ebp ; loopne 0x1759e ; ret 0xe283
0x000a5165 : dec ebp ; mov esp, 0x8301c083 ; ret 0x3901
0x0002772f : dec ebp ; push cs ; add byte ptr [eax], al ; add esp, 0x28 ; pop ebx ; ret
0x000a7e60 : dec ebp ; ret 0xc483
0x000a7a2b : dec ebx ; add byte ptr [eax], al ; add bl, ch ; ret 0xb48d
0x00007965 : dec ebx ; add byte ptr [eax], al ; pushal ; clc ; adc dword ptr [eax], eax ; ret
0x00149054 : dec ebx ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x00148034 : dec ebx ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x0016746d : dec ebx ; std ; inc edx ; dec ecx ; std ; call dword ptr [eax]
0x00167555 : dec ebx ; std ; push dword ptr [esp + ecx*2] ; std ; jmp esp
0x00084b47 : dec ecx ; imul dword ptr [ecx] ; ret 0x280f
0x0008656b : dec ecx ; imul dword ptr [ecx] ; ret 0xc301
0x0008706b : dec ecx ; ljmp ptr [ecx] ; ret 0xc301
0x00178d23 : dec ecx ; push cs ; add al, 0xc6 ; ret
0x00187840 : dec ecx ; ret
0x0005894f : dec ecx ; ret 0x8589
0x00167471 : dec ecx ; std ; call dword ptr [eax]
0x000a7174 : dec edi ; and al, 0x75 ; js 0xa71de ; pop esi ; ret
0x00199525 : dec edi ; clc ; jmp dword ptr [edx]
0x0016762d : dec edi ; std ; call dword ptr [edx]
0x00167629 : dec edi ; std ; jmp edx
0x00197527 : dec edi ; xchg byte ptr [edx], al ; add bl, byte ptr [eax + 0xe] ; add al, 0xc6 ; ret
0x00197037 : dec edi ; xchg byte ptr [edx], al ; jno 0x197051 ; add al, 0xc6 ; ret
0x0008784c : dec edx ; add cl, byte ptr [edi] ; test dword ptr [0x5bffffff], edi ; ret
0x00134e46 : dec edx ; cld ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00134f7e : dec edx ; dec byte ptr [ebx + 0x5b082444] ; ret
0x00097c64 : dec edx ; or al, 0x83 ; ret 0x8310
0x0009415f : dec edx ; or byte ptr [eax - 0x776ef86], cl ; pop ebx ; pop edi ; ret
0x00087974 : dec edx ; or ecx, dword ptr [edi] ; test dword ptr [0x5bfffffe], edx ; ret
0x00089b30 : dec edx ; pop es ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x00085750 : dec edx ; pop es ; mov eax, edi ; pop edi ; ret
0x00089c70 : dec edx ; push es ; lea eax, dword ptr [edx + 0xd] ; ret
0x00085730 : dec edx ; push es ; mov eax, edi ; pop edi ; ret
0x00167475 : dec edx ; std ; jmp edx
0x00136327 : dec edx ; sti ; mov dword ptr [edx - 4], eax ; mov eax, edx ; pop ebx ; ret
0x00095c59 : dec edx ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x00076c24 : dec esi ; add al, 0x8b ; je 0x76c56 ; xor al, 0x89 ; xor ch, cl ; ret 0xfffe
0x000d9a69 : dec esi ; add al, 1 ; ret 0x689
0x000a7171 : dec esi ; and al, 0x39 ; dec edi ; and al, 0x75 ; js 0xa71e1 ; pop esi ; ret
0x00166a7c : dec esi ; cli ; cld ; call esp
0x000b9921 : dec esi ; mov eax, 0x7f ; pop ebx ; ret
0x00196237 : dec esi ; ret
0x0006974e : dec esi ; sar bh, cl ; jmp dword ptr [ecx]
0x00167631 : dec esi ; std ; call dword ptr [edx + 0x12fffd4e]
0x00167635 : dec esi ; std ; call dword ptr [edx]
0x000e5a6b : dec esi ; xor al, 0xf6 ; ret 0x7420
0x00174341 : dec esp ; add byte ptr [eax], al ; push -0x2b ; in al, dx ; call dword ptr [eax]
0x000d5645 : dec esp ; and al, 0x24 ; movzx ebp, byte ptr [ecx + esi] ; jmp 0xd5619
0x00076e4b : dec esp ; and al, 0x2c ; call eax
0x00048e74 : dec esp ; and al, 4 ; mov dword ptr [esp], esi ; call eax
0x00067c4f : dec esp ; and al, 8 ; mov dword ptr [esp], edx ; call eax
0x0016703b : dec esp ; and ch, bh ; call esi
0x00024b27 : dec esp ; nop ; and al, 0x83 ; ret 0x3b01
0x00188f4c : dec esp ; popfd ; add dword ptr [eax], eax ; adc byte ptr [edx], dh ; hlt ; jmp dword ptr [esi]
0x00167559 : dec esp ; std ; jmp esp
0x0016753d : dec esp ; std ; push dword ptr [ebx + ecx*2] ; std ; jmp esp
0x0011975a : dec esp ; wait ; sti ; inc dword ptr [ebx] ; xchg eax, esp ; ret
0x00096b32 : dec esp ; xchg eax, ebp ; add byte ptr [ebx + 0x29202454], cl ; ret 0xc083
0x00167f5b : dec esp ; xchg eax, edx ; add byte ptr [eax], al ; imul bl ; jmp eax
0x00096828 : dec esp ; xor al, 0xef ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x00127f22 : dec esp ; xor esi, esi ; pop ebx ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x000c5d66 : div byte ptr [ebp - 0x11] ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x0009852a : div byte ptr [ebx + esi - 0x7d] ; ret 0x8310
0x00186c35 : div dl ; call dword ptr [eax]
0x000c5c32 : enter -0x29c7, 0x77 ; int1 ; pop esi ; ret
0x00074f6d : enter -0x39d7, -0x77 ; xor al, 0x24 ; call dword ptr [edx]
0x00049354 : enter -0xfd7, -0x77 ; inc ebp ; mov ah, 0xe9 ; ret
0x00147e24 : enter 0, 0 ; xor eax, eax ; pop edi ; ret
0x00186478 : enter 0x16d, 0 ; jmp 0x11185770
0x00188878 : enter 0x191, 0 ; cld ; hlt ; call dword ptr [eax]
0x00174a78 : enter 0x53, 0 ; je 0x174ada ; in eax, dx ; call dword ptr [eax]
0x00019529 : enter 0x6509, 0x33 ; add eax, 0x18 ; call eax
0x00168974 : enter 0xc9, 0 ; popfd ; in eax, dx ; jmp dword ptr [eax]
0x00035a44 : enter 6, 0 ; add esp, 0x18 ; pop ebx ; ret
0x00145448 : fadd dword ptr [ebx + 0x5b5d04c4] ; ret
0x000c6354 : fadd qword ptr [eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0013945c : fadd qword ptr [edx] ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x0016884c : fadd st(3) ; add byte ptr [eax], al ; xchg eax, ecx ; je 0x168847 ; jmp eax
0x00138064 : fcomi st(7) ; ret 1
0x00149738 : fcomp dword ptr [edi + 0x5e] ; pop ebx ; ret
0x00166f38 : fcomp qword ptr [esi] ; std ; ljmp ptr [edi + ebx] ; std ; call dword ptr [esi]
0x00189d2d : fcompi st(4) ; call dword ptr [edx]
0x00178332 : fdiv st(2), st(0) ; jmp dword ptr [edx]
0x0018865d : fdiv st(3) ; jmp dword ptr [esi]
0x00166925 : fdiv st(4), st(0) ; call dword ptr [eax]
0x0017804e : fdivr st(2) ; jmp dword ptr [edx]
0x00166341 : fdivr st(4) ; call dword ptr [ebx - 0x2c000328]
0x00166349 : fdivr st(4) ; call dword ptr [ebx]
0x00166345 : fdivr st(4) ; call ebx
0x00166539 : fdivr st(4) ; call edx
0x00184434 : fdivr st(5), st(0) ; int1 ; call dword ptr [ebx]
0x00086644 : fiadd dword ptr [ebx - 0x79f0ef15] ; ret 0x15
0x0013924b : fiadd word ptr [edx] ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x00138f71 : fild word ptr [edx] ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x00105133 : fimul word ptr [ecx] ; add byte ptr [ecx - 0x76d7db8c], cl ; ret 0xeac1
0x0014824f : fld qword ptr [ecx] ; add byte ptr [eax], al ; mov eax, ecx ; ret
0x00139352 : fld qword ptr [edx] ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x000d436c : fldcw word ptr [ebx] ; mov word ptr [ebx - 0xcec7c], ss ; jmp ecx
0x0018892d : fldenv dword ptr [eax - 0xc] ; jmp dword ptr [edx]
0x00095c55 : fldenv dword ptr [esi + 0xf] ; je 0x95cad ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x000a7572 : fldpi ; ret
0x00177b66 : fldz ; jmp dword ptr [edx]
0x00175474 : fmul dword ptr [ebx] ; add byte ptr [eax], al ; mov byte ptr [ebx], al ; out dx, al ; call dword ptr [ecx]
0x00166769 : frndint ; call dword ptr [eax]
0x00166351 : frndint ; call dword ptr [ebx - 0x2c000327]
0x00166359 : frndint ; call dword ptr [ebx]
0x00166355 : frndint ; call ebx
0x00166765 : frndint ; jmp eax
0x0017816a : fsqrt ; jmp dword ptr [edx]
0x0017813a : fsubp st(6) ; jmp dword ptr [edx]
0x000b9d69 : fsubr dword ptr [ebx] ; test byte ptr [ebx - 0xe9280], dh ; jmp eax
0x00174645 : fsubr st(4) ; jmp dword ptr [edi]
0x00168e31 : fucomi st(7) ; call eax
0x00168e29 : fucomi st(7) ; jmp eax
0x00168c21 : fucompi st(6) ; call esp
0x00168c39 : fucompi st(6) ; jmp dword ptr [eax]
0x0018733c : hlt ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x00189a5a : hlt ; jmp dword ptr [edi]
0x00188f52 : hlt ; jmp dword ptr [esi]
0x00017e73 : hlt ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10
0x00028f44 : hlt ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00017348 : hlt ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0001715b : hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00027c21 : hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 8
0x0014785a : hlt ; pop edi ; ret
0x00188a6c : hlt ; sbb esp, esi ; call eax
0x00169c68 : hlt ; sub al, 0xf1 ; jmp esp
0x00025878 : hlt ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000e8366 : hlt ; xor edx, edx ; pop ebx ; mov eax, edx ; pop esi ; pop edi ; pop ebp ; ret
0x00194551 : idiv bh ; sbb al, 0xd ; in al, dx ; xor al, 0xf6 ; jmp dword ptr [edx]
0x00195a45 : idiv bh ; sbb al, 0xd ; mov dword ptr [ebp - 0xa], ecx ; jmp dword ptr [edx]
0x00194f3d : idiv bh ; sbb al, 0xd ; sar byte ptr [esi + esi*8], 1 ; jmp dword ptr [edx]
0x00195449 : idiv bh ; sbb al, 0xd ; xor byte ptr [ecx - 0xa], al ; jmp dword ptr [edx]
0x00129a4b : idiv byte ptr [eax + 4] ; add esp, 0xc ; ret
0x000f7a61 : idiv byte ptr [ecx] ; ret 0x1e7e
0x00195b56 : idiv edi ; ret
0x00167f61 : imul bl ; jmp eax
0x00084b48 : imul dword ptr [ecx] ; ret 0x280f
0x0008656c : imul dword ptr [ecx] ; ret 0xc301
0x00184741 : imul eax, dword ptr [ecx], 0xa ; ret
0x00195d41 : imul eax, dword ptr [edx], 0 ; mov word ptr [edi - 9], es ; jmp dword ptr [esi]
0x000a7b43 : imul eax, edx ; ret
0x00174f55 : imul ebp ; jmp dword ptr [ebx]
0x0017804d : imul ebx, eax, -6 ; jmp dword ptr [edx]
0x00097c2b : imul edi, esi, -1 ; add esp, 0x18 ; pop ebx ; ret
0x00177575 : imul edx, ecx, -0x12 ; jmp dword ptr [edx]
0x000a8667 : imul edx, edx, 0xe10 ; pop esi ; add eax, edx ; ret
0x00017158 : in al, -0x73 ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x0001756d : in al, -0x77 ; dec ebp ; loopne 0x175a0 ; ret 0xe283
0x000c952b : in al, -0x7d ; les edx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x00148229 : in al, 0xf ; test dword ptr [eax - 0x77ffffff], esi ; ret 0xe280
0x00148354 : in al, 0xf ; test dword ptr [ebp - 0x78000000], eax ; ret 0xe280
0x0013826b : in al, dx ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00168172 : in al, dx ; call dword ptr [eax]
0x0016815a : in al, dx ; call eax
0x00166979 : in al, dx ; cld ; call dword ptr [edx]
0x000e7457 : in al, dx ; cmp al, 0xe8 ; adc eax, 0x81000429 ; ret
0x0016843a : in al, dx ; dec dword ptr [eax + 0x40000ab] ; xchg eax, edx ; in al, dx ; jmp eax
0x000a7b72 : in al, dx ; dec eax ; call 0x129d7b
0x0016807a : in al, dx ; jmp dword ptr [eax]
0x00174646 : in al, dx ; jmp dword ptr [edi]
0x00168462 : in al, dx ; ljmp ptr [eax + 0x40000ac] ; xchg eax, esi ; in al, dx ; call eax
0x00185367 : in al, dx ; ret 0xfff1
0x00194555 : in al, dx ; xor al, 0xf6 ; jmp dword ptr [edx]
0x0016625c : in eax, -0x2a ; cld ; jmp dword ptr [eax - 0x2f00032d]
0x0018536d : in eax, -0x41 ; int1 ; jmp dword ptr [edx]
0x0017477d : in eax, -0x4a ; in al, dx ; jmp dword ptr [edx]
0x000c6c49 : in eax, dx ; add al, byte ptr [eax] ; add byte ptr [ecx], bh ; ret 0x840f
0x00138162 : in eax, dx ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00168f2d : in eax, dx ; add byte ptr [eax], al ; aam 0xee ; out dx, eax ; jmp dword ptr [eax]
0x00095967 : in eax, dx ; add eax, ecx ; pop edi ; ret
0x0016887a : in eax, dx ; call eax
0x00168972 : in eax, dx ; dec eax ; leave ; add byte ptr [eax], al ; popfd ; in eax, dx ; jmp dword ptr [eax]
0x0016883a : in eax, dx ; jmp dword ptr [eax - 0x3d]
0x00168822 : in eax, dx ; jmp dword ptr [eax]
0x00168852 : in eax, dx ; jmp eax
0x0007926f : in eax, dx ; ret 0xffff
0x0016684b : inc dword ptr [eax + 0x70fffce8] ; out 0xfc, al ; call dword ptr [eax]
0x00166e2f : inc dword ptr [eax + 2] ; std ; call eax
0x00166953 : inc dword ptr [eax - 0x1d] ; cld ; call eax
0x00166f53 : inc dword ptr [eax - 0x2f0002e2] ; push ds ; std ; jmp dword ptr [eax]
0x0016675f : inc dword ptr [eax - 0x4f000327] ; frndint ; jmp eax
0x00045e64 : inc dword ptr [eax - 0x50743] ; jmp dword ptr [eax]
0x00167977 : inc dword ptr [eax - 0x6d] ; cld ; call eax
0x000b9a61 : inc dword ptr [eax] ; add byte ptr [eax], al ; jne 0xb9a3f ; ret
0x00167b7b : inc dword ptr [eax] ; js 0x167b87 ; add byte ptr [ebx + ebx - 0x15], ah ; jmp dword ptr [eax]
0x00166943 : inc dword ptr [eax] ; loope 0x16694b ; call dword ptr [eax + 0x20fffce1]
0x0010505f : inc dword ptr [eax] ; ret
0x00166a33 : inc dword ptr [eax] ; stc ; cld ; call edx
0x000d8741 : inc dword ptr [ebp + 0x74c289c0] ; ret
0x000f7324 : inc dword ptr [ebx + 0x5e5b10c4] ; pop edi ; ret
0x00167553 : inc dword ptr [ebx + ecx*2 + 0x4c34fffd] ; std ; jmp esp
0x0001896c : inc dword ptr [ebx - 0xb77b] ; jmp dword ptr [eax]
0x00127b71 : inc dword ptr [ebx - 0xf76bf3c] ; pop esi ; pop edi ; pop ebp ; ret
0x00055c41 : inc dword ptr [ecx + 0xc4c4] ; add byte ptr [ebx + 0x5e], bl ; ret
0x00095926 : inc dword ptr [ecx] ; clc ; pop edi ; ret
0x00095963 : inc dword ptr [ecx] ; clc ; xor ch, ch ; add eax, ecx ; pop edi ; ret
0x00166673 : inc dword ptr [edx + ebx*8 - 0x254b0004] ; cld ; jmp esp
0x00166e73 : inc dword ptr [edx] ; adc ch, bh ; call dword ptr [edx + 0x22fffd10]
0x00166e5f : inc dword ptr [esi + 0x8fffd0f] ; adc ch, bh ; jmp edx
0x00166f43 : inc dword ptr [esi - 0x290002e2] ; push ds ; std ; jmp dword ptr [esi]
0x00166e30 : inc eax ; add bh, ch ; call eax
0x00095865 : inc eax ; add edx, eax ; jl 0x958a7 ; add eax, ecx ; ret
0x0018737b : inc eax ; add esi, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00026737 : inc eax ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00019e45 : inc eax ; add esp, 0x44 ; ret
0x000f7234 : inc eax ; cmove eax, edx ; ret
0x00068127 : inc eax ; cmp byte ptr [ebp - 0xcfc8740], al ; ret
0x00195d40 : inc eax ; imul eax, dword ptr [edx], 0 ; mov word ptr [edi - 9], es ; jmp dword ptr [esi]
0x000a7b21 : inc eax ; inc edx ; str word ptr [ebx - 0x76dfdba4] ; ret 0x7c8b
0x00166954 : inc eax ; jecxz 0x166956 ; call eax
0x0014707c : inc eax ; jne 0x1470ea ; add eax, 7 ; ret
0x00079b61 : inc eax ; mov dword ptr [esp + 4], edx ; call eax
0x00094e35 : inc eax ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00127b74 : inc eax ; mov eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x00149076 : inc eax ; or al, 0x5f ; ret
0x00185040 : inc eax ; pop esi ; add dword ptr [eax], eax ; jl 0x185072 ; jmp dword ptr [esi]
0x00097b7a : inc eax ; pop esi ; pop edi ; pop ebp ; ret
0x00129935 : inc eax ; pop esp ; ret
0x00129925 : inc eax ; push eax ; ret
0x00149036 : inc eax ; push es ; pop edi ; ret
0x00174640 : inc eax ; push esp ; add byte ptr [eax], al ; pushfd ; fsubr st(4) ; jmp dword ptr [edi]
0x00168864 : inc eax ; ret 0
0x000c745a : inc eax ; sbb al, 0 ; add byte ptr [eax], al ; add dh, dh ; ret 0xc740
0x000c9641 : inc eax ; sbb al, 0x83 ; ret 0x8501
0x00167978 : inc eax ; xchg eax, ebx ; cld ; call eax
0x00167973 : inc eax ; xchg eax, edx ; cld ; inc dword ptr [eax - 0x6d] ; cld ; call eax
0x00198640 : inc eax ; xchg eax, esp ; add al, byte ptr [eax] ; jl 0x198660 ; clc ; jmp dword ptr [edi]
0x00027059 : inc eax ; xor al, 0xf ; mov bh, 4 ; push eax ; and eax, 1 ; ret
0x00027159 : inc eax ; xor al, 0xf ; mov bh, 4 ; push eax ; and eax, 4 ; ret
0x00027079 : inc eax ; xor al, 0xf ; mov bh, 4 ; push eax ; and eax, 8 ; ret
0x000f7a5c : inc ebp ; adc al, 0x39 ; ret 0xf67c
0x00018068 : inc ebp ; adc al, 0x83 ; ret 0x108
0x000f7a4f : inc ebp ; adc al, 0x8b ; push ecx ; adc al, 0x39 ; ret 0xa7d
0x00017157 : inc ebp ; in al, -0x73 ; hlt ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00174d32 : inc ebp ; in eax, dx ; jmp dword ptr [edx]
0x00049358 : inc ebp ; mov ah, 0xe9 ; ret
0x00049729 : inc ebp ; mov byte ptr [edi], cl ; inc esp ; ret 0x4589
0x00048a64 : inc ebp ; mov esp, 0x8904c683 ; ret 0xfac1
0x00189957 : inc ebp ; or eax, dword ptr [ebx] ; aam 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00177357 : inc ebp ; or eax, dword ptr [ebx] ; add word ptr [edx], cx ; push cs ; adc al, 0x43 ; ret
0x0018912f : inc ebp ; or eax, dword ptr [ebx] ; cmp byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00174c6c : inc ebp ; or eax, dword ptr [edx] ; lds ecx, ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x0019847b : inc ebp ; or eax, dword ptr [edx] ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00174627 : inc ebp ; or eax, dword ptr [edx] ; push esi ; ret
0x00174234 : inc ebp ; or esi, dword ptr [esi + 0xa] ; ret
0x00097b72 : inc ebp ; ret 0x748d
0x000b9946 : inc ebp ; ret 0x8dc3
0x000a7927 : inc ebp ; ret 0xa5eb
0x0004662b : inc ebp ; ret 0xbd89
0x000e752f : inc ebp ; ror byte ptr [ebp + 0x5e5bf465], 1 ; pop edi ; pop ebp ; ret 4
0x00177755 : inc ebp ; shr dh, cl ; jmp dword ptr [edx]
0x0019644f : inc ebx ; or eax, dword ptr [ebx] ; aad 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x0018883f : inc ebx ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x00198075 : inc ebx ; or eax, dword ptr [edx] ; push esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x0017473a : inc ebx ; or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00198e53 : inc ebx ; push cs ; adc byte ptr [ebx + 0xc0e7e04], al ; ret
0x00165e43 : inc ebx ; sar esp, 1 ; push ebx ; sar esp, 1 ; jmp dword ptr [ebx]
0x00166333 : inc ebx ; xlatb ; cld ; push ebx ; xlatb ; cld ; jmp dword ptr [ebx]
0x00097f28 : inc ecx ; add al, 0 ; add byte ptr [eax], al ; add byte ptr [esi + 0x5f], bl ; pop ebp ; ret
0x000c8d77 : inc ecx ; add al, 0x85 ; ror byte ptr [edi], 0x94 ; ret 0xa5e9
0x00085675 : inc ecx ; add al, 0x88 ; inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x00089a45 : inc ecx ; add al, 0x88 ; inc edx ; add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x00085667 : inc ecx ; add cl, byte ptr [eax - 0x776fdbe] ; pop edi ; ret
0x000f7232 : inc ecx ; add dword ptr [eax + 0xf], eax ; inc esp ; ret 0x8dc3
0x0019646a : inc ecx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00089a75 : inc ecx ; add ecx, dword ptr [ecx + 0x428d0342] ; push es ; pop edi ; ret
0x000e6a66 : inc ecx ; clc ; pop ds ; add esp, 0xc ; ret
0x000f7a74 : inc ecx ; or al, 0x39 ; ret 0x1474
0x0014842c : inc ecx ; or al, 0xc3 ; nop ; lea eax, dword ptr [ecx + 1] ; ret
0x00184561 : inc ecx ; or al, 4 ; add al, 0xc5 ; inc ecx ; or ebp, dword ptr [esi + 0xa] ; ret
0x0018832c : inc ecx ; or al, 4 ; add al, 0xc5 ; inc ecx ; or edx, dword ptr [esi + 0xa] ; ret
0x00175831 : inc ecx ; or al, 4 ; add al, 0xc5 ; inc esp ; or ebx, dword ptr [edx + 0xa] ; ret
0x00187339 : inc ecx ; or eax, dword ptr [ebx] ; hlt ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x00196467 : inc ecx ; or eax, dword ptr [ebx] ; inc ecx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00196522 : inc ecx ; or eax, dword ptr [ebx] ; pop edx ; add dword ptr [edx], ecx ; ret
0x00186542 : inc ecx ; or eax, dword ptr [ebx] ; push ecx ; add dword ptr [edx], ecx ; ret
0x00186c6a : inc ecx ; or eax, dword ptr [ebx] ; push esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00178b74 : inc ecx ; or eax, dword ptr [edx] ; inc edi ; ret
0x00195d23 : inc ecx ; or eax, dword ptr [edx] ; mov cs, word ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x00184566 : inc ecx ; or ebp, dword ptr [esi + 0xa] ; ret
0x00199759 : inc ecx ; or ebx, dword ptr [eax + 0xa] ; ret
0x0019585d : inc ecx ; or ebx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00188331 : inc ecx ; or edx, dword ptr [esi + 0xa] ; ret
0x00189a30 : inc ecx ; push cs ; adc al, 0x83 ; add eax, 0x2400e43 ; ret 0xe0a
0x00174623 : inc ecx ; push cs ; add al, 0xc5 ; inc ebp ; or eax, dword ptr [edx] ; push esi ; ret
0x00184e4b : inc ecx ; push cs ; or byte ptr [ebx + 0x40e4502], al ; ret
0x00184d56 : inc ecx ; push cs ; or byte ptr [ebx + 0x40e4802], al ; ret
0x00148471 : inc ecx ; push es ; ret
0x00056a6b : inc edi ; adc al, 0xc1 ; clc ; add bh, byte ptr [ecx] ; ret 0x1974
0x00076f55 : inc edi ; add al, 0x24 ; add byte ptr [eax], al ; add byte ptr [eax], al ; call dword ptr [eax]
0x00147441 : inc edi ; add al, 0x5f ; ret
0x00147921 : inc edi ; cli ; pop edi ; ret
0x00147859 : inc edi ; hlt ; pop edi ; ret
0x00095a62 : inc edi ; lcall ptr [esi + 0x5f] ; pop ebp ; ret
0x0015937d : inc edi ; mov edx, 0xcac982a4 ; call 0xaed831ff
0x000d6963 : inc edi ; or byte ptr [ecx], bh ; ret 0xd772
0x00178f7b : inc edi ; or eax, dword ptr [edx] ; insd dword ptr es:[edi], dx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00197d47 : inc edi ; or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00189634 : inc edi ; or eax, dword ptr [edx] ; push ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00184469 : inc edi ; or eax, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x0014726e : inc edi ; pop es ; pop edi ; ret
0x00199c6a : inc edi ; push cs ; or byte ptr [esi + ecx + 4], al ; ret
0x00147461 : inc edi ; push es ; pop edi ; ret
0x00178b77 : inc edi ; ret
0x000f6e79 : inc edi ; sbb al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x00056a68 : inc edi ; sbb byte ptr [ebx], ch ; inc edi ; adc al, 0xc1 ; clc ; add bh, byte ptr [ecx] ; ret 0x1974
0x00147941 : inc edi ; std ; pop edi ; ret
0x00095a76 : inc edi ; std ; pop esi ; pop edi ; pop ebp ; ret
0x00147931 : inc edi ; sti ; pop edi ; ret
0x000c5e76 : inc edx ; adc al, 0x83 ; les ebp, ptr [eax] ; pop esi ; pop edi ; pop ebp ; ret
0x00089a4b : inc edx ; add al, 0x5f ; ret
0x00085678 : inc edx ; add al, 0x89 ; clc ; pop edi ; ret
0x00089a48 : inc edx ; add al, 0x8d ; inc edx ; add al, 0x5f ; ret
0x00187f3c : inc edx ; add dword ptr [0x5d030486], 6 ; ret
0x00186530 : inc edx ; add dword ptr [0x7c020486], 0xa ; ret
0x00038a61 : inc edx ; add dword ptr [ecx], edi ; ret 0x689
0x00095d34 : inc edx ; add esi, dword ptr [eax + edx - 0x7d] ; ret 0x3904
0x0018534d : inc edx ; call dword ptr [eax]
0x0013632a : inc edx ; cld ; mov eax, edx ; pop ebx ; ret
0x00167323 : inc edx ; cmp bh, ch ; call dword ptr [edx]
0x0016746b : inc edx ; dec ebx ; std ; inc edx ; dec ecx ; std ; call dword ptr [eax]
0x0016746f : inc edx ; dec ecx ; std ; call dword ptr [eax]
0x00178331 : inc edx ; fdiv st(2), st(0) ; jmp dword ptr [edx]
0x00195448 : inc edx ; idiv bh ; sbb al, 0xd ; xor byte ptr [ecx - 0xa], al ; jmp dword ptr [edx]
0x00187b65 : inc edx ; or eax, dword ptr [ebx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x0019805e : inc edx ; or eax, dword ptr [edx] ; xchg eax, edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x0017422c : inc edx ; or esi, dword ptr [ebx + 0xa] ; ret
0x0017467a : inc edx ; or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x0008582c : inc edx ; pop es ; mov eax, edx ; ret
0x00089979 : inc edx ; pop es ; pop edi ; ret
0x00167763 : inc edx ; pop esp ; std ; call dword ptr [edx]
0x00089b33 : inc edx ; push cs ; pop edi ; ret
0x00089a7b : inc edx ; push es ; pop edi ; ret
0x00064130 : inc edx ; ret 0x4589
0x00166037 : inc edx ; sar esp, 1 ; jmp edx
0x00177665 : inc edx ; shr dh, cl ; jmp dword ptr [edx]
0x000a7b22 : inc edx ; str word ptr [ebx - 0x76dfdba4] ; ret 0x7c8b
0x00167167 : inc edx ; sub al, 0xfd ; call dword ptr [edx]
0x000e4d7a : inc edx ; xor eax, eax ; ret
0x00114170 : inc esi ; add al, 0x89 ; jl 0x1141a2 ; add al, 0x89 ; xor al, 0x24 ; call dword ptr [eax]
0x000f6747 : inc esi ; and byte ptr [ebx - 0xf76eb3c], al ; pop ebx ; pop esi ; ret
0x0016704b : inc esi ; and ch, bh ; call eax
0x00149724 : inc esi ; cld ; jne 0x149737 ; pop edi ; pop esi ; pop ebx ; ret
0x00109176 : inc esi ; int 0x80
0x00069573 : inc esi ; or al, 0x89 ; ret 0x562b
0x0006952c : inc esi ; or byte ptr [ecx + 0x29cd29d5], cl ; ret 0xe75
0x0018446b : inc esi ; push cs ; adc al, 0x41 ; ret
0x00067b6f : inc esi ; push esp ; mov dword ptr [esp + 4], eax ; mov dword ptr [esp], ebp ; call edi
0x0014572b : inc esi ; ret 0x5d5e
0x000e802d : inc esi ; sbb eax, 0xc1810004 ; ret
0x0010994c : inc esi ; sub byte ptr [ecx - 0x76cfdbbc], cl ; ret 0x448d
0x00095c74 : inc esp ; adc al, dh ; ret
0x000a726a : inc esp ; add bh, bh ; pop esi ; pop edi ; ret
0x000b9b71 : inc esp ; add bh, bh ; ret
0x00095c6b : inc esp ; add dh, byte ptr [eax] ; ret
0x0009587b : inc esp ; add dword ptr [eax], edx ; ret
0x00178b6b : inc esp ; add dword ptr [ebx], 0x60 ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00179d37 : inc esp ; add dword ptr [ebx], 0x79 ; push cs ; add al, 0xc6 ; ret
0x00065d57 : inc esp ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00127951 : inc esp ; and al, 0x10 ; mov eax, dword ptr [eax] ; add esp, 0xc ; ret
0x00097036 : inc esp ; and al, 0x1c ; add dword ptr [ebx + 0x211c244c], ecx ; ret 0xd789
0x000b555b : inc esp ; and al, 0x1c ; add esp, 0x30 ; pop ebx ; pop esi ; pop edi ; ret
0x00126e60 : inc esp ; and al, 0x1c ; add esp, 0x34 ; pop ebx ; pop esi ; ret
0x00117143 : inc esp ; and al, 0x38 ; or byte ptr [ebp - 0x49], dh ; jmp 0x117115
0x00027031 : inc esp ; and al, 4 ; and eax, 0x7f ; ret
0x00105031 : inc esp ; and al, 4 ; bswap eax ; ret
0x000d9129 : inc esp ; and al, 4 ; call 0xc5435
0x00098f69 : inc esp ; and al, 4 ; mov dword ptr [esp], edi ; call esi
0x00067921 : inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x24] ; mov eax, dword ptr [eax + 0x28] ; ret
0x00129921 : inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x50] ; ret
0x00129931 : inc esp ; and al, 4 ; mov eax, dword ptr [eax + 0x5c] ; ret
0x00098725 : inc esp ; and al, 4 ; mov eax, dword ptr [ebp] ; mov dword ptr [esp], eax ; call esi
0x000d8a29 : inc esp ; and al, 4 ; mov word ptr [eax], dx ; xor eax, eax ; ret
0x00064d52 : inc esp ; and al, 8 ; call 0x129d7c
0x000d8a48 : inc esp ; and al, 8 ; mov dword ptr [eax], edx ; xor eax, eax ; ret
0x00199325 : inc esp ; clc ; jmp dword ptr [eax]
0x0019933d : inc esp ; clc ; jmp dword ptr [edi]
0x000d873f : inc esp ; cli ; inc dword ptr [ebp + 0x74c289c0] ; ret
0x00095564 : inc esp ; cmp al, dh ; pop edi ; ret
0x0019946c : inc esp ; dec ebp ; clc ; jmp dword ptr [ebx]
0x000f7231 : inc esp ; inc ecx ; add dword ptr [eax + 0xf], eax ; inc esp ; ret 0x8dc3
0x00117847 : inc esp ; mov esi, dword ptr [esp + 0x48] ; add esp, 0x4c ; ret
0x00095844 : inc esp ; or byte ptr [eax], ah ; ret
0x00095854 : inc esp ; or byte ptr [eax], dh ; ret
0x00095834 : inc esp ; or byte ptr [eax], dl ; ret
0x00189846 : inc esp ; or eax, dword ptr [ebx] ; add al, 3 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00189b6d : inc esp ; or eax, dword ptr [edx] ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00175836 : inc esp ; or ebx, dword ptr [edx + 0xa] ; ret
0x0018874e : inc esp ; or edi, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00196a35 : inc esp ; or edx, dword ptr [ecx + 0xa] ; ret
0x00168170 : inc esp ; pop edx ; in al, dx ; call dword ptr [eax]
0x0013485e : inc esp ; pop es ; add eax, 0x8b1c035f ; jmp ebx
0x0013473e : inc esp ; pop es ; add ebx, dword ptr [edi + 3] ; sbb al, 0x8b ; jmp ebx
0x00134c4e : inc esp ; pop es ; or al, 0x5f ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134b2e : inc esp ; pop es ; or bl, byte ptr [edi + 3] ; sbb al, 0x8b ; jmp ebx
0x0013497e : inc esp ; pop es ; pop es ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134d6e : inc esp ; pop es ; push cs ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00019e48 : inc esp ; ret
0x00098963 : inc esp ; ret 0x4489
0x0004972c : inc esp ; ret 0x4589
0x000f976b : inc esp ; ret 0x568d
0x00124247 : inc esp ; ret 0x8965
0x000f7236 : inc esp ; ret 0x8dc3
0x00098423 : inc esp ; rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0017892c : inc esp ; sub ch, bh ; jmp dword ptr [ebx]
0x0019535c : inc esp ; xor dh, bh ; call ebx
0x00117172 : insb byte ptr es:[edi], dx ; and al, 0x26 ; call 0x129d7c
0x0012755e : insb byte ptr es:[edi], dx ; and al, 0x28 ; add esp, 0x2c ; ret 4
0x000d9c63 : insb byte ptr es:[edi], dx ; and al, 0x28 ; add esp, 0x2c ; ret 8
0x000e625e : insb byte ptr es:[edi], dx ; and al, 0x3c ; add esp, 0x40 ; ret
0x000e734c : insb byte ptr es:[edi], dx ; and al, 0x48 ; call 0x129d7c
0x000e5c30 : insb byte ptr es:[edi], dx ; and al, 0x58 ; call 0x129d7c
0x00066348 : insb byte ptr es:[edi], dx ; and al, 0x68 ; add esp, 0x6c ; ret
0x00096448 : insb byte ptr es:[edi], dx ; and al, 0x70 ; call 0x129d7c
0x00079532 : insb byte ptr es:[edi], dx ; and al, 4 ; mov dword ptr [esp + 8], edx ; call eax
0x0002692e : insb byte ptr es:[edi], dx ; and al, 8 ; add esp, 0xc ; ret
0x00168821 : insb byte ptr es:[edi], dx ; in eax, dx ; jmp dword ptr [eax]
0x00199324 : insb byte ptr es:[edi], dx ; inc esp ; clc ; jmp dword ptr [eax]
0x0018793e : insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; add al, 0xc7 ; ret
0x0006634d : insb byte ptr es:[edi], dx ; ret
0x0018856c : insb byte ptr es:[edi], dx ; xchg eax, ebx ; add dword ptr [eax], eax ; pushal ; xlatb ; jmp dword ptr [ecx]
0x00186479 : insd dword ptr es:[edi], dx ; add dword ptr [eax], eax ; jmp 0x1118576f
0x000f7a59 : insd dword ptr es:[edi], dx ; or al, 0x8b ; inc ebp ; adc al, 0x39 ; ret 0xf67c
0x00169e48 : insd dword ptr es:[edi], dx ; xor ecx, esi ; call esp
0x00177e75 : int1 ; add dword ptr [edx], ecx ; ret
0x00184542 : int1 ; call edi
0x000f7323 : int1 ; inc dword ptr [ebx + 0x5e5b10c4] ; pop edi ; ret
0x00008422 : int1 ; jmp edi
0x00169c6a : int1 ; jmp esp
0x000c6b26 : int1 ; mov edx, dword ptr [edx + 8] ; pop ebx ; pop esi ; mov eax, edx ; ret
0x000c5c36 : int1 ; pop esi ; ret
0x0017724d : into ; iretd ; out dx, al ; jmp dword ptr [edx]
0x000f7d26 : into ; movzx edx, byte ptr [edi] ; movsx esi, dl ; jmp 0xf7cfa
0x00168d29 : into ; out dx, eax ; call dword ptr [eax]
0x00178178 : into ; sti ; call dword ptr [eax]
0x00175b4d : iretd ; mov bh, 0xee ; jmp dword ptr [edx]
0x0017704a : iretd ; out dx, al ; jmp dword ptr [edx]
0x00145445 : ja 0x145452 ; neg eax ; add esp, 4 ; pop ebp ; pop ebx ; ret
0x0014576d : ja 0x145775 ; neg eax ; ret
0x00179945 : ja 0x17994b ; out dx, eax ; jmp dword ptr [edx]
0x00186b4e : ja 0x186b5f ; push cs ; add al, 0xc6 ; ret
0x00186e65 : ja 0x186e6e ; add byte ptr [eax - 1], ah ; call dword ptr [eax]
0x0019576a : ja 0x19577b ; push cs ; add al, 0xc6 ; ret
0x00196866 : ja 0x196877 ; push cs ; add al, 0xc6 ; ret
0x000b9144 : ja 0xb9178 ; add esp, 0x38 ; pop ebx ; ret
0x000c5c35 : ja 0xc5c2b ; pop esi ; ret
0x000e7a26 : ja 0xe7a5e ; add esp, 0x38 ; pop ebx ; ret
0x00147269 : jae 0x147275 ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x00165e28 : jae 0x165e01 ; cld ; jmp dword ptr [ebx - 0x2c000330]
0x00168359 : jae 0x168349 ; call dword ptr [eax]
0x0017422e : jae 0x17423c ; ret
0x00176825 : jae 0x1767f1 ; out dx, al ; jmp dword ptr [edx]
0x000a847d : jae 0xa8482 ; ret
0x000b9379 : jae 0xb937e ; ret
0x000c544f : jae 0xc5454 ; ret
0x000c5549 : jae 0xc554e ; ret
0x000e4f31 : jae 0xe4f36 ; ret
0x000e7d5d : jae 0xe7d62 ; ret
0x000e7e2d : jae 0xe7e32 ; ret
0x000e8029 : jae 0xe802e ; ret
0x000e8069 : jae 0xe806e ; ret
0x000e8163 : jae 0xe8194 ; ret
0x00129044 : jb 0x128fe1 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00148043 : jb 0x148086 ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x00148053 : jb 0x148086 ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x00148063 : jb 0x148086 ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x00148073 : jb 0x148086 ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x00148023 : jb 0x148086 ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x00148033 : jb 0x148086 ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x00149063 : jb 0x1490a6 ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x00149073 : jb 0x1490a6 ; lea eax, dword ptr [eax + 0xc] ; pop edi ; ret
0x00149023 : jb 0x1490a6 ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x00149033 : jb 0x1490a6 ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x00149043 : jb 0x1490a6 ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x00149053 : jb 0x1490a6 ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x00167164 : jb 0x167199 ; std ; inc edx ; sub al, 0xfd ; call dword ptr [edx]
0x00167268 : jb 0x16729b ; std ; call edx
0x00176175 : jb 0x176137 ; out dx, al ; jmp dword ptr [edx]
0x00186e2e : jb 0x186e24 ; jmp dword ptr [edx]
0x00186f2a : jb 0x186f20 ; jmp dword ptr [edx]
0x00186f5a : jb 0x186f50 ; jmp dword ptr [edx]
0x0018702a : jb 0x187020 ; jmp dword ptr [edx]
0x0018705a : jb 0x187050 ; jmp dword ptr [edx]
0x000a756c : jb 0xa757e ; cmp dword ptr [ecx + 8], esi ; jne 0xa7554 ; jmp 0xa7540
0x0011433e : jbe 0x114347 ; pop esi ; xor eax, eax ; pop edi ; pop ebp ; ret
0x00124537 : jbe 0x1244be ; ret 0xc709
0x00124536 : jbe 0x1244bf ; ret 0xc709
0x00124535 : jbe 0x1244c0 ; ret 0xc709
0x0014973e : jbe 0x149745 ; pop edi ; pop esi ; pop ebx ; ret
0x00167048 : jbe 0x167071 ; std ; inc esi ; and ch, bh ; call eax
0x00174236 : jbe 0x174244 ; ret
0x00176721 : jbe 0x176735 ; adc al, 0x41 ; ret
0x00187265 : jbe 0x1872e3 ; jmp dword ptr [edx]
0x00035a4e : jbe 0x35a59 ; push ebx ; call 0x129d7c
0x00035b4e : jbe 0x35b59 ; push ebx ; call 0x129d7c
0x0009527e : jbe 0x95285 ; xor eax, eax ; pop edi ; ret
0x00099c7e : jbe 0x99c89 ; push ebx ; call 0x129d7c
0x00099d7e : jbe 0x99d89 ; push ebx ; call 0x129d7c
0x000d934c : jbe 0xd9353 ; ret
0x000e8836 : jbe 0xe8807 ; idiv bh ; add esp, 0x18 ; pop ebx ; ret
0x000e8b36 : jbe 0xe8b3f ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x0010712b : je 0x1070e8 ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00115f3d : je 0x115f69 ; add bl, dh ; ret
0x00116378 : je 0x116327 ; add esp, 0x6c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00116955 : je 0x116961 ; mov dword ptr [esp], esi ; call eax
0x00117849 : je 0x117875 ; dec eax ; add esp, 0x4c ; ret
0x00124770 : je 0x12479e ; sbb byte ptr [ebx - 0x2f76e33c], al ; ret
0x0012784d : je 0x12785f ; add esp, 0x24 ; pop esi ; pop edi ; ret
0x00135762 : je 0x135788 ; call 0x129d7b
0x00167730 : je 0x167791 ; std ; call esp
0x00168851 : je 0x168842 ; jmp eax
0x00168859 : je 0x16884a ; call dword ptr [eax]
0x00168879 : je 0x16886a ; call eax
0x00168838 : je 0x1688ad ; in eax, dx ; jmp dword ptr [eax - 0x3d]
0x00174a7c : je 0x174ad6 ; in eax, dx ; call dword ptr [eax]
0x00176624 : je 0x17669c ; add byte ptr [eax], al ; push edi ; add edi, ebp ; call dword ptr [eax]
0x0018806c : je 0x18802f ; jmp dword ptr [eax]
0x00196d49 : je 0x196d57 ; ret
0x0019933c : je 0x199385 ; clc ; jmp dword ptr [edi]
0x00199d74 : je 0x199d28 ; add al, byte ptr [eax] ; dec eax ; pop esi ; clc ; jmp dword ptr [ebx]
0x00025f79 : je 0x25fa5 ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00068968 : je 0x68996 ; and byte ptr [ecx - 0x17ebdba4], cl ; call dword ptr [ebx]
0x00076c27 : je 0x76c53 ; xor al, 0x89 ; xor ch, cl ; ret 0xfffe
0x00077b68 : je 0x77b96 ; and byte ptr [ecx - 0x17ebdba4], cl ; jmp dword ptr [ecx]
0x00078328 : je 0x7832e ; call eax
0x00095922 : je 0x95988 ; bsr edi, edi ; add eax, edi ; pop edi ; ret
0x00095c58 : je 0x95caa ; xor byte ptr [esi + 0xf], ah ; xlatb ; ret
0x00097b75 : je 0x97ba6 ; add byte ptr [ebx + 0x5f5e40c4], al ; pop ebp ; ret
0x00097d4a : je 0x97d5b ; lea eax, dword ptr [ebx - 0xfcaa4] ; pop ebx ; ret
0x00097e6a : je 0x97e7b ; lea eax, dword ptr [ebx - 0xfbd84] ; pop ebx ; ret
0x0009812a : je 0x9813b ; lea eax, dword ptr [ebx - 0x595d4] ; pop ebx ; ret
0x0009843d : je 0x9846b ; add bl, al ; xor eax, eax ; ret
0x0009854f : je 0x9857c ; test ecx, ecx ; jne 0x98549 ; pop esi ; pop edi ; pop ebp ; ret
0x000a7b3d : je 0xa7b6b ; and al, 0x83 ; les ebp, ptr [edi + ecx] ; scasd eax, dword ptr es:[edi] ; ret 0x90c3
0x000a845a : je 0xa8463 ; mov dword ptr [edx], eax ; ret
0x000b9a35 : je 0xb9ab0 ; nop ; mov eax, 0x20 ; ret
0x000b9b55 : je 0xb9b47 ; mov eax, 1 ; ret
0x000c733c : je 0xc7369 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000d503d : je 0xd506b ; cmp byte ptr [ebx - 0x7ccbdb8c], cl ; ret 0x8b01
0x000d5041 : je 0xd506b ; xor al, 0x83 ; ret 0x8b01
0x000d7621 : je 0xd75c0 ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000e6a24 : je 0xe69b9 ; insb byte ptr es:[edi], dx ; and al, 0x78 ; add esp, 0x7c ; ret
0x000e9635 : je 0xe9663 ; add byte ptr [ecx], dh ; shr bl, cl ; ret 0x748d
0x000e9922 : je 0xe992b ; mov dword ptr [eax], edx ; ret
0x000f5a68 : je 0xf5a97 ; inc esp ; call 0x129d7c
0x000f6768 : je 0xf6797 ; push eax ; call 0x129d7c
0x000f7d25 : je 0xf7cfe ; movzx edx, byte ptr [edi] ; movsx esi, dl ; jmp 0xf7cfb
0x000f8b50 : je 0xf8b5c ; xor eax, eax ; ret
0x00114333 : jecxz 0x1142f6 ; add dword ptr [eax], eax ; add byte ptr [eax], al ; pop esi ; pop edi ; pop ebp ; ret
0x00138379 : jecxz 0x138310 ; mov dh, 0 ; add byte ptr [eax], al ; add byte ptr [eax], bh ; ret 0x840f
0x00139359 : jecxz 0x1392f0 ; mov dh, 0 ; add byte ptr [eax], al ; add byte ptr [eax], bh ; ret 0x840f
0x00166955 : jecxz 0x166955 ; call eax
0x00149735 : jg 0x149747 ; neg eax ; pop edi ; pop esi ; pop ebx ; ret
0x00149826 : jg 0x149834 ; neg eax ; ret
0x0004456c : jg 0x444f9 ; ret 0x870f
0x00044e22 : jg 0x44e57 ; test dword ptr [eax + 0x39fffffb], eax ; ret 0x870f
0x00045260 : jg 0x45279 ; test byte ptr [ecx - 0x7d000000], dh ; ret 0x8301
0x0004652f : jg 0x46564 ; test dword ptr [eax + 0x39fffffb], eax ; ret 0x860f
0x0005684c : jg 0x567d9 ; ret 0x870f
0x00056859 : jg 0x5688e ; test dword ptr [eax + 0x39ffffef], esi ; ret 0x870f
0x0005694a : jg 0x568d7 ; ret 0x870f
0x00056957 : jg 0x5698c ; test dword ptr [eax + 0x39ffffef], esi ; ret 0x870f
0x00059723 : jg 0x59758 ; test dword ptr [eax + 0x39ffffef], esi ; ret 0x1c77
0x00085636 : jg 0x8563f ; mov eax, edi ; pop edi ; ret
0x000a7225 : jg 0xa722d ; neg eax ; ret
0x000a7e5e : jg 0xa7e72 ; dec ebp ; ret 0xc483
0x000b9923 : jg 0xb992a ; add byte ptr [eax], al ; pop ebx ; ret
0x0014782f : jge 0x147839 ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00176f59 : jge 0x176f61 ; add ah, dl ; or edi, ebp ; call esp
0x00017730 : jge 0x17742 ; call 0x129d7b
0x000a7923 : jge 0xa7925 ; dec dword ptr [edi] ; inc ebp ; ret 0xa5eb
0x00114173 : jl 0x11419f ; add al, 0x89 ; xor al, 0x24 ; call dword ptr [eax]
0x0012662e : jl 0x12665a ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00148723 : jl 0x148745 ; lea eax, dword ptr [ecx + 0xe] ; ret
0x00148733 : jl 0x148745 ; lea eax, dword ptr [ecx + 0xf] ; ret
0x00148521 : jl 0x148748 ; mov eax, ecx ; ret
0x0014866e : jl 0x148749 ; lea eax, dword ptr [ecx + 0xc] ; ret
0x00148644 : jl 0x148749 ; lea eax, dword ptr [ecx + 8] ; ret
0x00167038 : jl 0x167061 ; std ; dec esp ; and ch, bh ; call esi
0x0017712c : jl 0x1771ac ; add byte ptr [eax], al ; ret
0x00177c2c : jl 0x177bb7 ; add byte ptr [eax], al ; ret 0xef21
0x00185044 : jl 0x18506e ; jmp dword ptr [esi]
0x00186536 : jl 0x186544 ; ret
0x00186771 : jl 0x1867dd ; jmp dword ptr [edx]
0x00198644 : jl 0x19865c ; clc ; jmp dword ptr [edi]
0x0019877c : jl 0x19871a ; add al, byte ptr [eax] ; pushal ; sbb eax, edi ; call edx
0x00019e43 : jl 0x19e6f ; inc eax ; add esp, 0x44 ; ret
0x00054e58 : jl 0x54e87 ; pop esp ; call 0x129d7c
0x00067f50 : jl 0x67f7c ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00074e7b : jl 0x74ea7 ; dec eax ; add esp, 0x4c ; ret
0x00076469 : jl 0x76494 ; cmp byte ptr [edi], cl ; xchg eax, ebp ; ret 0xb60f
0x00095868 : jl 0x958a4 ; add eax, ecx ; ret
0x00095878 : jl 0x958a6 ; lea eax, dword ptr [ecx + eax + 0x10] ; ret
0x000a7e79 : jl 0xa7ea8 ; sub byte ptr [ecx], al ; add byte ptr [eax], al ; or byte ptr [edi], 0x4e ; ret 0xc483
0x000b947c : jl 0xb94a8 ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000c5a60 : jl 0xc5a8f ; push eax ; call 0x129d7c
0x000e7068 : jl 0xe7097 ; inc esp ; call 0x129d7c
0x000e822e : jl 0xe825a ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000e9770 : jl 0xe979c ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x000e985c : jl 0xe9888 ; add al, 0x83 ; les ecx, ptr [eax] ; ret
0x00177459 : jle 0x17742f ; out dx, al ; jmp dword ptr [edx]
0x000b903a : jle 0xb9045 ; mov eax, edx ; ret
0x0018647c : jmp 0x1118576c
0x00117149 : jmp 0x11710f
0x00125d44 : jmp 0x125d0a
0x0015926a : jmp 0x1592a9
0x00166961 : jmp 0x166965
0x00167b4a : jmp 0x167b4c
0x00167b52 : jmp 0x167b54
0x00167c32 : jmp 0x167c34
0x00167d4a : jmp 0x167d4c
0x00167d62 : jmp 0x167d64
0x00167f62 : jmp 0x167f64
0x000d7774 : jmp 0x2d06d7e
0x0004677a : jmp 0x42a41
0x00098543 : jmp 0x4cc084c
0x0007926e : jmp 0x75562
0x00086646 : jmp 0x8665c
0x000a7573 : jmp 0xa7539
0x000a7a2f : jmp 0xa79f4
0x000a7d4b : jmp 0xa7d11
0x000b9e4b : jmp 0xcb9360db
0x000d564c : jmp 0xd5612
0x000d7063 : jmp 0xd7029
0x000e963a : jmp 0xe95ff
0x000f7d2d : jmp 0xf7cf3
0x000f7d2c : jmp 0xf7cf4
0x00139e53 : jmp 0xfd5d66b
0x00186646 : jmp dword ptr [bp + si]
0x00169a4b : jmp dword ptr [eax + 0x26000126]
0x00166777 : jmp dword ptr [eax - 0x2f000326]
0x0016625f : jmp dword ptr [eax - 0x2f00032d]
0x0016883b : jmp dword ptr [eax - 0x3d]
0x00018972 : jmp dword ptr [eax]
0x00165e2b : jmp dword ptr [ebx - 0x2c000330]
0x000e7870 : jmp dword ptr [esp + eax]
0x00008423 : jmp edi
0x00109b38 : jne 0x109b30 ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x00117147 : jne 0x117103 ; jmp 0x117111
0x00124b36 : jne 0x124ac0 ; les ecx, ptr [eax] ; pop ebx ; ret
0x00124b35 : jne 0x124bb2 ; add esp, 8 ; pop ebx ; ret
0x00124d2f : jne 0x124d70 ; add esp, 0x14 ; mov eax, edx ; pop ebx ; pop esi ; ret
0x00126e34 : jne 0x126e47 ; add esp, 0x34 ; pop ebx ; pop esi ; ret
0x0012793a : jne 0x127967 ; xor eax, eax ; add esp, 0xc ; ret
0x00127e5a : jne 0x127e87 ; xor eax, eax ; add esp, 0xc ; ret
0x00146c56 : jne 0x146de7 ; pop ebx ; ret
0x0014705a : jne 0x147054 ; ret 0x7504
0x0014705e : jne 0x1470d9 ; add eax, 3 ; ret
0x0014707d : jne 0x1470e9 ; add eax, 7 ; ret
0x00147e22 : jne 0x147ef9 ; xor eax, eax ; pop edi ; ret
0x0014876a : jne 0x148398 ; xor eax, eax ; ret
0x0014824d : jne 0x148438 ; mov eax, ecx ; ret
0x00148425 : jne 0x1484c9 ; lea eax, dword ptr [ecx + 0xc] ; ret
0x00148a22 : jne 0x148ad9 ; lea eax, dword ptr [edx + 7] ; ret
0x00148a4c : jne 0x148b09 ; lea eax, dword ptr [edx + 0xb] ; ret
0x00148a75 : jne 0x148b39 ; lea eax, dword ptr [edx + 0xf] ; ret
0x00149c33 : jne 0x149c56 ; lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x00175771 : jne 0x1757a7 ; out dx, al ; jmp dword ptr [edx]
0x0008782c : jne 0x87798 ; pop ebx ; ret
0x0008712c : jne 0x87798 ; pop edi ; pop ebx ; ret
0x00094f4c : jne 0x94f1f ; nop ; pop esi ; pop edi ; pop ebp ; ret
0x00095554 : jne 0x955b5 ; xor eax, eax ; pop edi ; ret
0x00098074 : jne 0x9806d ; pop esi ; pop edi ; pop ebp ; ret
0x00098173 : jne 0x9816d ; pop esi ; pop edi ; pop ebp ; ret
0x00098553 : jne 0x98545 ; pop esi ; pop edi ; pop ebp ; ret
0x00099967 : jne 0x9992e ; mov eax, edi ; pop esi ; pop edi ; ret
0x000a7176 : jne 0xa71f4 ; pop edi ; pop esi ; ret
0x000a7571 : jne 0xa754f ; jmp 0xa753b
0x000b9966 : jne 0xb992a ; mov eax, 0xfffa ; pop ebx ; ret
0x000b9a65 : jne 0xb9a3b ; ret
0x000c5d67 : jne 0xc5d5f ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x000c6b25 : jne 0xc6b21 ; mov edx, dword ptr [edx + 8] ; pop ebx ; pop esi ; mov eax, edx ; ret
0x000c952a : jne 0xc9518 ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x000c9552 : jne 0xc9564 ; call 0x129d7b
0x000f8f26 : jne 0xf8eee ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000f915d : jne 0xf916f ; call 0x129d7b
0x00158845 : jno 0x158849 ; out -0x6b, eax ; push es ; cld ; ret
0x00179265 : jno 0x179269 ; out dx, al ; jmp dword ptr [edx]
0x00195e31 : jno 0x195e3f ; ret
0x0019703a : jno 0x19704e ; add al, 0xc6 ; ret
0x000a756f : jno 0xa757e ; jne 0xa7551 ; jmp 0xa753d
0x000b9a36 : jno 0xb99cf ; mov eax, 0x20 ; ret
0x00167c2d : jnp 0x167c35 ; add ah, al ; xor ebp, ebx ; jmp esp
0x00175d21 : jnp 0x175ce0 ; out dx, al ; jmp dword ptr [edx]
0x00035926 : jnp 0x358ad ; ret 0x3b01
0x00176025 : jns 0x175fe7 ; out dx, al ; jmp dword ptr [edx]
0x00179d3a : jns 0x179d4e ; add al, 0xc6 ; ret
0x00187035 : jns 0x18703e ; add byte ptr [ecx + 1], bh ; call dword ptr [eax]
0x00187038 : jns 0x18703e ; call dword ptr [eax]
0x00187065 : jns 0x18706e ; add byte ptr [ecx + 1], bl ; call dword ptr [eax]
0x00187266 : jns 0x18725c ; jmp dword ptr [edx]
0x0019944c : jns 0x19945d ; push cs ; adc al, 0x43 ; ret
0x00166774 : jo 0x166757 ; cld ; jmp dword ptr [eax - 0x2f000326]
0x00166850 : jo 0x16683b ; cld ; call dword ptr [eax]
0x0016967c : jo 0x1696a0 ; add dword ptr [eax], eax ; dec ebp ; jb 0x16967a ; call dword ptr [eax]
0x00174b3f : jo 0x174b4c ; ljmp 0x100e:0x41140e0a ; ret
0x0018674d : jo 0x186756 ; add byte ptr [eax], cl ; call dword ptr [eax]
0x00186c26 : jo 0x186c1c ; jmp dword ptr [edx]
0x00186d36 : jo 0x186d2c ; jmp dword ptr [edx]
0x00187525 : jo 0x18753d ; or byte ptr [edx + 9], al ; add eax, dword ptr [edx] ; push esi ; ret
0x00195b46 : jo 0x195b5a ; add al, 0xc6 ; ret
0x00037155 : jo 0x37142 ; ret 0xfff2
0x00094c45 : jo 0x94c63 ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00099a4c : jo 0x99a59 ; add byte ptr [eax], al ; add esp, 0x28 ; pop ebx ; ret
0x000a575c : jo 0xa577a ; call 0x129d7b
0x00125267 : jp 0x125297 ; add byte ptr [esp + edx - 0x7d], dh ; ret 0x8328
0x0012784c : jp 0x1278ca ; or dword ptr [ebx + 0x5f5e24c4], eax ; ret
0x0016772c : jp 0x167792 ; std ; push dword ptr [esp + ebx*2 - 3] ; call esp
0x00179c72 : jp 0x179c83 ; push cs ; add al, 0xc6 ; ret
0x00094162 : jp 0x9417a ; mov eax, edi ; pop ebx ; pop edi ; ret
0x00105058 : js 0x105071 ; mov eax, edx ; and eax, 0xffffff ; ret
0x00167b7d : js 0x167b85 ; add byte ptr [ebx + ebx - 0x15], ah ; jmp dword ptr [eax]
0x00186a3d : js 0x186a46 ; add al, al ; call ecx
0x00188750 : js 0x188761 ; push cs ; adc al, 0x41 ; ret
0x00195428 : js 0x19548e ; add al, byte ptr [eax] ; mov word ptr [edi + esi*8], dr0 ; call dword ptr [eax]
0x0006812b : js 0x68133 ; ret
0x0007825a : js 0x78271 ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00094e34 : js 0x94e7e ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x000a7177 : js 0xa71db ; pop esi ; ret
0x00199149 : lahf ; add al, byte ptr [eax] ; les edi, ptr [esi] ; clc ; jmp dword ptr [edi]
0x00158925 : lahf ; ret 0x871e
0x000d6f3e : lahf ; ret 0xe083
0x00167623 : lcall ptr [eax + 0x52fffd4e] ; dec edi ; std ; jmp edx
0x000e7554 : lcall ptr [ebx + 0x5e] ; pop edi ; pop ebp ; ret 4
0x000e505e : lcall ptr [ebx + 0x5e] ; pop edi ; ret
0x00095a63 : lcall ptr [esi + 0x5f] ; pop ebp ; ret
0x000a726c : lcall ptr [esi + 0x5f] ; ret
0x00174c6b : lds eax, ptr [ebp + 0xb] ; add al, ch ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x0019847a : lds eax, ptr [ebp + 0xb] ; add bl, byte ptr [edx + ecx + 0xe] ; adc al, 0x43 ; ret
0x0018783d : lds eax, ptr [ebx + 0xb] ; dec ecx ; ret
0x00174739 : lds eax, ptr [ebx + 0xb] ; pop edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x0018874d : lds eax, ptr [ebx + ecx + 0x78] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00189b6c : lds eax, ptr [ebx + ecx + 2] ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00189c45 : lds eax, ptr [ecx + 0xb] ; add bl, byte ptr [esi + 0xa] ; ret
0x00195d22 : lds eax, ptr [ecx + 0xb] ; add cl, byte ptr [esi + 0x43140e0a] ; ret
0x0019585c : lds eax, ptr [ecx + 0xb] ; pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00197d46 : lds eax, ptr [edi + 0xb] ; add ch, byte ptr [ebp + 0x41140e0a] ; ret
0x00178f7a : lds eax, ptr [edi + 0xb] ; add ch, byte ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00189633 : lds eax, ptr [edi + 0xb] ; add dl, byte ptr [ecx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x00184468 : lds eax, ptr [edi + 0xb] ; inc esi ; push cs ; adc al, 0x41 ; ret
0x0019805d : lds eax, ptr [edx + 0xb] ; add dl, byte ptr [edi + 0x43140e0a] ; ret
0x00187b64 : lds eax, ptr [edx + 0xb] ; inc ebx ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00174679 : lds eax, ptr [edx + 0xb] ; pushal ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00196225 : lds ecx, ptr [eax + 0xb] ; add bl, byte ptr [ecx + 0xa] ; ret
0x00199449 : lds ecx, ptr [eax + 0xb] ; jns 0x199460 ; push cs ; adc al, 0x43 ; ret
0x0019903e : lds ecx, ptr [eax + 0xb] ; or cl, byte ptr fs:[esi] ; adc al, 0x41 ; ret
0x00197e36 : lds ecx, ptr [eax + 0xb] ; push 0xa ; push cs ; adc al, 0x41 ; ret
0x000a572f : lds ecx, ptr [ecx + 0x5d5f5ee8] ; ret
0x00174c6f : lds ecx, ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x00149065 : lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x00149075 : lea eax, dword ptr [eax + 0xc] ; pop edi ; ret
0x00148f51 : lea eax, dword ptr [eax + 3] ; pop edi ; ret
0x00149025 : lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x00149035 : lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x00149045 : lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x00149055 : lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x000a7269 : lea eax, dword ptr [eax + eax - 1] ; pop esi ; pop edi ; ret
0x000b9b70 : lea eax, dword ptr [eax + eax - 1] ; ret
0x00095833 : lea eax, dword ptr [eax + ecx + 0x10] ; ret
0x00095843 : lea eax, dword ptr [eax + ecx + 0x20] ; ret
0x00095853 : lea eax, dword ptr [eax + ecx + 0x30] ; ret
0x00095563 : lea eax, dword ptr [eax + edi - 0x10] ; pop edi ; ret
0x00095c73 : lea eax, dword ptr [eax + edx - 0x10] ; ret
0x00177f25 : lea eax, dword ptr [eax] ; add byte ptr [eax + 0x28], cl ; out dx, eax ; call edx
0x00019b3b : lea eax, dword ptr [ebx + 0x368c] ; pop ebx ; ret
0x0009812c : lea eax, dword ptr [ebx - 0x595d4] ; pop ebx ; ret
0x00097e6c : lea eax, dword ptr [ebx - 0xfbd84] ; pop ebx ; ret
0x00097d4c : lea eax, dword ptr [ebx - 0xfcaa4] ; pop ebx ; ret
0x0014842b : lea eax, dword ptr [ecx + 0xc] ; ret
0x00148430 : lea eax, dword ptr [ecx + 1] ; ret
0x00148440 : lea eax, dword ptr [ecx + 2] ; ret
0x00148450 : lea eax, dword ptr [ecx + 3] ; ret
0x00148460 : lea eax, dword ptr [ecx + 5] ; ret
0x00148470 : lea eax, dword ptr [ecx + 6] ; ret
0x0009587a : lea eax, dword ptr [ecx + eax + 0x10] ; ret
0x0001965b : lea eax, dword ptr [ecx - 0x43dee] ; ret
0x0001963b : lea eax, dword ptr [ecx - 0x46116] ; ret
0x00147356 : lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x00147440 : lea eax, dword ptr [edi + 4] ; pop edi ; ret
0x00147450 : lea eax, dword ptr [edi + 5] ; pop edi ; ret
0x00147460 : lea eax, dword ptr [edi + 6] ; pop edi ; ret
0x0014726d : lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x00147470 : lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x00134b2d : lea eax, dword ptr [edi + eax + 0xa] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134c4d : lea eax, dword ptr [edi + eax + 0xc] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134d6d : lea eax, dword ptr [edi + eax + 0xe] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013473d : lea eax, dword ptr [edi + eax + 3] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013485d : lea eax, dword ptr [edi + eax + 5] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0013497d : lea eax, dword ptr [edi + eax + 7] ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00147833 : lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00147858 : lea eax, dword ptr [edi - 0xc] ; pop edi ; ret
0x00147960 : lea eax, dword ptr [edi - 1] ; pop edi ; ret
0x00095a61 : lea eax, dword ptr [edi - 1] ; pop esi ; pop edi ; pop ebp ; ret
0x00147950 : lea eax, dword ptr [edi - 2] ; pop edi ; ret
0x00095a6b : lea eax, dword ptr [edi - 2] ; pop esi ; pop edi ; pop ebp ; ret
0x00147940 : lea eax, dword ptr [edi - 3] ; pop edi ; ret
0x00095a75 : lea eax, dword ptr [edi - 3] ; pop esi ; pop edi ; pop ebp ; ret
0x00147930 : lea eax, dword ptr [edi - 5] ; pop edi ; ret
0x00089c2e : lea eax, dword ptr [edx + 0xb] ; ret
0x00089c52 : lea eax, dword ptr [edx + 0xc] ; ret
0x00089c72 : lea eax, dword ptr [edx + 0xd] ; ret
0x00089b32 : lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x00089b56 : lea eax, dword ptr [edx + 1] ; ret
0x00089a2c : lea eax, dword ptr [edx + 2] ; pop edi ; ret
0x00089b6c : lea eax, dword ptr [edx + 2] ; ret
0x00089944 : lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x00089b74 : lea eax, dword ptr [edx + 3] ; ret
0x00089a4a : lea eax, dword ptr [edx + 4] ; pop edi ; ret
0x00089a5c : lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x00089a7a : lea eax, dword ptr [edx + 6] ; pop edi ; ret
0x00089978 : lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x00095c6a : lea eax, dword ptr [edx + eax + 0x30] ; ret
0x00089b44 : lea eax, dword ptr [edx] ; ret
0x00095879 : lea eax, dword ptr es:[ecx + eax + 0x10] ; ret
0x0014843a : lea edi, dword ptr [edi] ; lea eax, dword ptr [ecx + 2] ; ret
0x0014844a : lea edi, dword ptr [edi] ; lea eax, dword ptr [ecx + 3] ; ret
0x0014845a : lea edi, dword ptr [edi] ; lea eax, dword ptr [ecx + 5] ; ret
0x0014846a : lea edi, dword ptr [edi] ; lea eax, dword ptr [ecx + 6] ; ret
0x0014847a : lea edi, dword ptr [edi] ; lea eax, dword ptr [ecx + 7] ; ret
0x00148b2a : lea edi, dword ptr [edi] ; lea eax, dword ptr [edx + 0xe] ; ret
0x000a546d : lea edx, dword ptr [eax - 1] ; pop ebx ; mov eax, edx ; pop esi ; pop edi ; pop ebp ; ret
0x0009842c : lea esi, dword ptr [esi] ; add eax, 8 ; ret
0x000b483a : lea esi, dword ptr [esi] ; mov dword ptr [esp], edi ; call esi
0x00147e2c : lea esi, dword ptr [esi] ; mov eax, edi ; pop edi ; ret
0x0011433d : lea esi, dword ptr [esi] ; pop esi ; xor eax, eax ; pop edi ; pop ebp ; ret
0x000e9634 : lea esi, dword ptr [esi] ; xor edx, edx ; jmp 0xe9605
0x00017e71 : lea esp, dword ptr [ebp - 0xc] ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10
0x00028f42 : lea esp, dword ptr [ebp - 0xc] ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00017346 : lea esp, dword ptr [ebp - 0xc] ; mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00017159 : lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00025876 : lea esp, dword ptr [ebp - 0xc] ; xor eax, eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00067c5a : lea esp, dword ptr [ebp - 8] ; sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x00168975 : leave ; add byte ptr [eax], al ; popfd ; in eax, dx ; jmp dword ptr [eax]
0x000c5c30 : leave ; add eax, ecx ; cmp esi, edx ; ja 0xc5c30 ; pop esi ; ret
0x00098172 : leave ; jne 0x9816e ; pop esi ; pop edi ; pop ebp ; ret
0x00098552 : leave ; jne 0x98546 ; pop esi ; pop edi ; pop ebp ; ret
0x00097b79 : les eax, ptr [eax + 0x5e] ; pop edi ; pop ebp ; ret
0x00055c44 : les eax, ptr [eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; ret
0x00095a73 : les eax, ptr [ecx*4 + 0x5f5efd47] ; pop ebp ; ret
0x00095a69 : les eax, ptr [ecx*4 + 0x5f5efe47] ; pop ebp ; ret
0x00095a5f : les eax, ptr [ecx*4 + 0x5f5eff47] ; pop ebp ; ret
0x00145451 : les eax, ptr [esi + ebx*2] ; pop edi ; pop ebp ; pop ebx ; xor eax, eax ; ret
0x00055451 : les ebp, ptr [eax] ; pop ebx ; mov eax, edx ; ret
0x00065b73 : les ebp, ptr [ecx + ecx*4] ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x000a7b41 : les ebp, ptr [edi + ecx] ; scasd eax, dword ptr es:[edi] ; ret 0x90c3
0x0005534a : les ebx, ptr [eax + eax + 0x5e5b0000] ; pop edi ; pop ebp ; ret
0x000e9a7d : les ebx, ptr [eax] ; mov al, 1 ; pop ebx ; ret
0x000e8c50 : les ebx, ptr [eax] ; mov eax, 1 ; pop ebx ; ret
0x0007926b : les ebx, ptr [eax] ; pop ebx ; jmp 0x75565
0x00115f39 : les ebx, ptr [ebx + eax*8] ; lea esi, dword ptr [esi] ; ret
0x000c6e5e : les ebx, ptr [ebx + ebx*2 - 0x7d] ; enter 0x5e01, 0x5f ; pop ebp ; ret
0x00114e7d : les ebx, ptr [edi + ecx] ; mov dh, 0xc0 ; ret
0x000e8f75 : les ebx, ptr [esp + eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00025f7d : les ecx, ptr [eax] ; ret
0x00095e79 : les ecx, ptr [eax] ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x00178174 : les ecx, ptr [edx + 0x26ce0000] ; sti ; call dword ptr [eax]
0x000a7e63 : les ecx, ptr [esi + ebx*2] ; pop edi ; pop ebp ; ret
0x0006627d : les edi, ptr [ebx + ebx*2] ; pop esi ; mov eax, edi ; pop edi ; pop ebp ; ret
0x00064643 : les edi, ptr [ecx + ecx*4] ; clc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00055e47 : les edi, ptr [edx + eax] ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x0019914c : les edi, ptr [esi] ; clc ; jmp dword ptr [edi]
0x00114a76 : les edx, ptr [eax] ; pop esi ; movzx eax, al ; pop edi ; pop ebp ; ret
0x000a572c : les edx, ptr [eax] ; sub ebp, eax ; mov eax, ebp ; pop esi ; pop edi ; pop ebp ; ret
0x000a5739 : les edx, ptr [eax] ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x00124d32 : les edx, ptr [ecx + ecx*4] ; rcr byte ptr [ebx + 0x5e], 1 ; ret
0x000b555f : les esi, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x00167c30 : les esi, ptr [ebx] ; jmp 0x167c36
0x00118a5f : les esi, ptr [esp + eax] ; add byte ptr [eax], al ; mov eax, edx ; pop esi ; pop edi ; ret
0x000d9435 : les esp, ptr [eax - 0xf770000] ; pop ebx ; pop esi ; ret
0x000a565a : les esp, ptr [eax] ; sub edx, eax ; pop esi ; mov eax, edx ; pop edi ; pop ebp ; ret
0x00147742 : ljmp -0x16a2:0x5bfffffe ; ret
0x00097c75 : ljmp -0x1d3f:0x1c28302 ; add al, 1 ; ret 0xff85
0x0010513d : ljmp -0x76e8:0x24548918 ; ret 0xeac1
0x00127c71 : ljmp -0x7ac4:0x24448b01 ; ret 0x1574
0x00127b52 : ljmp -0x7ac8:0x24448b01 ; ret 0x840f
0x00174b41 : ljmp 0x100e:0x41140e0a ; ret
0x00148021 : ljmp 0x847:0x8d5b7209 ; pop edi ; ret
0x00148031 : ljmp 0x947:0x8d4b720a ; pop edi ; ret
0x00148041 : ljmp 0xa47:0x8d3b720b ; pop edi ; ret
0x00148051 : ljmp 0xc47:0x8d2b720d ; pop edi ; ret
0x00148061 : ljmp 0xd47:0x8d1b720e ; pop edi ; ret
0x00148071 : ljmp 0xe47:0x8d0b720f ; pop edi ; ret
0x00168463 : ljmp ptr [eax + 0x40000ac] ; xchg eax, esi ; in al, dx ; call eax
0x0008706c : ljmp ptr [ecx] ; ret 0xc301
0x00166f3b : ljmp ptr [edi + ebx] ; std ; call dword ptr [esi]
0x00167b43 : ljmp ptr [esp + esi] ; add dword ptr [eax], eax ; aam 0x15 ; jmp 0x167b53
0x00168465 : lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; add al, 0x96 ; in al, dx ; call eax
0x00175d5c : lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; ret
0x000a9826 : lodsb al, byte ptr [esi] ; sbb eax, dword ptr [eax] ; add byte ptr [ecx], cl ; ret 0x840f
0x0019895c : lodsb al, byte ptr [esi] ; xchg eax, edx ; add al, byte ptr [eax] ; cdq ; xor bh, al ; call dword ptr [eax]
0x00065f6b : lodsd eax, dword ptr [esi] ; mov dword ptr [esp], ecx ; call 0x72186
0x00197d4a : lodsd eax, dword ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00127b50 : loop 0x127ade ; ljmp -0x7ac8:0x24448b01 ; ret 0x840f
0x00127c6f : loop 0x127bfd ; ljmp -0x7ac4:0x24448b01 ; ret 0x1574
0x00166951 : loop 0x166955 ; inc dword ptr [eax - 0x1d] ; cld ; call eax
0x0016762c : loop 0x167680 ; std ; call dword ptr [edx]
0x00019259 : loop 0x1926a ; add byte ptr [ecx - 0x47fbdbbc], cl ; ret 0
0x00197c79 : loop 0x197c74 ; jmp dword ptr [esi]
0x00166945 : loope 0x166949 ; call dword ptr [eax + 0x20fffce1]
0x00166949 : loope 0x166949 ; jmp dword ptr [eax]
0x00168878 : loope 0x1688f1 ; in eax, dx ; call eax
0x00139152 : loopne 0x13915c ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x00149c7e : loopne 0x149c89 ; je 0x149c68 ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00166768 : loopne 0x166746 ; cld ; call dword ptr [eax]
0x00168524 : loopne 0x1684dc ; add byte ptr [eax], al ; and al, 0xaf ; in al, dx ; call dword ptr [eax]
0x00168854 : loopne 0x168820 ; add byte ptr [eax], al ; mov eax, dword ptr [0x10ffed74] ; ret 0
0x00168e2c : loopne 0x168e1b ; add byte ptr [eax], al ; push esp ; fucomi st(7) ; call eax
0x00174167 : loopne 0x174174 ; add ebx, dword ptr [ecx + eax + 0xa] ; push cs ; adc al, 0x46 ; ret
0x00017570 : loopne 0x1759d ; ret 0xe283
0x00017a7a : loopne 0x17a01 ; ret 0x831e
0x00186929 : loopne 0x186996 ; jmp dword ptr [edx]
0x00027060 : loopne 0x27065 ; ret
0x00027035 : loopne 0x270b8 ; ret
0x00027160 : loopne 0x27168 ; ret
0x0008763a : mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; mov dword ptr [ecx], edx ; pop ebx ; ret
0x000f723a : mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop ebx ; ret
0x0009597a : mov ah, 0x26 ; add byte ptr [eax], al ; add byte ptr [eax], al ; xor eax, eax ; pop edi ; ret
0x0016997c : mov ah, 0x2e ; add dword ptr [eax], eax ; movsb byte ptr es:[edi], byte ptr [esi] ; mov bh, 0xf0 ; call esp
0x00186964 : mov ah, 0x72 ; add dword ptr [eax], eax ; cdq ; hlt ; call dword ptr [eax]
0x00186e64 : mov ah, 0x77 ; add dword ptr [eax], eax ; pushal ; push edx ; call dword ptr [eax]
0x00187064 : mov ah, 0x79 ; add dword ptr [eax], eax ; pop ecx ; add ebx, esi ; call dword ptr [eax]
0x00177464 : mov ah, 0x7d ; add byte ptr [eax], al ; ret 0xef13
0x000a5448 : mov ah, 0x83 ; ret 0x3901
0x00166160 : mov ah, 0xd3 ; cld ; jmp esp
0x00166678 : mov ah, 0xda ; cld ; jmp esp
0x00049359 : mov ah, 0xe9 ; ret
0x00168545 : mov al, 0 ; add byte ptr [edi + ebp*4 - 0x14], ah ; call eax
0x00024447 : mov al, 0x83 ; ret 0x8901
0x00167d44 : mov al, 0x85 ; add byte ptr [eax], al ; xchg eax, esp ; xchg eax, esi ; jmp 0x167d52
0x00166764 : mov al, 0xd9 ; cld ; jmp eax
0x00166950 : mov al, 0xe2 ; cld ; inc dword ptr [eax - 0x1d] ; cld ; call eax
0x00168e24 : mov al, 0xe6 ; add byte ptr [eax], al ; dec eax ; fucomi st(7) ; jmp eax
0x00167d61 : mov al, 0xeb ; call eax
0x00166e2c : mov al, 1 ; std ; inc dword ptr [eax + 2] ; std ; call eax
0x00175a21 : mov al, 2 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00195250 : mov al, byte ptr [0x3f00025b] ; xor al, 0xf7 ; call dword ptr [eax]
0x00166b74 : mov al, byte ptr [0x50fffcfa] ; sti ; cld ; call dword ptr [eax]
0x00168544 : mov al, byte ptr [0x640000b0] ; scasd eax, dword ptr es:[edi] ; in al, dx ; call eax
0x00168834 : mov al, byte ptr [0x740000c1] ; outsb dx, byte ptr [esi] ; in eax, dx ; jmp dword ptr [eax - 0x3d]
0x00019a2d : mov al, byte ptr [0x89000036] ; ret 0xc589
0x00026a54 : mov al, byte ptr [0x89ffffff] ; adc byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x00168d24 : mov al, byte ptr [0xb50000e1] ; into ; out dx, eax ; call dword ptr [eax]
0x00168874 : mov al, byte ptr [0xe10000c2] ; je 0x16886f ; call eax
0x00178145 : mov al, byte ptr [eax] ; add dh, ch ; sti ; call dword ptr [eax]
0x00178175 : mov al, byte ptr [eax] ; add dh, cl ; sti ; call dword ptr [eax]
0x00089b66 : mov al, byte ptr [ecx + 2] ; mov byte ptr [edx + 2], al ; lea eax, dword ptr [edx + 2] ; ret
0x00085666 : mov al, byte ptr [ecx + 2] ; mov byte ptr [edx + 2], al ; mov eax, edi ; pop edi ; ret
0x00085674 : mov al, byte ptr [ecx + 4] ; mov byte ptr [edx + 4], al ; mov eax, edi ; pop edi ; ret
0x00147352 : mov al, byte ptr [ecx] ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 0xb] ; pop edi ; ret
0x00187c21 : mov al, byte ptr [ecx] ; add byte ptr [esi + esi], cl ; call dword ptr [ecx]
0x00089b40 : mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; ret
0x00085640 : mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edi ; pop edi ; ret
0x00085760 : mov al, byte ptr [ecx] ; mov byte ptr [edx], al ; mov eax, edx ; ret
0x00089b50 : mov ax, word ptr [ecx] ; mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; ret
0x00085650 : mov ax, word ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edi ; pop edi ; ret
0x00085770 : mov ax, word ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edx ; ret
0x00117148 : mov bh, 0xeb ; ret
0x00026f39 : mov bh, 4 ; push eax ; and eax, 0x1000 ; ret
0x00026e29 : mov bh, 4 ; push eax ; and eax, 0x200 ; ret
0x00026e59 : mov bh, 4 ; push eax ; and eax, 0x8000 ; ret
0x00149b69 : mov bl, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00178b72 : mov bl, 0x41 ; or eax, dword ptr [edx] ; inc edi ; ret
0x00199757 : mov bl, 0x41 ; or ebx, dword ptr [eax + 0xa] ; ret
0x0017422a : mov bl, 0x42 ; or esi, dword ptr [ebx + 0xa] ; ret
0x00196a33 : mov bl, 0x44 ; or edx, dword ptr [ecx + 0xa] ; ret
0x00169949 : mov bl, 0xf0 ; jmp eax
0x00177b65 : mov bl, cl ; out dx, al ; jmp dword ptr [edx]
0x00199469 : mov byte ptr [0x4d440002], al ; clc ; jmp dword ptr [ebx]
0x000a563a : mov byte ptr [0x890004db], al ; ret 0x68b
0x00166034 : mov byte ptr [0xc2fffcd1], al ; sar esp, 1 ; jmp edx
0x0014685a : mov byte ptr [0xf6000000], al ; ret 0x7501
0x00094c44 : mov byte ptr [eax + 0x14], dh ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00094e33 : mov byte ptr [eax + 0x40], bh ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x0014913f : mov byte ptr [eax], 0 ; add byte ptr [ebx - 0x7bf0fc01], al ; ret 0
0x00017068 : mov byte ptr [eax], 0 ; pop eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00147854 : mov byte ptr [eax], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0xc] ; pop edi ; ret
0x00185438 : mov byte ptr [ebp + 1], bl ; add byte ptr [eax + 0x42], cl ; call dword ptr [eax]
0x0016843c : mov byte ptr [ebx - 0x6dfc0000], ch ; in al, dx ; jmp eax
0x00175478 : mov byte ptr [ebx], al ; out dx, al ; call dword ptr [ecx]
0x00087633 : mov byte ptr [ecx + 2], dl ; pop ebx ; ret
0x00087652 : mov byte ptr [ecx + 4], dl ; pop ebx ; ret
0x000a8b33 : mov byte ptr [ecx], 0x83 ; ret 0xf01
0x0004972a : mov byte ptr [edi], cl ; inc esp ; ret 0x4589
0x00094161 : mov byte ptr [edx + 0x10], bh ; mov eax, edi ; pop ebx ; pop edi ; ret
0x00089a29 : mov byte ptr [edx + 2], al ; lea eax, dword ptr [edx + 2] ; pop edi ; ret
0x00089b69 : mov byte ptr [edx + 2], al ; lea eax, dword ptr [edx + 2] ; ret
0x00085669 : mov byte ptr [edx + 2], al ; mov eax, edi ; pop edi ; ret
0x00089a47 : mov byte ptr [edx + 4], al ; lea eax, dword ptr [edx + 4] ; pop edi ; ret
0x00085677 : mov byte ptr [edx + 4], al ; mov eax, edi ; pop edi ; ret
0x0013636c : mov byte ptr [edx - 1], cl ; mov eax, edx ; pop ebx ; ret
0x00089b42 : mov byte ptr [edx], al ; lea eax, dword ptr [edx] ; ret
0x00085642 : mov byte ptr [edx], al ; mov eax, edi ; pop edi ; ret
0x00085762 : mov byte ptr [edx], al ; mov eax, edx ; ret
0x0013555b : mov byte ptr [edx], cl ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00148a77 : mov ch, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 0xf] ; ret
0x00054747 : mov ch, 0x2b ; add dword ptr [eax], eax ; add esp, 0x18 ; pop ebx ; ret
0x00168d28 : mov ch, 0xce ; out dx, eax ; call dword ptr [eax]
0x00169951 : mov ch, 0xf0 ; jmp dword ptr [eax]
0x00078070 : mov cl, 0x8b ; add dword ptr fs:[eax], eax ; add byte ptr [ecx], bh ; ret 0x850f
0x00138371 : mov cl, 0xeb ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00138171 : mov cl, 0xee ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00197139 : mov cl, 0xf7 ; jmp dword ptr [esi]
0x00007964 : mov cl, byte ptr [ebx] ; add byte ptr [eax - 8], ah ; adc dword ptr [eax], eax ; ret
0x00079a73 : mov dh, 0 ; add byte ptr [eax], al ; add al, ch ; ret
0x0013837b : mov dh, 0 ; add byte ptr [eax], al ; add byte ptr [eax], bh ; ret 0x840f
0x00148e3b : mov dh, 0 ; add byte ptr [eax], al ; add dh, dh ; ret 0xf10
0x00148376 : mov dh, 0 ; add byte ptr [eax], al ; mov eax, ecx ; ret
0x000f7d28 : mov dh, 0x17 ; movsx esi, dl ; jmp 0xf7cf8
0x000d5649 : mov dh, 0x2c ; xor ebx, ebp ; ret
0x000e9937 : mov dh, 0x30 ; call 0x129d7b
0x00136369 : mov dh, 0x48 ; dec dword ptr [eax - 0x2f7600b6] ; pop ebx ; ret
0x00117646 : mov dh, 0x56 ; add ch, al ; and eax, 0x81000127 ; ret
0x000a7267 : mov dh, 0xc0 ; lea eax, dword ptr [eax + eax - 1] ; pop esi ; pop edi ; ret
0x000b9b6e : mov dh, 0xc0 ; lea eax, dword ptr [eax + eax - 1] ; ret
0x00114a7a : mov dh, 0xc0 ; pop edi ; pop ebp ; ret
0x00166078 : mov dh, 0xd1 ; cld ; call esi
0x0017477e : mov dh, 0xec ; jmp dword ptr [edx]
0x00135559 : mov dh, 8 ; mov byte ptr [edx], cl ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00175439 : mov dl, 0xd5 ; in eax, dx ; jmp dword ptr [edx]
0x00166538 : mov dl, 0xd8 ; cld ; call edx
0x00138f70 : mov dl, 0xdf ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00166a30 : mov dl, 0xf8 ; cld ; inc dword ptr [eax] ; stc ; cld ; call edx
0x00179771 : mov dl, 1 ; out dx, eax ; jmp dword ptr [edx]
0x00199521 : mov dword ptr [0x4ffc0002], eax ; clc ; jmp dword ptr [edx]
0x000d936a : mov dword ptr [eax + 0x108], edx ; xor eax, eax ; ret
0x000d9354 : mov dword ptr [eax + 0x10c], edx ; xor eax, eax ; ret
0x00094d28 : mov dword ptr [eax + 0x17], ecx ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x000e5022 : mov dword ptr [eax + 0x50], ecx ; mov dword ptr [eax + 0x54], edx ; xor eax, eax ; pop ebx ; ret
0x000e5025 : mov dword ptr [eax + 0x54], edx ; xor eax, eax ; pop ebx ; ret
0x00094a7a : mov dword ptr [eax + 3], edx ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00094a5c : mov dword ptr [eax + 4], edx ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x000d8a58 : mov dword ptr [eax + 4], edx ; xor eax, eax ; ret
0x000e5e7b : mov dword ptr [eax + 8], ecx ; xor eax, eax ; pop ebx ; ret
0x000d8463 : mov dword ptr [eax + 8], edx ; add esp, 8 ; ret
0x000a7a29 : mov dword ptr [eax], 0x4b ; jmp 0xa79fa
0x000a7163 : mov dword ptr [eax], eax ; add byte ptr [eax], al ; pop edi ; pop esi ; ret
0x00094a3b : mov dword ptr [eax], ecx ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00026a58 : mov dword ptr [eax], edx ; pop ebx ; pop esi ; pop edi ; ret
0x00078225 : mov dword ptr [eax], edx ; ret
0x00017549 : mov dword ptr [ebp - 0x1c], edx ; call 0x129d7c
0x0004504a : mov dword ptr [ebp - 0x4b8], edi ; jmp edx
0x00195a49 : mov dword ptr [ebp - 0xa], ecx ; jmp dword ptr [edx]
0x00019348 : mov dword ptr [ecx + 0x504], edx ; pop ebx ; ret
0x0017443d : mov dword ptr [ecx + 0xb], 0x100e0a55 ; inc ebx ; ret
0x00087672 : mov dword ptr [ecx + 3], edx ; pop ebx ; ret
0x00087663 : mov dword ptr [ecx + 4], edx ; pop ebx ; ret
0x00187b2d : mov dword ptr [ecx], eax ; add al, al ; xor al, 0xf3 ; call dword ptr [esi]
0x0003602c : mov dword ptr [ecx], edx ; add esp, 0x2c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00087631 : mov dword ptr [ecx], edx ; mov byte ptr [ecx + 2], dl ; pop ebx ; ret
0x00087650 : mov dword ptr [ecx], edx ; mov byte ptr [ecx + 4], dl ; pop ebx ; ret
0x00087670 : mov dword ptr [ecx], edx ; mov dword ptr [ecx + 3], edx ; pop ebx ; ret
0x00087660 : mov dword ptr [ecx], edx ; mov word ptr [ecx + 4], dx ; pop ebx ; ret
0x00087621 : mov dword ptr [ecx], edx ; pop ebx ; ret
0x000b5f73 : mov dword ptr [edi], eax ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000e4d79 : mov dword ptr [edx + 0x3e], eax ; xor eax, eax ; ret
0x00089a77 : mov dword ptr [edx + 3], eax ; lea eax, dword ptr [edx + 6] ; pop edi ; ret
0x00089a59 : mov dword ptr [edx + 4], eax ; lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x0008582b : mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x00089c2b : mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x00088364 : mov dword ptr [edx + 8], eax ; mov eax, edx ; pop ebx ; ret
0x00134f7d : mov dword ptr [edx - 2], ecx ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00136329 : mov dword ptr [edx - 4], eax ; mov eax, edx ; pop ebx ; ret
0x00134e45 : mov dword ptr [edx - 4], ecx ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00136326 : mov dword ptr [edx - 5], ecx ; mov dword ptr [edx - 4], eax ; mov eax, edx ; pop ebx ; ret
0x00125d3e : mov dword ptr [edx], 0 ; jmp 0x125d10
0x00089b54 : mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 1] ; ret
0x00089942 : mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x00089b72 : mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x00088432 : mov dword ptr [edx], eax ; mov eax, edx ; pop ebx ; ret
0x00085774 : mov dword ptr [edx], eax ; mov eax, edx ; ret
0x000a845c : mov dword ptr [edx], eax ; ret
0x000b5c3e : mov dword ptr [edx], ecx ; add esp, 0x28 ; pop ebx ; ret
0x00129c58 : mov dword ptr [edx], ecx ; mov ebp, dword ptr [esp + 0x48] ; add esp, 0x4c ; ret
0x000d7738 : mov dword ptr [edx], ecx ; pop ebx ; ret
0x00129b3c : mov dword ptr [edx], edi ; pop esi ; pop edi ; ret
0x000c427e : mov dword ptr [esi], ecx ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000c4250 : mov dword ptr [esi], edx ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00074d42 : mov dword ptr [esp + 0x18], edx ; neg eax ; mov dword ptr [esp], eax ; call dword ptr [ecx]
0x00076e46 : mov dword ptr [esp + 0x28], edx ; mov dword ptr [esp + 0x2c], ecx ; call eax
0x00076e4a : mov dword ptr [esp + 0x2c], ecx ; call eax
0x000d9128 : mov dword ptr [esp + 4], eax ; call 0xc5436
0x00098f68 : mov dword ptr [esp + 4], eax ; mov dword ptr [esp], edi ; call esi
0x00079531 : mov dword ptr [esp + 4], ebp ; mov dword ptr [esp + 8], edx ; call eax
0x00048e73 : mov dword ptr [esp + 4], ecx ; mov dword ptr [esp], esi ; call eax
0x00114172 : mov dword ptr [esp + 4], edi ; mov dword ptr [esp], esi ; call dword ptr [eax]
0x0011415e : mov dword ptr [esp + 4], edx ; mov dword ptr [esp], esi ; call dword ptr [eax]
0x00067c4e : mov dword ptr [esp + 8], ecx ; mov dword ptr [esp], edx ; call eax
0x00068679 : mov dword ptr [esp + 8], edx ; call 0x669a8
0x00067646 : mov dword ptr [esp + 8], edx ; call 0x66c28
0x00079535 : mov dword ptr [esp + 8], edx ; call eax
0x00076f56 : mov dword ptr [esp], 0 ; call dword ptr [eax]
0x00074d69 : mov dword ptr [esp], 0 ; call dword ptr [ecx]
0x00074d48 : mov dword ptr [esp], eax ; call dword ptr [ecx]
0x00098678 : mov dword ptr [esp], eax ; call edi
0x0009872b : mov dword ptr [esp], eax ; call esi
0x00025f27 : mov dword ptr [esp], ebx ; call 0x129d7c
0x00065f6c : mov dword ptr [esp], ecx ; call 0x72185
0x00098f6c : mov dword ptr [esp], edi ; call esi
0x00126c61 : mov dword ptr [esp], edx ; mov eax, dword ptr [eax + 0x1a0] ; call eax
0x00069d59 : mov dword ptr [esp], esi ; call 0x669a7
0x00064560 : mov dword ptr [esp], esi ; call 0x707e5
0x00114162 : mov dword ptr [esp], esi ; call dword ptr [eax]
0x00074f70 : mov dword ptr [esp], esi ; call dword ptr [edx]
0x000a7a28 : mov dword ptr gs:[eax], 0x4b ; jmp 0xa79fb
0x000b5c3d : mov dword ptr gs:[edx], ecx ; add esp, 0x28 ; pop ebx ; ret
0x000b9a38 : mov eax, 0x20 ; ret
0x0013826a : mov eax, 0x30002ec ; sbb al, 0x8b ; jmp ebx
0x000c5c2f : mov eax, 0x39c801c9 ; salc ; ja 0xc5c31 ; pop esi ; ret
0x000b9978 : mov eax, 0x7d00 ; pop ebx ; ret
0x000b9922 : mov eax, 0x7f ; pop ebx ; ret
0x000d8844 : mov eax, 0x89fffffc ; ret 0xcb8
0x000d705e : mov eax, 0xc ; jmp 0xd702e
0x00175b48 : mov eax, 0xd1cffee ; iretd ; mov bh, 0xee ; jmp dword ptr [edx]
0x00169c64 : mov eax, 0xf400014d ; sub al, 0xf1 ; jmp esp
0x000b9970 : mov eax, 0xfa ; pop ebx ; ret
0x000b9a60 : mov eax, 0xff ; jne 0xb9a40 ; ret
0x000b9968 : mov eax, 0xfffa ; pop ebx ; ret
0x000e7550 : mov eax, 0xffffffff ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x000e505a : mov eax, 0xffffffff ; pop ebx ; pop esi ; pop edi ; ret
0x000e9a41 : mov eax, 1 ; add esp, 0x18 ; pop ebx ; ret
0x00145768 : mov eax, 1 ; ja 0x14577a ; neg eax ; ret
0x00149821 : mov eax, 1 ; jg 0x149839 ; neg eax ; ret
0x000e8c52 : mov eax, 1 ; pop ebx ; ret
0x00129a68 : mov eax, 2 ; add esp, 0xc ; ret
0x00129a4c : mov eax, 4 ; add esp, 0xc ; ret
0x000a7430 : mov eax, 4 ; ret
0x000a7440 : mov eax, 5 ; ret
0x000a7450 : mov eax, 6 ; ret
0x000a7460 : mov eax, 7 ; ret
0x00129a58 : mov eax, 8 ; add esp, 0xc ; ret
0x00149156 : mov eax, 8 ; pop edi ; ret
0x00168858 : mov eax, dword ptr [0x10ffed74] ; ret 0
0x00139141 : mov eax, dword ptr [0x30002df] ; sbb al, 0x8b ; jmp ebx
0x00199321 : mov eax, dword ptr [0x446c0002] ; clc ; jmp dword ptr [eax]
0x00199339 : mov eax, dword ptr [0x44740002] ; clc ; jmp dword ptr [edi]
0x00009554 : mov eax, dword ptr [0xd0000010] ; ret 7
0x00126c64 : mov eax, dword ptr [eax + 0x1a0] ; call eax
0x000f7d5a : mov eax, dword ptr [eax + 0x1c] ; call 0x129d7c
0x00067924 : mov eax, dword ptr [eax + 0x24] ; mov eax, dword ptr [eax + 0x28] ; ret
0x00067927 : mov eax, dword ptr [eax + 0x28] ; ret
0x00026f78 : mov eax, dword ptr [eax + 0x30] ; mov eax, dword ptr [eax + edx*4] ; ret
0x00068126 : mov eax, dword ptr [eax + 0x38] ; test eax, eax ; js 0x68138 ; ret
0x00129924 : mov eax, dword ptr [eax + 0x50] ; ret
0x00129934 : mov eax, dword ptr [eax + 0x5c] ; ret
0x000f8261 : mov eax, dword ptr [eax + 0xc] ; call 0x129d7c
0x00026f7b : mov eax, dword ptr [eax + edx*4] ; ret
0x00127954 : mov eax, dword ptr [eax] ; add esp, 0xc ; ret
0x00026f76 : mov eax, dword ptr [eax] ; mov eax, dword ptr [eax + 0x30] ; mov eax, dword ptr [eax + edx*4] ; ret
0x00078324 : mov eax, dword ptr [eax] ; test eax, eax ; je 0x78332 ; call eax
0x0001777c : mov eax, dword ptr [ebp - 0x7c] ; mov dword ptr [esp], eax ; mov eax, dword ptr [ebp + 0xc] ; call dword ptr [eax]
0x00098675 : mov eax, dword ptr [ebp] ; mov dword ptr [esp], eax ; call edi
0x00098728 : mov eax, dword ptr [ebp] ; mov dword ptr [esp], eax ; call esi
0x00047a58 : mov eax, dword ptr [ecx + 0x1c] ; call 0x129d7c
0x00089940 : mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; pop edi ; ret
0x00089b70 : mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; lea eax, dword ptr [edx + 3] ; ret
0x0008737d : mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edi ; pop edi ; pop ebx ; ret
0x00088430 : mov eax, dword ptr [ecx] ; mov dword ptr [edx], eax ; mov eax, edx ; pop ebx ; ret
0x00089b51 : mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; ret
0x00085651 : mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edi ; pop edi ; ret
0x00085771 : mov eax, dword ptr [ecx] ; mov word ptr [edx], ax ; mov eax, edx ; ret
0x000c5e75 : mov eax, dword ptr [edx + 0x14] ; add esp, 0x28 ; pop esi ; pop edi ; pop ebp ; ret
0x0010992d : mov eax, dword ptr [edx + 0x28] ; call 0x129d7c
0x0007537b : mov eax, dword ptr [edx + 0x30] ; call 0x129d7c
0x00075571 : mov eax, dword ptr [edx + 4] ; call 0x129d7c
0x00127948 : mov eax, dword ptr [edx] ; add esp, 0xc ; ret
0x000d7736 : mov eax, dword ptr [edx] ; mov dword ptr [edx], ecx ; pop ebx ; ret
0x00127950 : mov eax, dword ptr [esp + 0x10] ; mov eax, dword ptr [eax] ; add esp, 0xc ; ret
0x00126e5f : mov eax, dword ptr [esp + 0x1c] ; add esp, 0x34 ; pop ebx ; pop esi ; ret
0x00027030 : mov eax, dword ptr [esp + 4] ; and eax, 0x7f ; ret
0x00105030 : mov eax, dword ptr [esp + 4] ; bswap eax ; ret
0x00129930 : mov eax, dword ptr [esp + 4] ; mov eax, dword ptr [eax + 0x5c] ; ret
0x000d8a28 : mov eax, dword ptr [esp + 4] ; mov word ptr [eax], dx ; xor eax, eax ; ret
0x000d8a47 : mov eax, dword ptr [esp + 8] ; mov dword ptr [eax], edx ; xor eax, eax ; ret
0x000b9d68 : mov eax, ebx ; sub eax, dword ptr [ebx + esi*4 - 0xe9280] ; jmp eax
0x00017e74 : mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10
0x00028f45 : mov eax, edi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00099969 : mov eax, edi ; pop esi ; pop edi ; ret
0x0010572c : mov eax, edx ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00054e44 : mov eax, edx ; add esp, 0x7c ; ret
0x0010505a : mov eax, edx ; and eax, 0xffffff ; ret
0x00095e6e : mov eax, esi ; add esp, 8 ; pop esi ; pop edi ; pop ebp ; ret
0x00017349 : mov eax, esi ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00095962 : mov ebp, 0x30f801ff ; in eax, dx ; add eax, ecx ; pop edi ; ret
0x000f8f27 : mov ebp, 0x5b2cc483 ; pop esi ; pop edi ; pop ebp ; ret
0x00095126 : mov ebp, 0x5ff801c0 ; ret
0x00095925 : mov ebp, 0x5ff801ff ; ret
0x0007562c : mov ebp, 0x89000005 ; ret 0xd285
0x00157a5d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0004504b : mov ebp, 0xfffffb48 ; jmp edx
0x00067953 : mov ebp, dword ptr [esi + 0x24] ; call 0x129d7c
0x00067a32 : mov ebp, dword ptr [esi + 0x50] ; call 0x129d7c
0x0012755d : mov ebp, dword ptr [esp + 0x28] ; add esp, 0x2c ; ret 4
0x000d9c62 : mov ebp, dword ptr [esp + 0x28] ; add esp, 0x2c ; ret 8
0x000e625d : mov ebp, dword ptr [esp + 0x3c] ; add esp, 0x40 ; ret
0x00066347 : mov ebp, dword ptr [esp + 0x68] ; add esp, 0x6c ; ret
0x0002692d : mov ebp, dword ptr [esp + 8] ; add esp, 0xc ; ret
0x00066346 : mov ebp, dword ptr fs:[esp + 0x68] ; add esp, 0x6c ; ret
0x000a7d43 : mov ebp, edi ; sub ebp, esi ; sar ebp, 1 ; add ebp, esi ; jmp 0xa7d19
0x0009474b : mov ebx, 0x3000c61 ; or al, 0x91 ; jmp ecx
0x00157a5b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00109843 : mov ebx, dword ptr [esp + 0x14] ; add esp, 0x1c ; ret
0x00019935 : mov ebx, dword ptr [esp + 0xc] ; add esp, 0x1c ; ret
0x000a8476 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xa8489 ; ret
0x000b9372 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xb9385 ; ret
0x000c5542 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xc5555 ; ret
0x000e7d56 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xe7d69 ; ret
0x000e7e26 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xe7e39 ; ret
0x000e8022 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xe8035 ; ret
0x000e8062 : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xe8075 ; ret
0x000e815c : mov ebx, edx ; cmp eax, 0xfffff001 ; jae 0xe819b ; ret
0x00045363 : mov ecx, 0x89ffffca ; ret 0x16eb
0x00157a59 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000f722e : mov ecx, dword ptr [ecx] ; test byte ptr [ecx + eax*2 + 1], 0x40 ; cmove eax, edx ; ret
0x0009816f : mov ecx, dword ptr [edx] ; test ecx, ecx ; jne 0x98171 ; pop esi ; pop edi ; pop ebp ; ret
0x000d5644 : mov ecx, dword ptr [esp + 0x24] ; movzx ebp, byte ptr [ecx + esi] ; jmp 0xd561a
0x00129d77 : mov ecx, dword ptr [esp] ; ret
0x000d436b : mov ecx, ebx ; sub ecx, dword ptr [ebx + edx*4 - 0xcec7c] ; jmp ecx
0x00176b7d : mov ecx, ecx ; out dx, al ; jmp dword ptr [edx]
0x0014843b : mov edi, 0 ; lea eax, dword ptr [ecx + 2] ; ret
0x0014844b : mov edi, 0 ; lea eax, dword ptr [ecx + 3] ; ret
0x0014845b : mov edi, 0 ; lea eax, dword ptr [ecx + 5] ; ret
0x0014846b : mov edi, 0 ; lea eax, dword ptr [ecx + 6] ; ret
0x0014847b : mov edi, 0 ; lea eax, dword ptr [ecx + 7] ; ret
0x00148b2b : mov edi, 0 ; lea eax, dword ptr [edx + 0xe] ; ret
0x000a712d : mov edi, 0x5f000000 ; pop esi ; ret
0x00099968 : mov edi, 0x5f5ef889 ; ret
0x0010482d : mov edi, 0x83fff937 ; les ebx, ptr [eax] ; pop ebx ; ret
0x000d705c : mov edi, dword ptr [eax] ; mov eax, 0xc ; jmp 0xd7030
0x0001772f : mov edi, dword ptr [ebp + 8] ; call 0x129d7c
0x0001986d : mov edi, dword ptr [esp + 0x28] ; add esp, 0x2c ; ret
0x00019e42 : mov edi, dword ptr [esp + 0x40] ; add esp, 0x44 ; ret
0x000b4655 : mov edi, dword ptr [esp + 0x78] ; add esp, 0x7c ; ret
0x00167b4d : mov edx, 0x18540001 ; jmp 0x167b59
0x000e9d62 : mov edx, 0x89fffffc ; ret 0xc031
0x0015937e : mov edx, 0xcac982a4 ; call 0xaed831fe
0x000b9940 : mov edx, 0xffffffff ; cmovne eax, edx ; ret
0x000c6b27 : mov edx, dword ptr [edx + 8] ; pop ebx ; pop esi ; mov eax, edx ; ret
0x00129b38 : mov edx, dword ptr [esp + 0x10] ; mov dword ptr [edx], edi ; pop esi ; pop edi ; ret
0x0007985f : mov edx, dword ptr [esp + 0x18] ; mov dword ptr [esp + 4], edx ; call eax
0x0001985c : mov edx, dword ptr [esp + 0x30] ; mov dword ptr [esp], edx ; call eax
0x00079b5e : mov edx, dword ptr [esp + 0x40] ; mov dword ptr [esp + 4], edx ; call eax
0x00114b74 : mov edx, dword ptr [esp + 0x60] ; mov dword ptr [esp], edx ; call eax
0x000d8a54 : mov edx, dword ptr [esp + 8] ; mov dword ptr [eax + 4], edx ; xor eax, eax ; ret
0x00129d7b : mov edx, dword ptr [esp] ; ret
0x00126f40 : mov edx, eax ; jmp 0x126f30
0x00045240 : mov edx, eax ; jmp 0x4526e
0x00045367 : mov edx, eax ; jmp 0x45382
0x00064945 : mov edx, eax ; jmp 0x64928
0x000b5b75 : mov edx, eax ; jmp 0xb5b0f
0x00129e3d : mov edx, eax ; sar edx, 0x1f ; add esp, 0x18 ; pop esi ; ret
0x00055d48 : mov edx, ebx ; sub edx, dword ptr [ebx + eax*4 - 0x14d2a0] ; jmp edx
0x000d4c77 : mov edx, ebx ; sub edx, dword ptr [ebx + eax*4 - 0xce370] ; jmp edx
0x00129050 : mov edx, ebx ; sub edx, dword ptr [ebx + ecx*4 - 0x79f98] ; jmp edx
0x000c7749 : mov edx, edi ; ret 0xfffb
0x0014787e : mov es, word ptr [eax] ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x00188069 : mov es, word ptr [ecx] ; add byte ptr [esi + edi*4 - 0xd], dh ; jmp dword ptr [eax]
0x00117141 : mov esi, 0x382444f6 ; or byte ptr [ebp - 0x49], dh ; jmp 0x117117
0x00166a78 : mov esi, 0x4efffcf9 ; cli ; cld ; call esp
0x00197430 : mov esi, 0x5d0b48c3 ; ret
0x000e8b34 : mov esi, 0x8900768d ; clc ; pop esi ; pop edi ; pop ebp ; ret
0x00099964 : mov esi, 0xbf75c085 ; mov eax, edi ; pop esi ; pop edi ; ret
0x00157a5e : mov esi, 0xc2c1c0bf ; ret
0x00176170 : mov esi, 0xd1cffee ; jb 0x17613c ; out dx, al ; jmp dword ptr [edx]
0x000a575b : mov esi, dword ptr [eax + 0x14] ; call 0x129d7c
0x000a756b : mov esi, dword ptr [edx + 8] ; cmp dword ptr [ecx + 8], esi ; jne 0xa7555 ; jmp 0xa7541
0x0012476f : mov esi, dword ptr [esp + 0x18] ; add esp, 0x1c ; mov eax, edx ; ret
0x00069472 : mov esi, dword ptr [esp + 0x24] ; add esp, 0x2c ; ret
0x00117848 : mov esi, dword ptr [esp + 0x48] ; add esp, 0x4c ; ret
0x00025f78 : mov esi, dword ptr [esp + 4] ; add esp, 8 ; ret
0x00017168 : mov esi, eax ; push ebx ; call 0x129d7c
0x00119a40 : mov esi, ebx ; sub esi, dword ptr [ebx + eax*4 - 0x895a8] ; jmp esi
0x00168b7c : mov esi, ss ; add byte ptr [eax], al ; add al, 0xd9 ; out dx, al ; call eax
0x00148f5a : mov esp, 0x27 ; add dh, dh ; ret 0xf10
0x0009484a : mov esp, 0x3000c60 ; or al, 0x91 ; jmp ecx
0x00168b54 : mov esp, 0x40000d5 ; shr dh, cl ; jmp esp
0x00095571 : mov esp, 0x5ff801c0 ; ret
0x000a5166 : mov esp, 0x8301c083 ; ret 0x3901
0x000a5163 : mov esp, 0x83bc4d8b ; rol byte ptr [ecx], 0x83 ; ret 0x3901
0x00048a65 : mov esp, 0x8904c683 ; ret 0xfac1
0x00078071 : mov esp, dword ptr [ecx + eax] ; add byte ptr [ecx], bh ; ret 0x850f
0x0003834a : mov fs, word ptr [ebp - 0x76000002] ; ret 0x18e9
0x00175529 : mov ss, ebp ; in eax, dx ; jmp dword ptr [edx]
0x000d436e : mov word ptr [ebx - 0xcec7c], ss ; jmp ecx
0x00087662 : mov word ptr [ecx + 4], dx ; pop ebx ; ret
0x00087630 : mov word ptr [ecx], dx ; mov byte ptr [ecx + 2], dl ; pop ebx ; ret
0x0019542c : mov word ptr [edi + esi*8], dr0 ; call dword ptr [eax]
0x00195d44 : mov word ptr [edi - 9], es ; jmp dword ptr [esi]
0x000e4d78 : mov word ptr [edx + 0x3e], ax ; xor eax, eax ; ret
0x00089a58 : mov word ptr [edx + 4], ax ; lea eax, dword ptr [edx + 5] ; pop edi ; ret
0x00134f7c : mov word ptr [edx - 2], cx ; mov eax, dword ptr [esp + 8] ; pop ebx ; ret
0x00089b53 : mov word ptr [edx], ax ; lea eax, dword ptr [edx + 1] ; ret
0x00085653 : mov word ptr [edx], ax ; mov eax, edi ; pop edi ; ret
0x00085773 : mov word ptr [edx], ax ; mov eax, edx ; ret
0x0018853c : mov word ptr [esi + 0x1a850001], cs ; hlt ; call dword ptr [eax]
0x00019b3d : mov word ptr [esi], dr0 ; add byte ptr [eax], al ; pop ebx ; ret
0x0013652f : movdqa xmmword ptr [edx - 0x10], xmm0 ; mov eax, edx ; pop ebx ; ret
0x00085634 : movdqu xmmword ptr [edx], xmm0 ; mov eax, edi ; pop edi ; ret
0x00089c4d : movlpd qword ptr [edx + 5], xmm1 ; lea eax, dword ptr [edx + 0xc] ; ret
0x0008586d : movlpd qword ptr [edx + 5], xmm1 ; mov eax, edx ; ret
0x00089c6d : movlpd qword ptr [edx + 6], xmm1 ; lea eax, dword ptr [edx + 0xd] ; ret
0x0008572d : movlpd qword ptr [edx + 6], xmm1 ; mov eax, edi ; pop edi ; ret
0x00089b2d : movlpd qword ptr [edx + 7], xmm1 ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x0008574d : movlpd qword ptr [edx + 7], xmm1 ; mov eax, edi ; pop edi ; ret
0x00087428 : movlpd qword ptr [edx + 8], xmm1 ; mov eax, edi ; pop edi ; pop ebx ; ret
0x00089974 : movlpd qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x00085827 : movlpd qword ptr [edx], xmm0 ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x00085847 : movlpd qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x00089c4e : movlps qword ptr [edx + 5], xmm1 ; lea eax, dword ptr [edx + 0xc] ; ret
0x0008586e : movlps qword ptr [edx + 5], xmm1 ; mov eax, edx ; ret
0x00089c6e : movlps qword ptr [edx + 6], xmm1 ; lea eax, dword ptr [edx + 0xd] ; ret
0x0008572e : movlps qword ptr [edx + 6], xmm1 ; mov eax, edi ; pop edi ; ret
0x00089b2e : movlps qword ptr [edx + 7], xmm1 ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x0008574e : movlps qword ptr [edx + 7], xmm1 ; mov eax, edi ; pop edi ; ret
0x00087429 : movlps qword ptr [edx + 8], xmm1 ; mov eax, edi ; pop edi ; pop ebx ; ret
0x00089975 : movlps qword ptr [edx], xmm0 ; lea eax, dword ptr [edx + 7] ; pop edi ; ret
0x00085828 : movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 7], eax ; mov eax, edx ; ret
0x00089c28 : movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; lea eax, dword ptr [edx + 0xb] ; ret
0x00088361 : movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; mov eax, edx ; pop ebx ; ret
0x00085848 : movlps qword ptr [edx], xmm0 ; mov dword ptr [edx + 8], eax ; mov eax, edx ; ret
0x00136530 : movq qword ptr [edx - 0x10], mm0 ; mov eax, edx ; pop ebx ; ret
0x00085635 : movq qword ptr [edx], mm0 ; mov eax, edi ; pop edi ; ret
0x00166174 : movsb byte ptr es:[edi], byte ptr [esi] ; aam 0xfc ; call esp
0x00169e44 : movsb byte ptr es:[edi], byte ptr [esi] ; aas ; add dword ptr [eax], eax ; insd dword ptr es:[edi], dx ; xor ecx, esi ; call esp
0x000a7148 : movsb byte ptr es:[edi], byte ptr [esi] ; add byte ptr [eax], al ; add byte ptr [edi + 0x5e], bl ; ret
0x00116379 : movsb byte ptr es:[edi], byte ptr [esi] ; add esp, 0x6c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00189d2c : movsb byte ptr es:[edi], byte ptr [esi] ; fcompi st(4) ; call dword ptr [edx]
0x00167c2c : movsb byte ptr es:[edi], byte ptr [esi] ; jnp 0x167c36 ; add ah, al ; xor ebp, ebx ; jmp esp
0x00176654 : movsb byte ptr es:[edi], byte ptr [esi] ; outsd dx, dword ptr [esi] ; add byte ptr [eax], al ; aaa ; add edi, ebp ; call dword ptr [eax]
0x00168154 : movsb byte ptr es:[edi], byte ptr [esi] ; popfd ; add byte ptr [eax], al ; aam 0x59 ; in al, dx ; call eax
0x00168844 : movsb byte ptr es:[edi], byte ptr [esi] ; ret
0x000c7739 : movsb byte ptr es:[edi], byte ptr [esi] ; ret 0xfffb
0x00168355 : movsd dword ptr es:[edi], dword ptr [esi] ; add byte ptr [eax], al ; xor al, 0x73 ; in al, dx ; call dword ptr [eax]
0x000f7d2a : movsx esi, dl ; jmp 0xf7cf6
0x000a7266 : movzx eax, al ; lea eax, dword ptr [eax + eax - 1] ; pop esi ; pop edi ; ret
0x000b9b6d : movzx eax, al ; lea eax, dword ptr [eax + eax - 1] ; ret
0x00114a79 : movzx eax, al ; pop edi ; pop ebp ; ret
0x00026f38 : movzx eax, word ptr [eax + edx*2] ; and eax, 0x1000 ; ret
0x00026e28 : movzx eax, word ptr [eax + edx*2] ; and eax, 0x200 ; ret
0x00026e58 : movzx eax, word ptr [eax + edx*2] ; and eax, 0x8000 ; ret
0x000d5648 : movzx ebp, byte ptr [ecx + esi] ; jmp 0xd5616
0x000f7d27 : movzx edx, byte ptr [edi] ; movsx esi, dl ; jmp 0xf7cf9
0x000e9936 : movzx esi, byte ptr [eax] ; call 0x129d7c
0x000a7a27 : mul byte ptr [ebp - 0x39] ; add byte ptr [ebx], cl ; add byte ptr [eax], al ; jmp 0xa79fc
0x00145447 : neg eax ; add esp, 4 ; pop ebp ; pop ebx ; ret
0x00074d46 : neg eax ; mov dword ptr [esp], eax ; call dword ptr [ecx]
0x00149737 : neg eax ; pop edi ; pop esi ; pop ebx ; ret
0x000c5b44 : neg eax ; pop edi ; ret
0x000a7227 : neg eax ; ret
0x00166e24 : nop ; add ch, bh ; jmp dword ptr [eax]
0x000a5737 : nop ; add esp, 0x10 ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x00095e77 : nop ; add esp, 8 ; xor eax, eax ; pop esi ; pop edi ; pop ebp ; ret
0x00024b28 : nop ; and al, 0x83 ; ret 0x3b01
0x00095c6f : nop ; bsf eax, eax ; lea eax, dword ptr [eax + edx - 0x10] ; ret
0x00174340 : nop ; dec esp ; add byte ptr [eax], al ; push -0x2b ; in al, dx ; call dword ptr [eax]
0x0014842f : nop ; lea eax, dword ptr [ecx + 1] ; ret
0x0009842b : nop ; lea esi, dword ptr [esi] ; add eax, 8 ; ret
0x000e9633 : nop ; lea esi, dword ptr [esi] ; xor edx, edx ; jmp 0xe9606
0x00166948 : nop ; loope 0x16694a ; jmp dword ptr [eax]
0x000b9a37 : nop ; mov eax, 0x20 ; ret
0x000b9977 : nop ; mov eax, 0x7d00 ; pop ebx ; ret
0x000b996f : nop ; mov eax, 0xfa ; pop ebx ; ret
0x000d9355 : nop ; or al, 1 ; add byte ptr [eax], al ; xor eax, eax ; ret
0x000d936b : nop ; or byte ptr [ecx], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x0014763f : nop ; pop ebx ; pop esi ; xor eax, eax ; pop edi ; ret
0x00094f4f : nop ; pop esi ; pop edi ; pop ebp ; ret
0x0001902f : nop ; push esi ; push ebx ; call 0x129d7c
0x00179240 : nop ; wait ; add byte ptr [eax], al ; ret
0x000d705f : or al, 0 ; add byte ptr [eax], al ; jmp 0xd702d
0x00077339 : or al, 0 ; add byte ptr [eax], al ; xor eax, eax ; add esp, 0xc ; ret
0x00009552 : or al, 0 ; mov eax, dword ptr [0xd0000010] ; ret 7
0x00005842 : or al, 0 ; ret
0x00009442 : or al, 0 ; ret 0x38
0x00004232 : or al, 0 ; ret 0x52
0x0007822a : or al, 0x19 ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [eax], al ; ret
0x00065f6d : or al, 0x24 ; call 0x72184
0x00129d78 : or al, 0x24 ; ret
0x00187c24 : or al, 0x36 ; call dword ptr [ecx]
0x000f7a75 : or al, 0x39 ; ret 0x1474
0x000a7e64 : or al, 0x5e ; pop edi ; pop ebp ; ret
0x00134c50 : or al, 0x5f ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x000a7922 : or al, 0x7d ; sti ; dec dword ptr [edi] ; inc ebp ; ret 0xa5eb
0x000a7969 : or al, 0x81 ; ret 0x76c
0x0007825b : or al, 0x83 ; les ecx, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x00047b32 : or al, 0x83 ; les esp, ptr [eax] ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x00098525 : or al, 0x83 ; rcl dword ptr [eax], -0x7b ; div byte ptr [ebx + esi - 0x7d] ; ret 0x8310
0x00095633 : or al, 0x83 ; rcl dword ptr [eax], -0x7d ; ret 0x2910
0x00097c65 : or al, 0x83 ; ret 0x8310
0x00098034 : or al, 0x83 ; ret 0x8510
0x0010527e : or al, 0x83 ; ret 0xe901
0x00069574 : or al, 0x89 ; ret 0x562b
0x00069d58 : or al, 0x89 ; xor al, 0x24 ; call 0x669a8
0x000f7a5a : or al, 0x8b ; inc ebp ; adc al, 0x39 ; ret 0xf67c
0x000f7a72 : or al, 0x8b ; inc ecx ; or al, 0x39 ; ret 0x1474
0x0006952a : or al, 0x8b ; inc esi ; or byte ptr [ecx + 0x29cd29d5], cl ; ret 0xe75
0x0009843a : or al, 0x90 ; lea esi, dword ptr [esi] ; ret
0x00184855 : or al, 0x9e ; int1 ; jmp dword ptr [edx]
0x0014842d : or al, 0xc3 ; nop ; lea eax, dword ptr [ecx + 1] ; ret
0x00178725 : or al, 0xd7 ; out dx, al ; jmp dword ptr [edx]
0x000d9356 : or al, 1 ; add byte ptr [eax], al ; xor eax, eax ; ret
0x0018883b : or al, 4 ; add al, 0xc5 ; inc ebx ; or eax, dword ptr [edx] ; out 0xa, al ; ret
0x00184562 : or al, 4 ; add al, 0xc5 ; inc ecx ; or ebp, dword ptr [esi + 0xa] ; ret
0x0018832d : or al, 4 ; add al, 0xc5 ; inc ecx ; or edx, dword ptr [esi + 0xa] ; ret
0x00175832 : or al, 4 ; add al, 0xc5 ; inc esp ; or ebx, dword ptr [edx + 0xa] ; ret
0x00098170 : or al, byte ptr [ebp + 0x5ef375c9] ; pop edi ; pop ebp ; ret
0x00116d7d : or al, byte ptr [ebp - 0x7cec8b37] ; ret 0x8908
0x00126e35 : or al, byte ptr [ebx + 0x5e5b34c4] ; ret
0x0006974c : or al, ch ; dec esi ; sar bh, cl ; jmp dword ptr [ecx]
0x0006867c : or al, ch ; push ds ; jecxz 0x68685 ; jmp dword ptr [ecx]
0x00166d51 : or bh, ch ; jmp dword ptr [eax]
0x00134b30 : or bl, byte ptr [edi + 3] ; sbb al, 0x8b ; jmp ebx
0x00055241 : or byte ptr [eax + 0x24000001], al ; cmp al, 0xc ; ret 0x4489
0x00094160 : or byte ptr [eax - 0x776ef86], cl ; pop ebx ; pop edi ; ret
0x00095845 : or byte ptr [eax], ah ; ret
0x00129a59 : or byte ptr [eax], al ; add byte ptr [eax], al ; add esp, 0xc ; ret
0x00149157 : or byte ptr [eax], al ; add byte ptr [eax], al ; pop edi ; ret
0x000f8b4e : or byte ptr [eax], al ; je 0xf8b5e ; xor eax, eax ; ret
0x00095855 : or byte ptr [eax], dh ; ret
0x00095835 : or byte ptr [eax], dl ; ret
0x00166e64 : or byte ptr [eax], dl ; std ; jmp edx
0x000a7570 : or byte ptr [ebp - 0x27], dh ; jmp 0xa753c
0x00117146 : or byte ptr [ebp - 0x49], dh ; jmp 0x117112
0x00184e4d : or byte ptr [ebx + 0x40e4502], al ; ret
0x00184d58 : or byte ptr [ebx + 0x40e4802], al ; ret
0x00094a3c : or byte ptr [ebx + 0x5b0c2444], cl ; pop esi ; ret
0x000c6b29 : or byte ptr [ebx + 0x5e], bl ; mov eax, edx ; ret
0x00079b5d : or byte ptr [ebx - 0x76bfdbac], cl ; push esp ; and al, 4 ; call eax
0x0007985e : or byte ptr [ebx - 0x76e7dbac], cl ; push esp ; and al, 4 ; call eax
0x0006952d : or byte ptr [ecx + 0x29cd29d5], cl ; ret 0xe75
0x00056a5e : or byte ptr [ecx + 0x50ff2434], cl ; sbb al, 0x89 ; ret 0x478b
0x000d8a57 : or byte ptr [ecx - 0x3fcefbb0], cl ; ret
0x00048e72 : or byte ptr [ecx - 0x76fbdbb4], cl ; xor al, 0x24 ; call eax
0x000c7353 : or byte ptr [ecx], al ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x000d936c : or byte ptr [ecx], al ; add byte ptr [eax], al ; xor eax, eax ; ret
0x000a756d : or byte ptr [ecx], bh ; jno 0xa7580 ; jne 0xa7553 ; jmp 0xa753f
0x00136b6c : or byte ptr [ecx], bh ; ret 0x1e72
0x000d6964 : or byte ptr [ecx], bh ; ret 0xd772
0x00095e7a : or byte ptr [ecx], dh ; rcr byte ptr [esi + 0x5f], 0x5d ; ret
0x0010507e : or byte ptr [edi], 0x45 ; ret 0x90c3
0x0008716f : or byte ptr [edi], cl ; test dword ptr [edx], ebx ; push es ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x000d7e7d : or byte ptr [edi], cl ; xchg eax, ebp ; ret 0xe083
0x00019546 : or byte ptr [edi], cl ; xchg eax, esp ; ret 0xc031
0x00187527 : or byte ptr [edx + 9], al ; add eax, dword ptr [edx] ; push esi ; ret
0x00166d50 : or byte ptr [edx], 0xfd ; jmp dword ptr [eax]
0x000e4d77 : or byte ptr [esi - 0x77], ah ; inc edx ; xor eax, eax ; ret
0x00176e5d : or cl, bl ; out dx, al ; jmp dword ptr [edx]
0x000f7a57 : or cl, byte ptr [ebx + 0x458b0c6d] ; adc al, 0x39 ; ret 0xf67c
0x00068125 : or cl, byte ptr [ebx - 0x3f7ac7c0] ; js 0x68139 ; ret
0x00087537 : or cl, byte ptr [edi] ; test dword ptr [edx + 2], edx ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00199041 : or cl, byte ptr fs:[esi] ; adc al, 0x41 ; ret
0x0017427e : or cl, byte ptr gs:[esi] ; add al, 0xc6 ; ret
0x00149052 : or dh, byte ptr [edx + 0x4b] ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x00148032 : or dh, byte ptr [edx + 0x4b] ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x000e997b : or dh, byte ptr [edx - 0x77] ; ret 0xb60f
0x00186750 : or dl, dh ; call dword ptr [eax]
0x00068139 : or dword ptr [eax], eax ; add byte ptr [eax], al ; mov eax, 0xffffffff ; ret
0x0001952a : or dword ptr [ebp + 0x33], esp ; add eax, 0x18 ; call eax
0x0012784e : or dword ptr [ebx + 0x5f5e24c4], eax ; ret
0x00078229 : or dword ptr [ecx + ebx], 0 ; add byte ptr [eax], al ; ret
0x000e9976 : or dword ptr [edi - 0x7d], esi ; cli ; or dh, byte ptr [edx - 0x77] ; ret 0xb60f
0x00109174 : or dword ptr [edi], ecx ; inc esi ; int 0x80
0x00149042 : or dword ptr [edx + 0x5b], esi ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x00148022 : or dword ptr [edx + 0x5b], esi ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x0012784b : or dword ptr [edx + 0x74], edi ; or dword ptr [ebx + 0x5f5e24c4], eax ; ret
0x00186e2d : or dword ptr [edx - 0xe], esi ; jmp dword ptr [edx]
0x00095773 : or dword ptr [esi + 0xf], esp ; xlatb ; ret 0xc085
0x00149072 : or eax, 0x408d2b72 ; or al, 0x5f ; ret
0x00148052 : or eax, 0x478d2b72 ; or al, 0x5f ; ret
0x00124962 : or eax, 0x81000054 ; ret
0x00119962 : or eax, 0x81000104 ; ret
0x000a7c62 : or eax, 0x81000821 ; ret
0x00099a62 : or eax, 0x81000903 ; ret
0x00097d62 : or eax, 0x81000920 ; ret
0x00077362 : or eax, 0x81000b2a ; ret
0x00065c6f : or eax, 0x83000000 ; les ebp, ptr [eax] ; pop ebx ; ret
0x0014922e : or eax, 0xc083c35f ; push cs ; pop edi ; ret
0x00176672 : or eax, 0xffeec7ef ; sbb al, 0xd ; pop ds ; ret
0x00196450 : or eax, dword ptr [ebx] ; aad 1 ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00189958 : or eax, dword ptr [ebx] ; aam 1 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00189847 : or eax, dword ptr [ebx] ; add al, 3 ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00177358 : or eax, dword ptr [ebx] ; add word ptr [edx], cx ; push cs ; adc al, 0x43 ; ret
0x00189130 : or eax, dword ptr [ebx] ; cmp byte ptr [ecx], al ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x0018733a : or eax, dword ptr [ebx] ; hlt ; add dword ptr [edx], ecx ; push cs ; adc al, 0x41 ; ret
0x00196468 : or eax, dword ptr [ebx] ; inc ecx ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00196523 : or eax, dword ptr [ebx] ; pop edx ; add dword ptr [edx], ecx ; ret
0x00186543 : or eax, dword ptr [ebx] ; push ecx ; add dword ptr [edx], ecx ; ret
0x00186c6b : or eax, dword ptr [ebx] ; push esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00178b75 : or eax, dword ptr [edx] ; inc edi ; ret
0x00174c6d : or eax, dword ptr [edx] ; lds ecx, ptr [edx] ; push cs ; adc al, 0x43 ; ret
0x00197d48 : or eax, dword ptr [edx] ; lodsd eax, dword ptr [esi] ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00188840 : or eax, dword ptr [edx] ; out 0xa, al ; ret
0x00189970 : or eax, dword ptr [edx] ; pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00189b6e : or eax, dword ptr [edx] ; pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00189635 : or eax, dword ptr [edx] ; push ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00198076 : or eax, dword ptr [edx] ; push esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00174628 : or eax, dword ptr [edx] ; push esi ; ret
0x0019805f : or eax, dword ptr [edx] ; xchg eax, edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x0018446a : or eax, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x000a766f : or ebp, dword ptr [ecx] ; ret 0x5589
0x00197e38 : or ebp, dword ptr [edx + 0xa] ; push cs ; adc al, 0x41 ; ret
0x0019975a : or ebx, dword ptr [eax + 0xa] ; ret
0x0019585e : or ebx, dword ptr [ebp + 0xa] ; push cs ; adc al, 0x41 ; ret
0x0017473b : or ebx, dword ptr [edi + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00149224 : or ebx, dword ptr [edi - 0x3d] ; add eax, 0xc ; pop edi ; ret
0x00175837 : or ebx, dword ptr [edx + 0xa] ; ret
0x0018746d : or ebx, esi ; call edi
0x00087975 : or ecx, dword ptr [edi] ; test dword ptr [0x5bfffffe], edx ; ret
0x00087565 : or ecx, dword ptr [edi] ; test dword ptr [edx + eax], esp ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x000e5e79 : or ecx, edx ; mov dword ptr [eax + 8], ecx ; xor eax, eax ; pop ebx ; ret
0x0018874f : or edi, dword ptr [eax + 0xa] ; push cs ; adc al, 0x41 ; ret
0x0019944b : or edi, dword ptr [ecx + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00176f5d : or edi, ebp ; call esp
0x00176f21 : or edi, ebp ; jmp dword ptr [ebx]
0x00149736 : or edi, esi ; fcomp dword ptr [edi + 0x5e] ; pop ebx ; ret
0x00196a36 : or edx, dword ptr [ecx + 0xa] ; ret
0x0017422d : or esi, dword ptr [ebx + 0xa] ; ret
0x00149062 : or esi, dword ptr [edx + 0x3b] ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x00148042 : or esi, dword ptr [edx + 0x3b] ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x000f722f : or esi, esi ; inc esp ; inc ecx ; add dword ptr [eax + 0xf], eax ; inc esp ; ret 0x8dc3
0x0017467b : or esp, dword ptr [eax + 0xa] ; push cs ; adc al, 0x43 ; ret
0x00199040 : or esp, dword ptr [edx + ecx + 0xe] ; adc al, 0x41 ; ret
0x00158847 : out -0x6b, eax ; push es ; cld ; ret
0x00168e25 : out 0, al ; add byte ptr [eax - 0x25], cl ; out dx, eax ; jmp eax
0x00168e2d : out 0, al ; add byte ptr [ebx + ebx*8 - 0x11], dl ; call eax
0x00188842 : out 0xa, al ; ret
0x00166851 : out 0xfc, al ; call dword ptr [eax]
0x00037f6a : out 0xff, al ; dec dword ptr [edi] ; movsb byte ptr es:[edi], byte ptr [esi] ; ret 0xc102
0x00179635 : out 1, al ; out dx, eax ; jmp dword ptr [edx]
0x0009547e : out dx, al ; add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; xlatb ; ret 0xc085
0x00109b39 : out dx, al ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x00168c22 : out dx, al ; call esp
0x00168b7a : out dx, al ; dec dword ptr [esi + edx*8 - 0x26fc0000] ; out dx, al ; call eax
0x0016753c : out dx, al ; dec esp ; std ; push dword ptr [ebx + ecx*2] ; std ; jmp esp
0x00178169 : out dx, al ; fsqrt ; jmp dword ptr [edx]
0x00187059 : out dx, al ; jb 0x187051 ; jmp dword ptr [edx]
0x00168c3a : out dx, al ; jmp dword ptr [eax]
0x00175622 : out dx, al ; jmp dword ptr [ebx]
0x00175743 : out dx, al ; jmp dword ptr [edx]
0x00168b5a : out dx, al ; jmp esp
0x00168f31 : out dx, al ; out dx, eax ; jmp dword ptr [eax]
0x00168c32 : out dx, al ; push dword ptr [edx + ebx*8] ; add byte ptr [eax], al ; test bl, bh ; out dx, al ; jmp dword ptr [eax]
0x00178148 : out dx, al ; sti ; call dword ptr [eax]
0x000c5d68 : out dx, eax ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x00168d2a : out dx, eax ; call dword ptr [eax]
0x00176922 : out dx, eax ; call dword ptr [ebx]
0x00177f2a : out dx, eax ; call edx
0x0009682a : out dx, eax ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x00176f22 : out dx, eax ; jmp dword ptr [ebx]
0x00168e2a : out dx, eax ; jmp eax
0x00176c4a : out dx, eax ; jmp ebx
0x00179c32 : out dx, eax ; jmp esi
0x00017067 : out dx, eax ; mov byte ptr [eax], 0 ; pop eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00149051 : out dx, eax ; or dh, byte ptr [edx + 0x4b] ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x00149041 : out dx, eax ; or dword ptr [edx + 0x5b], esi ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x00149071 : out dx, eax ; or eax, 0x408d2b72 ; or al, 0x5f ; ret
0x00149061 : out dx, eax ; or esi, dword ptr [edx + 0x3b] ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x00178e42 : out dx, eax ; out dx, al ; jmp dword ptr [edx]
0x00149031 : out dx, eax ; pop es ; jb 0x1490a8 ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x00168e22 : out dx, eax ; push dword ptr [eax + 0x480000e6] ; fucomi st(7) ; jmp eax
0x00168f2a : out dx, eax ; push dword ptr [eax] ; in eax, dx ; add byte ptr [eax], al ; aam 0xee ; out dx, eax ; jmp dword ptr [eax]
0x00149021 : out dx, eax ; push es ; jb 0x1490a8 ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x00168839 : outsb dx, byte ptr [esi] ; in eax, dx ; jmp dword ptr [eax - 0x3d]
0x00067a33 : outsb dx, byte ptr [esi] ; push eax ; call 0x129d7b
0x00176655 : outsd dx, dword ptr [esi] ; add byte ptr [eax], al ; aaa ; add edi, ebp ; call dword ptr [eax]
0x00176625 : outsd dx, dword ptr [esi] ; add byte ptr [eax], al ; push edi ; add edi, ebp ; call dword ptr [eax]
0x00085632 : outsd dx, dword ptr [esi] ; add ebx, esi ; movq qword ptr [edx], mm0 ; mov eax, edi ; pop edi ; ret
0x00166e61 : paddw mm7, mm7 ; or byte ptr [eax], dl ; std ; jmp edx
0x00095631 : pcmpeqb mm1, qword ptr [ebx + eax*4] ; rcl dword ptr [eax], -0x7d ; ret 0x2910
0x00129e41 : pop ds ; add esp, 0x18 ; pop esi ; ret
0x000e6a69 : pop ds ; add esp, 0xc ; ret
0x00158d2d : pop ds ; cli ; xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret
0x00166f4d : pop ds ; std ; call dword ptr [eax]
0x00166f3d : pop ds ; std ; call dword ptr [esi]
0x00167051 : pop ds ; std ; jmp dword ptr [eax]
0x00167041 : pop ds ; std ; jmp dword ptr [esi]
0x0014997d : pop dword ptr [eax] ; add byte ptr [eax], al ; lea eax, dword ptr [ecx + 4] ; ret
0x00079075 : pop eax ; add al, 0 ; add al, ch ; ret 0xfffc
0x000b7d44 : pop eax ; cmp eax, 0xfffff001 ; jae 0xb7d55 ; ret
0x000b8230 : pop eax ; cmp eax, 0xfffff001 ; jae 0xb8241 ; ret
0x00176f58 : pop eax ; jge 0x176f62 ; add ah, dl ; or edi, ebp ; call esp
0x0001706b : pop eax ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00195358 : pop eax ; popal ; add al, byte ptr [eax] ; inc esp ; xor dh, bh ; call ebx
0x0019752b : pop eax ; push cs ; add al, 0xc6 ; ret
0x00094c63 : pop eax ; push cs ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x0018582f : pop eax ; xchg byte ptr [edx], al ; pop edx ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00188658 : pop eax ; xchg eax, esp ; add dword ptr [eax], eax ; and al, 0xd8 ; jmp dword ptr [esi]
0x0019454f : pop eax ; xor eax, 0xd1cfff6 ; in al, dx ; xor al, 0xf6 ; jmp dword ptr [edx]
0x00195429 : pop ebp ; add al, byte ptr [eax] ; mov word ptr [edi + esi*8], dr0 ; call dword ptr [eax]
0x00174f51 : pop ebp ; add byte ptr [eax], al ; pop esp ; imul ebp ; jmp dword ptr [ebx]
0x00185439 : pop ebp ; add dword ptr [eax], eax ; dec eax ; inc edx ; call dword ptr [eax]
0x0019585f : pop ebp ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00145455 : pop ebp ; pop ebx ; xor eax, eax ; ret
0x00187f42 : pop ebp ; push es ; ret
0x00094929 : pop ebp ; pushal ; or al, 0 ; add ecx, dword ptr [ecx + ebx*4] ; jmp ecx
0x0001706f : pop ebp ; ret
0x00017e79 : pop ebp ; ret 0x10
0x0001715f : pop ebp ; ret 4
0x00027c25 : pop ebp ; ret 8
0x00177545 : pop ebp ; shr esi, 1 ; jmp dword ptr [edx]
0x0016772d : pop ebp ; std ; push dword ptr [esp + ebx*2 - 3] ; call esp
0x00195251 : pop ebx ; add al, byte ptr [eax] ; aas ; xor al, 0xf7 ; call dword ptr [eax]
0x00195221 : pop ebx ; add al, byte ptr [eax] ; pop edi ; xor al, 0xf7 ; call dword ptr [eax]
0x00199b65 : pop ebx ; clc ; call dword ptr [ecx]
0x000c5449 : pop ebx ; cmp eax, 0xfffff001 ; jae 0xc545a ; ret
0x000e4f2b : pop ebx ; cmp eax, 0xfffff001 ; jae 0xe4f3c ; ret
0x0007926d : pop ebx ; jmp 0x75563
0x00186042 : pop ebx ; jmp dword ptr [edx]
0x00149044 : pop ebx ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x00148024 : pop ebx ; lea eax, dword ptr [edi + 8] ; pop edi ; ret
0x00055453 : pop ebx ; mov eax, edx ; ret
0x00189972 : pop ebx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x000c6b2a : pop ebx ; pop esi ; mov eax, edx ; ret
0x0001706c : pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00017e76 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 0x10
0x0001715c : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 4
0x00027c22 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret 8
0x00095239 : pop ebx ; pop esi ; sub eax, 0x10 ; pop edi ; ret
0x00147640 : pop ebx ; pop esi ; xor eax, eax ; pop edi ; ret
0x0001934e : pop ebx ; ret
0x00174a51 : pop ecx ; add al, 0xa ; ret
0x00184b29 : pop ecx ; add dword ptr [eax], eax ; and al, 0x1a ; jmp ebx
0x00187068 : pop ecx ; add ebx, esi ; call dword ptr [eax]
0x00168159 : pop ecx ; in al, dx ; call eax
0x00184d71 : pop ecx ; push cs ; or byte ptr [ebx + 0x40e4902], al ; ret
0x00134621 : pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0017473c : pop edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00145454 : pop edi ; pop ebp ; pop ebx ; xor eax, eax ; ret
0x0001706e : pop edi ; pop ebp ; ret
0x00017e78 : pop edi ; pop ebp ; ret 0x10
0x0001715e : pop edi ; pop ebp ; ret 4
0x00027c24 : pop edi ; pop ebp ; ret 8
0x00087132 : pop edi ; pop ebx ; ret
0x00195224 : pop edi ; xor al, 0xf7 ; call dword ptr [eax]
0x00196525 : pop edx ; add dword ptr [edx], ecx ; ret
0x00168171 : pop edx ; in al, dx ; call dword ptr [eax]
0x00185832 : pop edx ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00095555 : pop edx ; xor eax, eax ; pop edi ; ret
0x0001925a : pop es ; add byte ptr [ecx - 0x47fbdbbc], cl ; ret 0
0x000f8b32 : pop es ; add dword ptr [ebx + 0x5e5b3cc4], eax ; pop edi ; pop ebp ; ret
0x0013485f : pop es ; add eax, 0x8b1c035f ; jmp ebx
0x0013473f : pop es ; add ebx, dword ptr [edi + 3] ; sbb al, 0x8b ; jmp ebx
0x000b5f74 : pop es ; add esp, 0x4c ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00149032 : pop es ; jb 0x1490a7 ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x00089b31 : pop es ; lea eax, dword ptr [edx + 0xe] ; pop edi ; ret
0x0008582d : pop es ; mov eax, edx ; ret
0x00134c4f : pop es ; or al, 0x5f ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00134b2f : pop es ; or bl, byte ptr [edi + 3] ; sbb al, 0x8b ; jmp ebx
0x0008997a : pop es ; pop edi ; ret
0x00134d6f : pop es ; push cs ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00166e55 : pop es ; std ; jmp eax
0x00185041 : pop esi ; add dword ptr [eax], eax ; jl 0x185071 ; jmp dword ptr [esi]
0x000a866d : pop esi ; add eax, edx ; ret
0x00138046 : pop esi ; call 0x129d7a
0x00199d41 : pop esi ; clc ; jmp dword ptr [ebx]
0x000c6b2b : pop esi ; mov eax, edx ; ret
0x00114a78 : pop esi ; movzx eax, al ; pop edi ; pop ebp ; ret
0x0014572d : pop esi ; pop ebp ; pop ebx ; ret
0x000e4f2a : pop esi ; pop ebx ; cmp eax, 0xfffff001 ; jae 0xe4f3d ; ret
0x00138261 : pop esi ; pop edi ; call 0x129d7b
0x000e7e7e : pop esi ; pop edi ; cmp eax, 0xfffff001 ; jae 0xe7ece ; ret
0x00145453 : pop esi ; pop edi ; pop ebp ; pop ebx ; xor eax, eax ; ret
0x0001706d : pop esi ; pop edi ; pop ebp ; ret
0x00017e77 : pop esi ; pop edi ; pop ebp ; ret 0x10
0x0001715d : pop esi ; pop edi ; pop ebp ; ret 4
0x00027c23 : pop esi ; pop edi ; pop ebp ; ret 8
0x0008712e : pop esi ; push es ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x0009523a : pop esi ; sub eax, 0x10 ; pop edi ; ret
0x00147641 : pop esi ; xor eax, eax ; pop edi ; ret
0x00185349 : pop esp ; add dword ptr [eax], eax ; call 0x11184599
0x0017416a : pop esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x46 ; ret
0x00109844 : pop esp ; and al, 0x14 ; add esp, 0x1c ; ret
0x00019364 : pop esp ; and al, 0x1c ; call 0x129d7c
0x000e7a78 : pop esp ; and al, 0x34 ; call 0x129d7c
0x00019936 : pop esp ; and al, 0xc ; add esp, 0x1c ; ret
0x00095923 : pop esp ; bsr edi, edi ; add eax, edi ; pop edi ; ret
0x00174f54 : pop esp ; imul ebp ; jmp dword ptr [ebx]
0x00189b70 : pop esp ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00174226 : pop esp ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x000c6e5f : pop esp ; pop ebx ; or eax, 1 ; pop esi ; pop edi ; pop ebp ; ret
0x00167765 : pop esp ; std ; call dword ptr [edx]
0x00167731 : pop esp ; std ; call esp
0x00167761 : pop esp ; std ; inc edx ; pop esp ; std ; call dword ptr [edx]
0x00094d2a : pop ss ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x000f7d29 : pop ss ; movsx esi, dl ; jmp 0xf7cf7
0x00195359 : popal ; add al, byte ptr [eax] ; inc esp ; xor dh, bh ; call ebx
0x0009474c : popal ; or al, 0 ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x00168155 : popfd ; add byte ptr [eax], al ; aam 0x59 ; in al, dx ; call eax
0x0016816d : popfd ; add byte ptr [eax], al ; inc esp ; pop edx ; in al, dx ; call dword ptr [eax]
0x00188f4d : popfd ; add dword ptr [eax], eax ; adc byte ptr [edx], dh ; hlt ; jmp dword ptr [esi]
0x00168979 : popfd ; in eax, dx ; jmp dword ptr [eax]
0x00174344 : push -0x2b ; in al, dx ; call dword ptr [eax]
0x0017916d : push -1 ; out dx, al ; jmp dword ptr [edx]
0x00199468 : push 0x440002a2 ; dec ebp ; clc ; jmp dword ptr [ebx]
0x00198e68 : push 0x5400029c ; aaa ; clc ; jmp dword ptr [eax]
0x000e9264 : push 0x83000001 ; ret 0xf01
0x00099c74 : push 0x8300001d ; les ebx, ptr [eax] ; pop ebx ; ret
0x00187468 : push 0x84000182 ; or ebx, esi ; call edi
0x000b9067 : push 0x90000000 ; lea esi, dword ptr [esi] ; ret
0x00197e39 : push 0xa ; push cs ; adc al, 0x41 ; ret
0x00198c46 : push 0xc6040e0a ; ret
0x0018676c : push 0xd1cfff2 ; jl 0x1867e2 ; jmp dword ptr [edx]
0x00188a68 : push 0xf4000198 ; sbb esp, esi ; call eax
0x00198e54 : push cs ; adc byte ptr [ebx + 0xc0e7e04], al ; ret
0x00174232 : push cs ; add al, 0x45 ; or esi, dword ptr [esi + 0xa] ; ret
0x00174624 : push cs ; add al, 0xc5 ; inc ebp ; or eax, dword ptr [edx] ; push esi ; ret
0x00184466 : push cs ; add al, 0xc5 ; inc edi ; or eax, dword ptr [esi + 0xe] ; adc al, 0x41 ; ret
0x00199754 : push cs ; add al, 0xc7 ; mov bl, 0x41 ; or ebx, dword ptr [eax + 0xa] ; ret
0x00027730 : push cs ; add byte ptr [eax], al ; add esp, 0x28 ; pop ebx ; ret
0x000a866a : push cs ; add byte ptr [eax], al ; pop esi ; add eax, edx ; ret
0x0019907e : push cs ; inc eax ; add dl, byte ptr [esi + ecx + 0x100e4114] ; ret
0x0018737a : push cs ; inc eax ; add esi, dword ptr [edx] ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00148062 : push cs ; jb 0x148087 ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x00148722 : push cs ; jl 0x148746 ; lea eax, dword ptr [ecx + 0xe] ; ret
0x00129969 : push cs ; mov eax, dword ptr [esp + 0x1c] ; add esp, 0x28 ; pop ebx ; ret
0x00094c64 : push cs ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00105059 : push cs ; mov eax, edx ; and eax, 0xffffff ; ret
0x00184e4c : push cs ; or byte ptr [ebx + 0x40e4502], al ; ret
0x00184d57 : push cs ; or byte ptr [ebx + 0x40e4802], al ; ret
0x00187526 : push cs ; or byte ptr [edx + 9], al ; add eax, dword ptr [edx] ; push esi ; ret
0x00186041 : push cs ; pop ebx ; jmp dword ptr [edx]
0x00134d70 : push cs ; pop edi ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00089b34 : push cs ; pop edi ; ret
0x00199c67 : push cs ; xor byte ptr [edx], al ; inc edi ; push cs ; or byte ptr [esi + ecx + 4], al ; ret
0x0000422c : push ds ; add byte ptr [eax], al ; add byte ptr [edx], dl ; add byte ptr [eax + eax], cl ; ret 0x52
0x00178541 : push ds ; fdiv st(2), st(0) ; jmp dword ptr [edx]
0x0006867e : push ds ; jecxz 0x68683 ; jmp dword ptr [ecx]
0x00166f21 : push ds ; std ; call dword ptr [edx - 0x1d0002e2]
0x00166f55 : push ds ; std ; call eax
0x00166f45 : push ds ; std ; call esi
0x00166f59 : push ds ; std ; jmp dword ptr [eax]
0x00166f49 : push ds ; std ; jmp dword ptr [esi]
0x00166f25 : push ds ; std ; jmp edx
0x00166f39 : push ds ; std ; ljmp ptr [edi + ebx] ; std ; call dword ptr [esi]
0x0016967b : push dword ptr [eax + 0x1b] ; add dword ptr [eax], eax ; dec ebp ; jb 0x16967b ; call dword ptr [eax]
0x0016694f : push dword ptr [eax + 0x40fffce2] ; jecxz 0x16695b ; call eax
0x00166e2b : push dword ptr [eax + 0x40fffd01] ; add bh, ch ; call eax
0x00168e23 : push dword ptr [eax + 0x480000e6] ; fucomi st(7) ; jmp eax
0x0016684f : push dword ptr [eax - 0x1a] ; cld ; call dword ptr [eax]
0x00166763 : push dword ptr [eax - 0x1f000327] ; frndint ; call dword ptr [eax]
0x00166773 : push dword ptr [eax - 0x26] ; cld ; jmp dword ptr [eax - 0x2f000326]
0x00167d43 : push dword ptr [eax - 0x6bffff7b] ; xchg eax, esi ; jmp 0x167d53
0x00166b67 : push dword ptr [eax - 0x7f000305] ; cld ; cld ; jmp eax
0x00168f2b : push dword ptr [eax] ; in eax, dx ; add byte ptr [eax], al ; aam 0xee ; out dx, eax ; jmp dword ptr [eax]
0x00167d5b : push dword ptr [eax] ; xchg dword ptr [eax], eax ; add ah, dl ; mov al, 0xeb ; call eax
0x000c9529 : push dword ptr [ebp - 0x1c] ; add esp, 0x10 ; pop ebx ; pop esi ; pop edi ; ret
0x000b462f : push dword ptr [ebx + ebp - 0x77] ; ret 0xe283
0x0016753f : push dword ptr [ebx + ecx*2] ; std ; jmp esp
0x00165e27 : push dword ptr [ebx - 0x30] ; cld ; jmp dword ptr [ebx - 0x2c000330]
0x00114264 : push dword ptr [ecx + eax*2 - 0x77] ; push esi ; sub al, 1 ; ret 0x5689
0x000b9143 : push dword ptr [edi + 0x2c] ; add esp, 0x38 ; pop ebx ; ret
0x00167163 : push dword ptr [edx + 0x2c] ; std ; inc edx ; sub al, 0xfd ; call dword ptr [edx]
0x00167267 : push dword ptr [edx + 0x2e] ; std ; call edx
0x00166a2f : push dword ptr [edx + 0xfffcf8] ; stc ; cld ; call edx
0x00168c33 : push dword ptr [edx + ebx*8] ; add byte ptr [eax], al ; test bl, bh ; out dx, al ; jmp dword ptr [eax]
0x00167047 : push dword ptr [esi + 0x20] ; std ; inc esi ; and ch, bh ; call eax
0x00166c57 : push dword ptr [esi + edi*8] ; cld ; call esp
0x00095921 : push dword ptr [esp + ebx*2 + 0xf] ; mov ebp, 0x5ff801ff ; ret
0x0016772f : push dword ptr [esp + ebx*2 - 3] ; call esp
0x00167557 : push dword ptr [esp + ecx*2] ; std ; jmp esp
0x00126f2d : push eax ; add al, 0x83 ; les ebp, ptr [eax] ; mov eax, edx ; pop ebx ; ret
0x00124a54 : push eax ; add al, 0x89 ; ret 0x8365
0x00114136 : push eax ; add al, 0x89 ; ret 0xc031
0x00126f3e : push eax ; add al, 0x89 ; ret 0xebeb
0x00094a5d : push eax ; add al, 0x8b ; inc esp ; and al, 0xc ; pop ebx ; pop esi ; ret
0x00094a7b : push eax ; add ecx, dword ptr [ebx + 0x5b0c2444] ; pop esi ; ret
0x0002607b : push eax ; and al, 0x81 ; ret 0x100
0x00026f3b : push eax ; and eax, 0x1000 ; ret
0x00026e2b : push eax ; and eax, 0x200 ; ret
0x00026e5b : push eax ; and eax, 0x8000 ; ret
0x000a546e : push eax ; lcall ptr [ebx - 0x77] ; rcr byte ptr [esi + 0x5f], 1 ; pop ebp ; ret
0x000e5024 : push eax ; mov dword ptr [eax + 0x54], edx ; xor eax, eax ; pop ebx ; ret
0x00174f50 : push eax ; pop ebp ; add byte ptr [eax], al ; pop esp ; imul ebp ; jmp dword ptr [ebx]
0x00166e54 : push eax ; pop es ; std ; jmp eax
0x000e5026 : push eax ; push esp ; xor eax, eax ; pop ebx ; ret
0x00129926 : push eax ; ret
0x00056a63 : push eax ; sbb al, 0x89 ; ret 0x478b
0x00167360 : push eax ; std ; call dword ptr [eax]
0x00166b78 : push eax ; sti ; cld ; call dword ptr [eax]
0x00167374 : push eax ; xor edi, ebp ; jmp eax
0x0006412b : push ebp ; add byte ptr [ecx], bh ; ror byte ptr [edi], 1 ; inc edx ; ret 0x4589
0x00184725 : push ebp ; add dword ptr [eax], eax ; clc ; adc dl, dh ; jmp dword ptr [eax]
0x00195a44 : push ebp ; idiv bh ; sbb al, 0xd ; mov dword ptr [ebp - 0xa], ecx ; jmp dword ptr [edx]
0x0001756c : push ebp ; in al, -0x77 ; dec ebp ; loopne 0x175a1 ; ret 0xe283
0x00174a7d : push ebp ; in eax, dx ; call dword ptr [eax]
0x000a5447 : push ebp ; mov ah, 0x83 ; ret 0x3901
0x000a5162 : push ebp ; mov esp, 0x83bc4d8b ; rol byte ptr [ecx], 0x83 ; ret 0x3901
0x000f7a71 : push ebp ; or al, 0x8b ; inc ecx ; or al, 0x39 ; ret 0x1474
0x00174a79 : push ebx ; add byte ptr [eax], al ; je 0x174ad9 ; in eax, dx ; call dword ptr [eax]
0x00187f71 : push ebx ; add cl, byte ptr [edx] ; ret
0x0018453d : push ebx ; add dword ptr [eax], eax ; cmp bh, 0xf1 ; call edi
0x00016f72 : push ebx ; call 0x129d7a
0x00026c50 : push ebx ; call 0x129d7c
0x00166350 : push ebx ; frndint ; call dword ptr [ebx - 0x2c000327]
0x00158844 : push ebx ; jno 0x15884a ; out -0x6b, eax ; push es ; cld ; ret
0x000f7255 : push ebx ; mov edx, dword ptr [eax] ; call 0x129d7c
0x00165e47 : push ebx ; sar esp, 1 ; jmp dword ptr [ebx]
0x00186b4b : push ebx ; xchg byte ptr [edx], al ; ja 0x186b62 ; push cs ; add al, 0xc6 ; ret
0x00195767 : push ebx ; xchg byte ptr [edx], al ; ja 0x19577e ; push cs ; add al, 0xc6 ; ret
0x00196863 : push ebx ; xchg byte ptr [edx], al ; ja 0x19687a ; push cs ; add al, 0xc6 ; ret
0x00179c6f : push ebx ; xchg byte ptr [edx], al ; jp 0x179c86 ; push cs ; add al, 0xc6 ; ret
0x0017427b : push ebx ; xchg byte ptr [edx], al ; or cl, byte ptr gs:[esi] ; add al, 0xc6 ; ret
0x0019816b : push ebx ; xchg byte ptr [edx], al ; pop ebp ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00174223 : push ebx ; xchg byte ptr [edx], al ; pop esp ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00198c43 : push ebx ; xchg byte ptr [edx], al ; push 0xc6040e0a ; ret
0x00166337 : push ebx ; xlatb ; cld ; jmp dword ptr [ebx]
0x000f7a52 : push ecx ; adc al, 0x39 ; ret 0xa7d
0x00087653 : push ecx ; add al, 0x5b ; ret
0x000c7361 : push ecx ; add al, 0x85 ; ror byte ptr [ecx - 0x77f04fab], cl ; ret
0x00094f4a : push ecx ; add dword ptr [ebp - 0x36], esi ; nop ; pop esi ; pop edi ; pop ebp ; ret
0x00186545 : push ecx ; add dword ptr [edx], ecx ; ret
0x00184541 : push ecx ; call edi
0x00186675 : push ecx ; jmp dword ptr [bp + si]
0x00189637 : push ecx ; or cl, byte ptr [esi] ; adc al, 0x41 ; ret
0x00196a2f : push ecx ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00195b43 : push ecx ; xchg byte ptr [edx], al ; jo 0x195b5d ; add al, 0xc6 ; ret
0x0011415c : push edi ; add al, 0x89 ; push esp ; and al, 4 ; mov dword ptr [esp], esi ; call dword ptr [eax]
0x00176628 : push edi ; add edi, ebp ; call dword ptr [eax]
0x00016f70 : push edi ; push esi ; push ebx ; call 0x129d7c
0x0018583a : push edi ; ret
0x0018793b : push edi ; xchg dword ptr [edx], eax ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; add al, 0xc7 ; ret
0x0008753a : push edx ; add al, byte ptr [eax] ; add byte ptr [edi + 0x5b], bl ; ret
0x00184431 : push edx ; add dword ptr [eax], eax ; fdivr st(5), st(0) ; int1 ; call dword ptr [ebx]
0x00186e69 : push edx ; call dword ptr [eax]
0x00167628 : push edx ; dec edi ; std ; jmp edx
0x000c6b28 : push edx ; or byte ptr [ebx + 0x5e], bl ; mov eax, edx ; ret
0x00035a45 : push es ; add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x0008712f : push es ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00047b67 : push es ; add esp, 0x20 ; mov eax, edi ; pop ebx ; pop esi ; pop edi ; ret
0x00158849 : push es ; cld ; ret
0x00149022 : push es ; jb 0x1490a7 ; lea eax, dword ptr [eax + 5] ; pop edi ; ret
0x0009812b : push es ; lea eax, dword ptr [ebx - 0x595d4] ; pop ebx ; ret
0x00097e6b : push es ; lea eax, dword ptr [ebx - 0xfbd84] ; pop ebx ; ret
0x00097d4b : push es ; lea eax, dword ptr [ebx - 0xfcaa4] ; pop ebx ; ret
0x00089c71 : push es ; lea eax, dword ptr [edx + 0xd] ; ret
0x00094b64 : push es ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00085731 : push es ; mov eax, edi ; pop edi ; ret
0x00176671 : push es ; or eax, 0xffeec7ef ; sbb al, 0xd ; pop ds ; ret
0x00089a7c : push es ; pop edi ; ret
0x00185e5d : push es ; pop edx ; jmp dword ptr [edx]
0x0011887b : push esi ; add al, 0x83 ; ret 0x8901
0x00117647 : push esi ; add ch, al ; and eax, 0x81000127 ; ret
0x0011484f : push esi ; cmp al, 1 ; ret 0x4689
0x00198078 : push esi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00016f71 : push esi ; push ebx ; call 0x129d7b
0x00148f35 : push esi ; ret 0xf02
0x00064128 : push esi ; sbb al, 0x8b ; push ebp ; add byte ptr [ecx], bh ; ror byte ptr [edi], 1 ; inc edx ; ret 0x4589
0x00114268 : push esi ; sub al, 1 ; ret 0x5689
0x000e5a65 : push esi ; xor byte ptr [ebx + 0x4e894050], cl ; xor al, 0xf6 ; ret 0x7420
0x00198e6c : push esp ; aaa ; clc ; jmp dword ptr [eax]
0x00174641 : push esp ; add byte ptr [eax], al ; pushfd ; fsubr st(4) ; jmp dword ptr [edi]
0x00186c6d : push esp ; add dword ptr [edx], ecx ; push cs ; adc al, 0x43 ; ret
0x00026867 : push esp ; and al, 0x10 ; call 0x129d7c
0x00129b39 : push esp ; and al, 0x10 ; mov dword ptr [edx], edi ; pop esi ; pop edi ; ret
0x000c5b7c : push esp ; and al, 0x18 ; add esp, 0x28 ; pop ebx ; mov eax, edx ; ret
0x00079860 : push esp ; and al, 0x18 ; mov dword ptr [esp + 4], edx ; call eax
0x00074d43 : push esp ; and al, 0x18 ; neg eax ; mov dword ptr [esp], eax ; call dword ptr [ecx]
0x0005544d : push esp ; and al, 0x1c ; add esp, 0x28 ; pop ebx ; mov eax, edx ; ret
0x000d8460 : push esp ; and al, 0x1c ; mov dword ptr [eax + 8], edx ; add esp, 8 ; ret
0x00115f35 : push esp ; and al, 0x24 ; add esp, 0x1c ; ret
0x00076e47 : push esp ; and al, 0x28 ; mov dword ptr [esp + 0x2c], ecx ; call eax
0x0001985d : push esp ; and al, 0x30 ; mov dword ptr [esp], edx ; call eax
0x00079b5f : push esp ; and al, 0x40 ; mov dword ptr [esp + 4], edx ; call eax
0x00114b75 : push esp ; and al, 0x60 ; mov dword ptr [esp], edx ; call eax
0x0011415f : push esp ; and al, 4 ; mov dword ptr [esp], esi ; call dword ptr [eax]
0x0006867a : push esp ; and al, 8 ; call 0x669a7
0x00067647 : push esp ; and al, 8 ; call 0x66c27
0x00079536 : push esp ; and al, 8 ; call eax
0x000d8a55 : push esp ; and al, 8 ; mov dword ptr [eax + 4], edx ; xor eax, eax ; ret
0x000e4d75 : push esp ; and al, 8 ; mov word ptr [edx + 0x3e], ax ; xor eax, eax ; ret
0x00168e30 : push esp ; fucomi st(7) ; call eax
0x00067b70 : push esp ; mov dword ptr [esp + 4], eax ; mov dword ptr [esp], ebp ; call edi
0x00167b50 : push esp ; sbb bl, ch ; call dword ptr [eax]
0x00166c40 : push esp ; std ; cld ; jmp esp
0x00196a2b : push esp ; xchg byte ptr [edx], al ; add dl, byte ptr [ecx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x000e5027 : push esp ; xor eax, eax ; pop ebx ; ret
0x00124242 : push ss ; add byte ptr [eax], al ; add byte ptr [edi], cl ; inc esp ; ret 0x8965
0x000c4251 : push ss ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00094a24 : push ss ; mov dword ptr [eax], edx ; mov eax, dword ptr [esp + 0xc] ; pop ebx ; pop esi ; ret
0x00184945 : push ss ; sahf ; int1 ; jmp dword ptr [edx]
0x00007968 : pushal ; clc ; adc dword ptr [eax], eax ; ret
0x00114b77 : pushal ; mov dword ptr [esp], edx ; call eax
0x0017467c : pushal ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x00178b6e : pushal ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00186e68 : pushal ; push edx ; call dword ptr [eax]
0x000d904c : pushal ; ret
0x00199b60 : pushal ; test eax, 0x5bbc0002 ; clc ; call dword ptr [ecx]
0x00188570 : pushal ; xlatb ; jmp dword ptr [ecx]
0x00198e69 : pushfd ; add al, byte ptr [eax] ; push esp ; aaa ; clc ; jmp dword ptr [eax]
0x0005534b : pushfd ; add byte ptr [eax], al ; add byte ptr [ebx + 0x5e], bl ; pop edi ; pop ebp ; ret
0x00174644 : pushfd ; fsubr st(4) ; jmp dword ptr [edi]
0x0018674c : pushfd ; jo 0x186757 ; add byte ptr [eax], cl ; call dword ptr [eax]
0x000c5c68 : pushfd ; sub esi, edx ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x00158842 : pushfd ; xor dl, byte ptr [ebx + 0x71] ; cld ; out -0x6b, eax ; push es ; cld ; ret
0x00138e7d : rcl byte ptr [eax], 0x83 ; ret 0x8310
0x00135a22 : rcl byte ptr [eax], 3 ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x000a8668 : rcl byte ptr [eax], cl ; push cs ; add byte ptr [eax], al ; pop esi ; add eax, edx ; ret
0x00167974 : rcl byte ptr [edx - 0x6cbf0004], 0xfc ; call eax
0x00098527 : rcl dword ptr [eax], -0x7b ; div byte ptr [ebx + esi - 0x7d] ; ret 0x8310
0x00095635 : rcl dword ptr [eax], -0x7d ; ret 0x2910
0x00135721 : rcl dword ptr [ebx + eax], 0 ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x00094972 : rcl dword ptr [ebx], 0x60 ; or al, 0 ; add ecx, dword ptr [ecx + ebx*4] ; jmp ecx
0x00094873 : rcl dword ptr [edx + 0x3000c60], 0xc ; xchg eax, ecx ; jmp ecx
0x00094830 : rcl ebp, 0x60 ; or al, 0 ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x00167050 : rcr byte ptr [edi], 1 ; std ; jmp dword ptr [eax]
0x00166f58 : rcr byte ptr [esi], 1 ; std ; jmp dword ptr [eax]
0x00094928 : rcr dword ptr [ebp + 0x60], 0xc ; add byte ptr [ebx], al ; or al, 0x99 ; jmp ecx
0x0018484f : rcr dword ptr [esi + 0xd1cfff1], 1 ; or al, 0x9e ; int1 ; jmp dword ptr [edx]
0x00166348 : rcr eax, cl ; cld ; call dword ptr [ebx]
0x00166358 : rcr ecx, cl ; cld ; call dword ptr [ebx]
0x0002607e : ret 0x100
0x00025330 : ret 0x101
0x00109c2b : ret 0x1079
0x0001806b : ret 0x108
0x0013447e : ret 0x110
0x00054f30 : ret 0x1174
0x00005379 : ret 0x12
0x000a544d : ret 0x1375
0x00068e34 : ret 0x13a1
0x00054b34 : ret 0x14e4
0x0008664a : ret 0x15
0x00045368 : ret 0x16eb
0x00026d78 : ret 0x17
0x000e6162 : ret 0x180
0x000a8538 : ret 0x18b
0x00038350 : ret 0x18e9
0x00056a71 : ret 0x1974
0x0005972b : ret 0x1c77
0x0009505e : ret 0x1d75
0x00136b6e : ret 0x1e72
0x000f7a63 : ret 0x1e7e
0x0014993e : ret 0x1f75
0x00095877 : ret 0x267c
0x00095079 : ret 0x275
0x00045241 : ret 0x29eb
0x00097c52 : ret 0x2a76
0x00045865 : ret 0x3274
0x00017f26 : ret 0x348d
0x00095867 : ret 0x367c
0x00107f66 : ret 0x3775
0x00009444 : ret 0x38
0x00095043 : ret 0x3875
0x00025723 : ret 0x3910
0x00149923 : ret 0x3a75
0x00075750 : ret 0x3b30
0x000a8876 : ret 0x3c8d
0x00105f7e : ret 0x4075
0x00027d40 : ret 0x408b
0x0002952c : ret 0x40c7
0x0011423a : ret 0x4375
0x00077929 : ret 0x440b
0x00036265 : ret 0x44c7
0x0004972d : ret 0x4589
0x000e6b42 : ret 0x4b74
0x00019d2c : ret 0x4c89
0x00004234 : ret 0x52
0x00074346 : ret 0x528b
0x0008437e : ret 0x528d
0x00095028 : ret 0x5375
0x00074245 : ret 0x5488
0x0006527b : ret 0x548d
0x00069576 : ret 0x562b
0x0007454f : ret 0x5675
0x0011426b : ret 0x5689
0x000f976c : ret 0x568d
0x00085b7a : ret 0x5c8d
0x0014572c : ret 0x5d5e
0x00038b57 : ret 0x62e9
0x00038a64 : ret 0x689
0x00054240 : ret 0x6974
0x00019c6a : ret 0x6c89
0x00064c59 : ret 0x7420
0x000e4973 : ret 0x7440
0x000a796b : ret 0x76c
0x00148721 : ret 0x7c0e
0x00148731 : ret 0x7c0f
0x00059342 : ret 0x7d77
0x0007515c : ret 0x8108
0x00047031 : ret 0x8120
0x00127171 : ret 0x828b
0x00097c67 : ret 0x8310
0x000f9338 : ret 0x8318
0x00017a7c : ret 0x831e
0x0012526d : ret 0x8328
0x00017a69 : ret 0x840f
0x00035577 : ret 0x843b
0x00038467 : ret 0x848d
0x00098036 : ret 0x8510
0x00158926 : ret 0x871e
0x000d442f : ret 0x8940
0x000a565d : ret 0x895e
0x00095b31 : ret 0x8d10
0x000b9947 : ret 0x8dc3
0x00018750 : ret 0x904
0x000a7b45 : ret 0x90c3
0x00074361 : ret 0x933b
0x000a9a2f : ret 0x9389
0x00149959 : ret 0x9474
0x000b5b76 : ret 0x95eb
0x00074d7b : ret 0x9f74
0x000f945b : ret 0xa274
0x000c8d7d : ret 0xa5e9
0x000a7928 : ret 0xa5eb
0x000f7a55 : ret 0xa7d
0x000e6556 : ret 0xac75
0x000d9837 : ret 0xace9
0x000a662a : ret 0xb
0x000a7e71 : ret 0xb801
0x00117e46 : ret 0xbc80
0x00018f7b : ret 0xbd80
0x0004662c : ret 0xbd89
0x00019549 : ret 0xc031
0x000d8745 : ret 0xc374
0x00157a62 : ret 0xc4c3
0x00019a32 : ret 0xc589
0x00117833 : ret 0xc707
0x00124539 : ret 0xc709
0x00029535 : ret 0xc740
0x000b9e4d : ret 0xcb87
0x00075659 : ret 0xcc75
0x0015934a : ret 0xcca7
0x000a5656 : ret 0xcf74
0x00056f7d : ret 0xd
0x00029a2b : ret 0xd001
0x000b984f : ret 0xd028
0x000a4c65 : ret 0xd029
0x000a8157 : ret 0xd138
0x00049051 : ret 0xd689
0x000d6966 : ret 0xd772
0x00027928 : ret 0xd789
0x00064946 : ret 0xdeeb
0x0010506c : ret 0xe181
0x00017572 : ret 0xe283
0x0002847b : ret 0xe901
0x00115846 : ret 0xe904
0x0002853a : ret 0xe90a
0x00159427 : ret 0xe970
0x0001914f : ret 0xeac1
0x000e8b31 : ret 0xeb03
0x000c5e66 : ret 0xeb18
0x00126f41 : ret 0xebeb
0x000a8852 : ret 0xed85
0x00177468 : ret 0xef13
0x00177c30 : ret 0xef21
0x00046622 : ret 0xefc1
0x0014866c : ret 0xf0c
0x00147243 : ret 0xf10
0x00147254 : ret 0xf20
0x000c5c2b : ret 0xf304
0x00147265 : ret 0xf40
0x000f7530 : ret 0xf618
0x000f8322 : ret 0xf631
0x000f7a5f : ret 0xf67c
0x0007854b : ret 0xf9b8
0x000d644b : ret 0xfa73
0x00055e5a : ret 0xfbd2
0x00166038 : ret 0xfcd1
0x00167168 : ret 0xfd2c
0x00167260 : ret 0xfd2d
0x00167324 : ret 0xfd3a
0x00167470 : ret 0xfd49
0x0016746c : ret 0xfd4b
0x00167764 : ret 0xfd5c
0x00149a7a : ret 0xfe89
0x00107e6a : ret 0xff7f
0x00097c7e : ret 0xff85
0x00044a79 : ret 0xffdf
0x00037157 : ret 0xfff2
0x0001965e : ret 0xfffb
0x00106d43 : ret 9
0x00175379 : retf -0x122b ; jmp dword ptr [edx]
0x00166c7c : retf -0x302 ; inc dword ptr [eax - 3] ; cld ; call eax
0x00045364 : retf -1 ; mov edx, eax ; jmp 0x45385
0x00095c40 : rol byte ptr [ebp + 0x663b75c0], 0xf ; xlatb ; ret 0xc085
0x00098930 : rol byte ptr [ebp - 0x3f6bf02e], 0xf3 ; ret
0x0002743f : rol byte ptr [ebx + 0x5e5b2cc4], 1 ; pop edi ; pop ebp ; ret
0x00109a31 : rol byte ptr [ebx + 0x5e5b5cc4], 0x5f ; pop ebp ; ret
0x0010916e : rol byte ptr [ebx - 0x27ca817], 1 ; or dword ptr [edi], ecx ; inc esi ; int 0x80
0x000e8440 : rol byte ptr [ebx - 0x3b7cfe18], 0x24 ; pop ebx ; pop esi ; ret
0x00114e7b : rol byte ptr [ebx - 0x49f0e33c], 0xc0 ; ret
0x0011886e : rol byte ptr [ebx - 0x5d6fc26], 0x83 ; ret 0x8303
0x00148e36 : rol byte ptr [ebx], 0x5f ; ret
0x00095127 : rol byte ptr [ecx], 0xf8 ; pop edi ; ret
0x00095275 : rol byte ptr [ecx], 0xf8 ; sub eax, 0x10 ; pop edi ; ret
0x00104e4c : rol byte ptr [ecx], 1 ; add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x00148e5c : rol byte ptr [edi], 0x5f ; ret
0x00157a60 : rol cl, 0xc2 ; ret
0x00115950 : rol cl, 1 ; call 0x80d4506c
0x0016887c : rol dl, 1 ; add byte ptr [eax], al ; int1 ; je 0x168879 ; inc dword ptr [eax] ; ret
0x00168835 : rol dword ptr [eax], 0 ; je 0x1688b0 ; in eax, dx ; jmp dword ptr [eax - 0x3d]
0x00168855 : rol dword ptr [eax], 0 ; mov eax, dword ptr [0x10ffed74] ; ret 0
0x0011886c : rol dword ptr [eax], 1 ; rol byte ptr [ebx - 0x5d6fc26], 0x83 ; ret 0x8303
0x00095551 : rol dword ptr [ebp + 0x315a75c0], -0x40 ; pop edi ; ret
0x00098424 : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x00105049 : ror ax, 8 ; ret
0x0014922d : ror byte ptr [0xc083c35f], 0xe ; pop edi ; ret
0x000e7530 : ror byte ptr [ebp + 0x5e5bf465], 1 ; pop edi ; pop ebp ; ret 4
0x000a7268 : ror byte ptr [ebp + 0x5eff0044], 0x5f ; ret
0x00038a41 : ror byte ptr [ebx - 0x9e58aea], cl ; ret 0x7501
0x00074340 : ror byte ptr [ecx + 0x291b75f2], cl ; ret 0x528b
0x000c7364 : ror byte ptr [ecx - 0x77f04fab], cl ; ret
0x00149228 : ror byte ptr [edi + ebx*2], 0xc3 ; add eax, 0xd ; pop edi ; ret
0x000f433f : ror byte ptr [edi], 0x44 ; ret 0x4489
0x000d5778 : ror byte ptr [edi], 0x85 ; ret 2
0x000b984c : ror byte ptr [edi], 0x92 ; ret 0xd028
0x000c8d7a : ror byte ptr [edi], 0x94 ; ret 0xa5e9
0x000f7c58 : ror byte ptr [edi], 0x95 ; ret 0x7c8b
0x00114e47 : ror byte ptr [edi], 0x95 ; ret 0xd089
0x000a5d60 : ror byte ptr [edi], 0x95 ; ret 0xd589
0x00027925 : ror byte ptr [edi], 0x95 ; ret 0xd789
0x000d9829 : ror byte ptr [edi], 0x9e ; ret 0xf883
0x0006412e : ror byte ptr [edi], 1 ; inc edx ; ret 0x4589
0x0005894d : ror byte ptr [edi], cl ; dec ecx ; ret 0x8589
0x00146857 : ror byte ptr [edi], cl ; test byte ptr [edx - 0xa000000], ah ; ret 0x7501
0x000a8154 : ror byte ptr [edi], cl ; xchg eax, ebp ; ret 0xd138
0x00149232 : ror byte ptr [esi], 0x5f ; ret
0x000e5e4d : ror dword ptr [ebx], 1 ; add byte ptr [ebx - 0x8f7dbbc], cl ; ret 0xeff0
0x000e5e7a : ror dword ptr [ecx - 0x3fcef7b8], 1 ; pop ebx ; ret
0x0010504a : ror eax, 8 ; ret
0x00184856 : sahf ; int1 ; jmp dword ptr [edx]
0x00026c58 : sahf ; ret
0x000d982b : sahf ; ret 0xf883
0x000b903d : sal bl, 1 ; ret
0x00087a51 : sal byte ptr [ebp + 0x38], 0x83 ; ret
0x00126e33 : sal byte ptr [ebp + 0xa], cl ; add esp, 0x34 ; pop ebx ; pop esi ; ret
0x00109b37 : sal byte ptr [ebp - 0x12], 0x83 ; les edx, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x00099966 : sal byte ptr [ebp - 0x41], 0x89 ; clc ; pop esi ; pop edi ; ret
0x00024445 : sal byte ptr [ebp - 0x50], 0x83 ; ret 0x8901
0x000e9921 : sal byte ptr [edx + eax - 0x77], 0x10 ; ret
0x000a8459 : sal byte ptr [edx + eax - 0x77], cl ; add dh, bl ; ret
0x00186a40 : sal dl, 0xf2 ; call ecx
0x00094955 : sal dword ptr [eax], 0x60 ; or al, 0 ; add ecx, dword ptr [ecx + ebx*4] ; jmp ecx
0x00168868 : sal dword ptr [ebp + ebp*8 - 1], 0x70 ; ret 0
0x00187029 : sal dword ptr [edx - 0xe], cl ; jmp dword ptr [edx]
0x000b9a66 : sal ebx, 1 ; ret
0x00185458 : sal ecx, -1 ; sbb al, 0xd ; test al, 0xf1 ; jmp dword ptr [edx]
0x0019797d : sal edi, 1 ; call dword ptr [esi]
0x00168b7d : salc ; add byte ptr [eax], al ; add al, 0xd9 ; out dx, al ; call eax
0x0016625d : salc ; cld ; jmp dword ptr [eax - 0x2f00032d]
0x000c5c34 : salc ; ja 0xc5c2c ; pop esi ; ret
0x00167040 : salc ; pop ds ; std ; jmp dword ptr [esi]
0x00166f48 : salc ; push ds ; std ; jmp dword ptr [esi]
0x00165e2d : sar ah, 1 ; call ebx
0x00165e29 : sar ah, 1 ; jmp dword ptr [ebx - 0x2c000330]
0x00165e51 : sar ah, cl ; call dword ptr [ebx - 0x3c00032e]
0x0006974f : sar bh, cl ; jmp dword ptr [ecx]
0x00109973 : sar bl, 1 ; dec dword ptr [ecx - 0x72cbdbac] ; xchg eax, ebx ; call eax
0x0004507a : sar byte ptr [eax + 1], 0xf ; inc ebp ; ret 0x8588
0x0006812a : sar byte ptr [eax + 3], 0xf3 ; ret
0x00167b4c : sar byte ptr [edx + 0x18540001], 1 ; jmp 0x167b5a
0x00194f41 : sar byte ptr [esi + esi*8], 1 ; jmp dword ptr [edx]
0x000d7323 : sar dh, 0xff ; jmp dword ptr [eax]
0x000a8477 : sar dword ptr [0xfffff001], cl ; jae 0xa8488 ; ret
0x000b9373 : sar dword ptr [0xfffff001], cl ; jae 0xb9384 ; ret
0x000c5543 : sar dword ptr [0xfffff001], cl ; jae 0xc5554 ; ret
0x000e7d57 : sar dword ptr [0xfffff001], cl ; jae 0xe7d68 ; ret
0x000e7e27 : sar dword ptr [0xfffff001], cl ; jae 0xe7e38 ; ret
0x000e8023 : sar dword ptr [0xfffff001], cl ; jae 0xe8034 ; ret
0x000e8063 : sar dword ptr [0xfffff001], cl ; jae 0xe8074 ; ret
0x000e815d : sar dword ptr [0xfffff001], cl ; jae 0xe819a ; ret
0x00094849 : sar dword ptr [eax + 0xc03000c], -0x6f ; jmp ecx
0x0009474a : sar dword ptr [ebx + 0x3000c61], 0xc ; xchg eax, ecx ; jmp ecx
0x000e6a67 : sar eax, 0x1f ; add esp, 0xc ; ret
0x000a7d47 : sar ebp, 1 ; add ebp, esi ; jmp 0xa7d15
0x00129e3f : sar edx, 0x1f ; add esp, 0x18 ; pop esi ; ret
0x00165e3d : sar esp, 1 ; call dword ptr [ebx - 0x3c00032f]
0x00166079 : sar esp, 1 ; call esi
0x00166035 : sar esp, 1 ; inc edx ; sar esp, 1 ; jmp edx
0x00165e49 : sar esp, 1 ; jmp dword ptr [ebx]
0x00166039 : sar esp, 1 ; jmp edx
0x00165e45 : sar esp, 1 ; push ebx ; sar esp, 1 ; jmp dword ptr [ebx]
0x00166261 : sar esp, cl ; call eax
0x00166161 : sar esp, cl ; jmp esp
0x00166924 : sbb ah, 0xfc ; call dword ptr [eax]
0x000c745b : sbb al, 0 ; add byte ptr [eax], al ; add dh, dh ; ret 0xc740
0x00177624 : sbb al, 0x15 ; out dx, eax ; jmp dword ptr [eax]
0x0009703d : sbb al, 0x21 ; ret 0xd789
0x00025f28 : sbb al, 0x24 ; call 0x129d7b
0x00025f76 : sbb al, 0x24 ; mov esi, dword ptr [esp + 4] ; add esp, 8 ; ret
0x000a5654 : sbb al, 0x39 ; ret 0xcf74
0x0005544f : sbb al, 0x83 ; les ebp, ptr [eax] ; pop ebx ; mov eax, edx ; ret
0x00126879 : sbb al, 0x83 ; les ebp, ptr [ebx + ebx*2 + 0x5e] ; pop edi ; pop ebp ; ret
0x000f6e7a : sbb al, 0x83 ; les ebx, ptr [ebx + ebx*2] ; pop esi ; pop edi ; pop ebp ; ret
0x000b555d : sbb al, 0x83 ; les esi, ptr [eax] ; pop ebx ; pop esi ; pop edi ; ret
0x00126e62 : sbb al, 0x83 ; les esi, ptr [ebx + ebx*2] ; pop esi ; ret
0x00097b34 : sbb al, 0x83 ; ret 0x3901
0x000c9642 : sbb al, 0x83 ; ret 0x8501
0x00024443 : sbb al, 0x85 ; sal byte ptr [ebp - 0x50], 0x83 ; ret 0x8901
0x000b7e2e : sbb al, 0x89 ; ret
0x00056a64 : sbb al, 0x89 ; ret 0x478b
0x00064129 : sbb al, 0x8b ; push ebp ; add byte ptr [ecx], bh ; ror byte ptr [edi], 1 ; inc edx ; ret 0x4589
0x00184975 : sbb al, 0x9e ; int1 ; jmp dword ptr [edx]
0x00115f3a : sbb al, 0xc3 ; lea esi, dword ptr [esi] ; ret
0x00079071 : sbb al, 0xc7 ; add al, 0x24 ; pop eax ; add al, 0 ; add al, ch ; ret 0xfffc
0x00185e2b : sbb al, 0xd ; add ebx, dword ptr [edx - 0xe] ; jmp dword ptr [edx]
0x00177723 : sbb al, 0xd ; and dl, dl ; out dx, al ; jmp dword ptr [edx]
0x00186643 : sbb al, 0xd ; cmp ah, byte ptr [edi - 0xe] ; jmp dword ptr [edx]
0x0018606f : sbb al, 0xd ; cmp al, 0x5b ; jmp dword ptr [edx]
0x00176647 : sbb al, 0xd ; cmp al, dl ; out dx, al ; jmp dword ptr [edx]
0x0017573f : sbb al, 0xd ; cmp byte ptr [ecx], dh ; out dx, al ; jmp dword ptr [edx]
0x00177b33 : sbb al, 0xd ; dec eax ; fsubr st(6) ; jmp dword ptr [edx]
0x00178423 : sbb al, 0xd ; fdiv st(2), st(0) ; jmp dword ptr [edx]
0x0018892b : sbb al, 0xd ; fldenv dword ptr [eax - 0xc] ; jmp dword ptr [edx]
0x0017804b : sbb al, 0xd ; imul ebx, eax, -6 ; jmp dword ptr [edx]
0x00177573 : sbb al, 0xd ; imul edx, ecx, -0x12 ; jmp dword ptr [edx]
0x00194553 : sbb al, 0xd ; in al, dx ; xor al, 0xf6 ; jmp dword ptr [edx]
0x0018536b : sbb al, 0xd ; in eax, -0x41 ; int1 ; jmp dword ptr [edx]
0x0017477b : sbb al, 0xd ; in eax, -0x4a ; in al, dx ; jmp dword ptr [edx]
0x00177753 : sbb al, 0xd ; inc ebp ; shr dh, cl ; jmp dword ptr [edx]
0x0017832f : sbb al, 0xd ; inc edx ; fdiv st(2), st(0) ; jmp dword ptr [edx]
0x00177663 : sbb al, 0xd ; inc edx ; shr dh, cl ; jmp dword ptr [edx]
0x0017724b : sbb al, 0xd ; into ; iretd ; out dx, al ; jmp dword ptr [edx]
0x00175b4b : sbb al, 0xd ; iretd ; mov bh, 0xee ; jmp dword ptr [edx]
0x00179943 : sbb al, 0xd ; ja 0x17994d ; out dx, eax ; jmp dword ptr [edx]
0x00176823 : sbb al, 0xd ; jae 0x1767f3 ; out dx, al ; jmp dword ptr [edx]
0x00176173 : sbb al, 0xd ; jb 0x176139 ; out dx, al ; jmp dword ptr [edx]
0x00187263 : sbb al, 0xd ; jbe 0x1872e5 ; jmp dword ptr [edx]
0x0018676f : sbb al, 0xd ; jl 0x1867df ; jmp dword ptr [edx]
0x00177457 : sbb al, 0xd ; jle 0x177431 ; out dx, al ; jmp dword ptr [edx]
0x0017576f : sbb al, 0xd ; jne 0x1757a9 ; out dx, al ; jmp dword ptr [edx]
0x00179263 : sbb al, 0xd ; jno 0x17926b ; out dx, al ; jmp dword ptr [edx]
0x00176023 : sbb al, 0xd ; jns 0x175fe9 ; out dx, al ; jmp dword ptr [edx]
0x00186927 : sbb al, 0xd ; loopne 0x186998 ; jmp dword ptr [edx]
0x00177b63 : sbb al, 0xd ; mov bl, cl ; out dx, al ; jmp dword ptr [edx]
0x00175437 : sbb al, 0xd ; mov dl, 0xd5 ; in eax, dx ; jmp dword ptr [edx]
0x0017976f : sbb al, 0xd ; mov dl, 1 ; out dx, eax ; jmp dword ptr [edx]
0x00195a47 : sbb al, 0xd ; mov dword ptr [ebp - 0xa], ecx ; jmp dword ptr [edx]
0x00176b7b : sbb al, 0xd ; mov ecx, ecx ; out dx, al ; jmp dword ptr [edx]
0x00175527 : sbb al, 0xd ; mov ss, ebp ; in eax, dx ; jmp dword ptr [edx]
0x00184853 : sbb al, 0xd ; or al, 0x9e ; int1 ; jmp dword ptr [edx]
0x00178723 : sbb al, 0xd ; or al, 0xd7 ; out dx, al ; jmp dword ptr [edx]
0x00176e5b : sbb al, 0xd ; or cl, bl ; out dx, al ; jmp dword ptr [edx]
0x00186e2b : sbb al, 0xd ; or dword ptr [edx - 0xe], esi ; jmp dword ptr [edx]
0x00179633 : sbb al, 0xd ; out 1, al ; out dx, eax ; jmp dword ptr [edx]
0x00178167 : sbb al, 0xd ; out dx, al ; fsqrt ; jmp dword ptr [edx]
0x00187057 : sbb al, 0xd ; out dx, al ; jb 0x187053 ; jmp dword ptr [edx]
0x00178e6f : sbb al, 0xd ; out dx, al ; jmp dword ptr [edx]
0x00176677 : sbb al, 0xd ; pop ds ; ret
0x00177543 : sbb al, 0xd ; pop ebp ; shr esi, 1 ; jmp dword ptr [edx]
0x00184a33 : sbb al, 0xd ; popfd ; int1 ; jmp dword ptr [edx]
0x0017916b : sbb al, 0xd ; push -1 ; out dx, al ; jmp dword ptr [edx]
0x0018603f : sbb al, 0xd ; push cs ; pop ebx ; jmp dword ptr [edx]
0x0017853f : sbb al, 0xd ; push ds ; fdiv st(2), st(0) ; jmp dword ptr [edx]
0x00186673 : sbb al, 0xd ; push ecx ; jmp dword ptr [bp + si]
0x00185e5b : sbb al, 0xd ; push es ; pop edx ; jmp dword ptr [edx]
0x00184943 : sbb al, 0xd ; push ss ; sahf ; int1 ; jmp dword ptr [edx]
0x00175377 : sbb al, 0xd ; retf -0x122b ; jmp dword ptr [edx]
0x00187027 : sbb al, 0xd ; sal dword ptr [edx - 0xe], cl ; jmp dword ptr [edx]
0x00194f3f : sbb al, 0xd ; sar byte ptr [esi + esi*8], 1 ; jmp dword ptr [edx]
0x00184973 : sbb al, 0xd ; sbb al, 0x9e ; int1 ; jmp dword ptr [edx]
0x0017807b : sbb al, 0xd ; sbb eax, -6 ; jmp dword ptr [edx]
0x00177c4f : sbb al, 0xd ; sbb ebx, edx ; out dx, al ; jmp dword ptr [edx]
0x0018683f : sbb al, 0xd ; test al, 0x68 ; jmp dword ptr [edx]
0x00176533 : sbb al, 0xd ; test al, 0xc1 ; out dx, al ; jmp dword ptr [edx]
0x00175347 : sbb al, 0xd ; test al, 0xd5 ; in eax, dx ; jmp dword ptr [edx]
0x0018545b : sbb al, 0xd ; test al, 0xf1 ; jmp dword ptr [edx]
0x00177077 : sbb al, 0xd ; wait ; iretd ; out dx, al ; jmp dword ptr [edx]
0x00178137 : sbb al, 0xd ; xchg eax, edi ; fsubp st(6) ; jmp dword ptr [edx]
0x0017714f : sbb al, 0xd ; xchg eax, edi ; iretd ; out dx, al ; jmp dword ptr [edx]
0x00177a73 : sbb al, 0xd ; xlatb ; xlatb ; out dx, al ; jmp dword ptr [edx]
0x0017835f : sbb al, 0xd ; xor ah, bl ; cli ; jmp dword ptr [edx]
0x00186f27 : sbb al, 0xd ; xor al, 0x72 ; jmp dword ptr [edx]
0x0019544b : sbb al, 0xd ; xor byte ptr [ecx - 0xa], al ; jmp dword ptr [edx]
0x00068b6e : sbb al, 0xe8 ; call dword ptr [ecx]
0x00114e7e : sbb al, 0xf ; mov dh, 0xc0 ; ret
0x000a7145 : sbb al, 0xf ; test dword ptr [eax + eax + 0x5e5f0000], esp ; ret
0x00087470 : sbb al, 3 ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x000e8f76 : sbb al, 4 ; add byte ptr [eax], al ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00125265 : sbb al, byte ptr [eax + 0x7400287a] ; adc al, 0x83 ; ret 0x8328
0x0009895f : sbb al, byte ptr [eax] ; add byte ptr [edi], cl ; inc esp ; ret 0x4489
0x00087172 : sbb al, byte ptr [esi] ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00074d68 : sbb bh, al ; add al, 0x24 ; add byte ptr [eax], al ; add byte ptr [eax], al ; call dword ptr [ecx]
0x00167b51 : sbb bl, ch ; call dword ptr [eax]
0x000e8c51 : sbb byte ptr [eax + 1], bh ; pop ebx ; ret
0x00099d74 : sbb byte ptr [eax + eax], dh ; add esp, 0x18 ; pop ebx ; ret
0x0001952e : sbb byte ptr [eax], al ; add byte ptr [eax], al ; call eax
0x00019659 : sbb byte ptr [eax], al ; lea eax, dword ptr [ecx - 0x43dee] ; ret
0x00019639 : sbb byte ptr [eax], al ; lea eax, dword ptr [ecx - 0x46116] ; ret
0x000a9361 : sbb byte ptr [eax], bh ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x00074d75 : sbb byte ptr [ebp + 0x29a374c0], al ; ret 0x9f74
0x00034f35 : sbb byte ptr [ebx + 0x1402444], cl ; ret 0x448b
0x0007926c : sbb byte ptr [ebx - 0x17], bl ; in eax, dx ; ret 0xffff
0x00124772 : sbb byte ptr [ebx - 0x2f76e33c], al ; ret
0x00034673 : sbb byte ptr [ebx - 0x7cbfdbac], cl ; ret 0xf01
0x00056a69 : sbb byte ptr [ebx], ch ; inc edi ; adc al, 0xc1 ; clc ; add bh, byte ptr [ecx] ; ret 0x1974
0x0010513e : sbb byte ptr [ecx - 0x76e7dbac], cl ; ret 0xeac1
0x00098567 : sbb byte ptr [ecx], ch ; ret 0xd089
0x00117c7b : sbb byte ptr [ecx], cl ; ret 0xb60f
0x000a712a : sbb byte ptr [edi], cl ; test dword ptr [edi + 0x5f000000], edi ; pop esi ; ret
0x00166f54 : sbb byte ptr [esi], 0xfd ; call eax
0x00064c57 : sbb dh, dh ; ret 0x7420
0x00038a45 : sbb dh, dh ; ret 0x7501
0x00149977 : sbb dh, dh ; ret 0xf0f
0x00184b2d : sbb dh, dl ; jmp ebx
0x000a9360 : sbb dword ptr [eax], 0x38 ; add byte ptr [eax], al ; add esp, 8 ; pop ebx ; ret
0x00097d4d : sbb dword ptr [ebp + esi - 0x10], -1 ; pop ebx ; ret
0x00148523 : sbb dword ptr [edx], eax ; add byte ptr [eax], al ; mov eax, ecx ; ret
0x0017807d : sbb eax, -6 ; jmp dword ptr [edx]
0x00128b52 : sbb eax, 0x81000012 ; ret
0x00126f52 : sbb eax, 0x8100002e ; ret
0x00126552 : sbb eax, 0x81000038 ; ret
0x000e8a52 : sbb eax, 0x81000413 ; ret
0x000c5b52 : sbb eax, 0x81000642 ; ret
0x000b5c52 : sbb eax, 0x81000741 ; ret
0x00099b52 : sbb eax, 0x81000902 ; ret
0x00098452 : sbb eax, 0x81000919 ; ret
0x00035b52 : sbb eax, 0x81000f42 ; ret
0x00035a52 : sbb eax, 0x81000f43 ; ret
0x00026c52 : sbb eax, 0x81001031 ; ret
0x000a5445 : sbb eax, 0x83b4558b ; ret 0x3901
0x000e802e : sbb eax, 0xc1810004 ; ret
0x000a9a27 : sbb eax, dword ptr [eax] ; add byte ptr [eax], al ; add byte ptr [eax], al ; add byte ptr [ecx], al ; ret 0x9389
0x000a9827 : sbb eax, dword ptr [eax] ; add byte ptr [ecx], cl ; ret 0x840f
0x00147d31 : sbb eax, dword ptr [ecx] ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 3] ; pop edi ; ret
0x00074344 : sbb ebp, dword ptr [ecx] ; ret 0x528b
0x00177c51 : sbb ebx, edx ; out dx, al ; jmp dword ptr [edx]
0x00194141 : sbb edi, esi ; call dword ptr [eax]
0x00188a6d : sbb esp, esi ; call eax
0x00148f6e : scasb al, byte ptr es:[edi] ; add byte ptr [eax], al ; add dh, dh ; ret 0xf40
0x00126c48 : scasb al, byte ptr es:[edi] ; ret
0x00168525 : scasd eax, dword ptr es:[edi] ; add byte ptr [eax], al ; and al, 0xaf ; in al, dx ; call dword ptr [eax]
0x00167a21 : scasd eax, dword ptr es:[edi] ; cld ; call dword ptr [eax]
0x00168529 : scasd eax, dword ptr es:[edi] ; in al, dx ; call dword ptr [eax]
0x00168549 : scasd eax, dword ptr es:[edi] ; in al, dx ; call eax
0x00168559 : scasd eax, dword ptr es:[edi] ; in al, dx ; jmp dword ptr [eax]
0x00168521 : scasd eax, dword ptr es:[edi] ; in al, dx ; jmp eax
0x000a7b44 : scasd eax, dword ptr es:[edi] ; ret 0x90c3
0x0002704a : sete al ; ret
0x00054e41 : sete dl ; mov eax, edx ; add esp, 0x7c ; ret
0x00114e79 : setne al ; add esp, 0x1c ; movzx eax, al ; ret
0x0010505b : shl byte ptr [0xffffff], 1 ; ret
0x00095746 : shl byte ptr [esi + 0xf], 1 ; xlatb ; ret 0xc085
0x00065f69 : shr bl, 0xad ; mov dword ptr [esp], ecx ; call 0x72188
0x000e9639 : shr bl, cl ; ret 0x748d
0x00169944 : shr byte ptr [0xb3e40001], 0xf0 ; jmp eax
0x000a5421 : shr byte ptr [ecx], 1 ; ret 0x48b
0x00168b59 : shr dh, cl ; jmp esp
0x00138161 : shr ebp, 2 ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x000e8a3e : sldt word ptr [eax] ; add esp, 0x18 ; pop ebx ; ret
0x00166a35 : stc ; cld ; call edx
0x00166a79 : stc ; cld ; dec dword ptr [esi - 6] ; cld ; call esp
0x00166a25 : stc ; cld ; jmp dword ptr [edx]
0x000a8544 : stc ; ret 0x10
0x00144346 : std ; adc byte ptr [ebp - 0x79f00f93], cl ; call dword ptr [eax]
0x0014724f : std ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf20
0x000a7d48 : std ; add ebp, esi ; jmp 0xa7d14
0x00167632 : std ; call dword ptr [edx + 0x12fffd4e]
0x00166e76 : std ; call dword ptr [edx + 0x22fffd10]
0x00166f22 : std ; call dword ptr [edx - 0x1d0002e2]
0x0016715e : std ; call dword ptr [edx]
0x00166f3e : std ; call dword ptr [esi]
0x0016702a : std ; call edx
0x00166f46 : std ; call esi
0x00166e21 : std ; cld ; call dword ptr [eax + 0x20fffd00]
0x00166c41 : std ; cld ; jmp esp
0x00166c55 : std ; cld ; push dword ptr [esi + edi*8] ; cld ; call esp
0x00166e62 : std ; dec dword ptr [eax] ; adc ch, bh ; jmp edx
0x00167226 : std ; dec dword ptr [edx - 0x150002d2] ; std ; call esp
0x0016703a : std ; dec esp ; and ch, bh ; call esi
0x00166e2e : std ; inc dword ptr [eax + 2] ; std ; call eax
0x00166f52 : std ; inc dword ptr [eax - 0x2f0002e2] ; push ds ; std ; jmp dword ptr [eax]
0x0016737e : std ; inc dword ptr [eax] ; xor eax, 0x3590fffd ; std ; jmp dword ptr [eax]
0x00167552 : std ; inc dword ptr [ebx + ecx*2 + 0x4c34fffd] ; std ; jmp esp
0x00166e72 : std ; inc dword ptr [edx] ; adc ch, bh ; call dword ptr [edx + 0x22fffd10]
0x00166e5e : std ; inc dword ptr [esi + 0x8fffd0f] ; adc ch, bh ; jmp edx
0x00166f42 : std ; inc dword ptr [esi - 0x290002e2] ; push ds ; std ; jmp dword ptr [esi]
0x00167322 : std ; inc edx ; cmp bh, ch ; call dword ptr [edx]
0x0016746a : std ; inc edx ; dec ebx ; std ; inc edx ; dec ecx ; std ; call dword ptr [eax]
0x0016746e : std ; inc edx ; dec ecx ; std ; call dword ptr [eax]
0x00167762 : std ; inc edx ; pop esp ; std ; call dword ptr [edx]
0x00167166 : std ; inc edx ; sub al, 0xfd ; call dword ptr [edx]
0x0016704a : std ; inc esi ; and ch, bh ; call eax
0x00166d52 : std ; jmp dword ptr [eax]
0x00166e7a : std ; jmp dword ptr [edx]
0x00166f4a : std ; jmp dword ptr [esi]
0x00167622 : std ; lcall ptr [eax + 0x52fffd4e] ; dec edi ; std ; jmp edx
0x00166f3a : std ; ljmp ptr [edi + ebx] ; std ; call dword ptr [esi]
0x00109173 : std ; or dword ptr [edi], ecx ; inc esi ; int 0x80
0x00147942 : std ; pop edi ; ret
0x00095a77 : std ; pop esi ; pop edi ; pop ebp ; ret
0x00166e2a : std ; push dword ptr [eax + 0x40fffd01] ; add bh, ch ; call eax
0x0016753e : std ; push dword ptr [ebx + ecx*2] ; std ; jmp esp
0x00167162 : std ; push dword ptr [edx + 0x2c] ; std ; inc edx ; sub al, 0xfd ; call dword ptr [edx]
0x00167266 : std ; push dword ptr [edx + 0x2e] ; std ; call edx
0x00167046 : std ; push dword ptr [esi + 0x20] ; std ; inc esi ; and ch, bh ; call eax
0x0016772e : std ; push dword ptr [esp + ebx*2 - 3] ; call esp
0x00167556 : std ; push dword ptr [esp + ecx*2] ; std ; jmp esp
0x000a7d44 : std ; sub ebp, esi ; sar ebp, 1 ; add ebp, esi ; jmp 0xa7d18
0x00166b79 : sti ; cld ; call dword ptr [eax]
0x00109974 : sti ; dec dword ptr [ecx - 0x72cbdbac] ; xchg eax, ebx ; call eax
0x000a7924 : sti ; dec dword ptr [edi] ; inc ebp ; ret 0xa5eb
0x00136328 : sti ; mov dword ptr [edx - 4], eax ; mov eax, edx ; pop ebx ; ret
0x000c5b43 : sti ; neg eax ; pop edi ; ret
0x00147932 : sti ; pop edi ; ret
0x000e5e4c : stosb byte ptr es:[edi], al ; ror dword ptr [ebx], 1 ; add byte ptr [ebx - 0x8f7dbbc], cl ; ret 0xeff0
0x00199d3d : stosd dword ptr es:[edi], eax ; add al, byte ptr [eax] ; and byte ptr [esi - 8], bl ; jmp dword ptr [ebx]
0x00199d75 : stosd dword ptr es:[edi], eax ; add al, byte ptr [eax] ; dec eax ; pop esi ; clc ; jmp dword ptr [ebx]
0x0016843d : stosd dword ptr es:[edi], eax ; add byte ptr [eax], al ; add al, 0x92 ; in al, dx ; jmp eax
0x00189d29 : stosd dword ptr es:[edi], eax ; add dword ptr [eax], eax ; movsb byte ptr es:[edi], byte ptr [esi] ; fcompi st(4) ; call dword ptr [edx]
0x000a7b23 : str word ptr [ebx - 0x76dfdba4] ; ret 0x7c8b
0x00166978 : sub ah, 0xfc ; call dword ptr [edx]
0x00177128 : sub al, 0 ; add byte ptr [eax], al ; jl 0x1771b0 ; add byte ptr [eax], al ; ret
0x00177c28 : sub al, 0 ; add byte ptr [eax], al ; jl 0x177bbb ; add byte ptr [eax], al ; ret 0xef21
0x00175d58 : sub al, 0 ; add byte ptr [eax], al ; lodsb al, byte ptr [esi] ; add byte ptr [eax], al ; ret
0x00177460 : sub al, 0 ; add byte ptr [eax], al ; mov ah, 0x7d ; add byte ptr [eax], al ; ret 0xef13
0x0017923c : sub al, 0 ; add byte ptr [eax], al ; nop ; wait ; add byte ptr [eax], al ; ret
0x00166f3c : sub al, 0x1f ; std ; call dword ptr [esi]
0x000d564a : sub al, 0x31 ; jmp 0xd5614
0x00167b44 : sub al, 0x34 ; add dword ptr [eax], eax ; aam 0x15 ; jmp 0x167b52
0x000b9145 : sub al, 0x83 ; les edi, ptr [eax] ; pop ebx ; ret
0x00065b74 : sub al, 0x89 ; rcr byte ptr [ebx + 0x5e], 1 ; pop edi ; pop ebp ; ret
0x00129d6d : sub al, 0xe9 ; sub eax, 0x8bfffffe ; sbb al, 0x24 ; ret
0x000e8a3d : sub al, 0xf ; add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x000a7b42 : sub al, 0xf ; scasd eax, dword ptr es:[edi] ; ret 0x90c3
0x00169c69 : sub al, 0xf1 ; jmp esp
0x00194162 : sub al, 0xf6 ; jmp dword ptr [edx]
0x0016684c : sub al, 0xfc ; push dword ptr [eax - 0x1a] ; cld ; call dword ptr [eax]
0x00167169 : sub al, 0xfd ; call dword ptr [edx]
0x00167135 : sub al, 0xfd ; call esp
0x00167165 : sub al, 0xfd ; inc edx ; sub al, 0xfd ; call dword ptr [edx]
0x00114269 : sub al, 1 ; ret 0x5689
0x00177f29 : sub bh, ch ; call edx
0x00194b59 : sub bh, dh ; call esi
0x000b9d6d : sub byte ptr [ebp - 0xf], 0xff ; jmp eax
0x00189d28 : sub byte ptr [ebx - 0x205bffff], ch ; hlt ; call dword ptr [edx]
0x00184b28 : sub byte ptr [ecx + 1], bl ; add byte ptr [edx + ebx], ah ; jmp ebx
0x0010994d : sub byte ptr [ecx - 0x76cfdbbc], cl ; ret 0x448d
0x00147d54 : sub byte ptr [ecx], al ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x000a7e7b : sub byte ptr [ecx], al ; add byte ptr [eax], al ; or byte ptr [edi], 0x4e ; ret 0xc483
0x00178928 : sub byte ptr [edi + 0x2a440000], dl ; out dx, eax ; jmp dword ptr [ebx]
0x0017892d : sub ch, bh ; jmp dword ptr [ebx]
0x000a7f30 : sub cl, al ; cli ; add eax, 0x291ff8c1 ; ret 0x1b8
0x0009523b : sub eax, 0x10 ; pop edi ; ret
0x00146862 : sub eax, 0x7502c2f6 ; cmp dh, dh ; ret 0x7504
0x00126c42 : sub eax, 0x81000031 ; ret
0x000e7c42 : sub eax, 0x81000421 ; ret
0x000e5142 : sub eax, 0x8100044c ; ret
0x000c5c42 : sub eax, 0x81000641 ; ret
0x000b8a42 : sub eax, 0x81000713 ; ret
0x00099d42 : sub eax, 0x81000900 ; ret
0x00099c42 : sub eax, 0x81000901 ; ret
0x00098942 : sub eax, 0x81000914 ; ret
0x00097e42 : sub eax, 0x8100091f ; ret
0x00068b42 : sub eax, 0x81000c12 ; ret
0x00129d6f : sub eax, 0x8bfffffe ; sbb al, 0x24 ; ret
0x000e8441 : sub eax, 1 ; add esp, 0x24 ; pop ebx ; pop esi ; ret
0x000b9d6a : sub eax, dword ptr [ebx + esi*4 - 0xe9280] ; jmp eax
0x00145279 : sub eax, ecx ; pop ebp ; pop ebx ; ret
0x00138044 : sub eax, ecx ; pop esi ; call 0x129d7c
0x00095d4d : sub eax, edi ; pop esi ; pop edi ; ret
0x00067c5d : sub eax, esi ; pop esi ; pop edi ; pop ebp ; ret
0x000a572e : sub ebp, eax ; mov eax, ebp ; pop esi ; pop edi ; pop ebp ; ret
0x000a7d45 : sub ebp, esi ; sar ebp, 1 ; add ebp, esi ; jmp 0xa7d17
0x000d436d : sub ecx, dword ptr [ebx + edx*4 - 0xcec7c] ; jmp ecx
0x00149050 : sub edi, 0xa ; jb 0x1490a9 ; lea eax, dword ptr [eax + 9] ; pop edi ; ret
0x00149060 : sub edi, 0xb ; jb 0x1490a9 ; lea eax, dword ptr [eax + 0xa] ; pop edi ; ret
0x00149070 : sub edi, 0xd ; jb 0x1490a9 ; lea eax, dword ptr [eax + 0xc] ; pop edi ; ret
0x00149030 : sub edi, 7 ; jb 0x1490a9 ; lea eax, dword ptr [eax + 6] ; pop edi ; ret
0x00149040 : sub edi, 9 ; jb 0x1490a9 ; lea eax, dword ptr [eax + 8] ; pop edi ; ret
0x00095863 : sub edx, 0x40 ; add edx, eax ; jl 0x958a9 ; add eax, ecx ; ret
0x00148030 : sub edx, 0xa ; jb 0x148089 ; lea eax, dword ptr [edi + 9] ; pop edi ; ret
0x00148040 : sub edx, 0xb ; jb 0x148089 ; lea eax, dword ptr [edi + 0xa] ; pop edi ; ret
0x00148050 : sub edx, 0xd ; jb 0x148089 ; lea eax, dword ptr [edi + 0xc] ; pop edi ; ret
0x00148060 : sub edx, 0xe ; jb 0x148089 ; lea eax, dword ptr [edi + 0xd] ; pop edi ; ret
0x00148070 : sub edx, 0xf ; jb 0x148089 ; lea eax, dword ptr [edi + 0xe] ; pop edi ; ret
0x00055d4a : sub edx, dword ptr [ebx + eax*4 - 0x14d2a0] ; jmp edx
0x000d4c79 : sub edx, dword ptr [ebx + eax*4 - 0xce370] ; jmp edx
0x00129052 : sub edx, dword ptr [ebx + ecx*4 - 0x79f98] ; jmp edx
0x000a565c : sub edx, eax ; pop esi ; mov eax, edx ; pop edi ; pop ebp ; ret
0x00119a42 : sub esi, dword ptr [ebx + eax*4 - 0x895a8] ; jmp esi
0x00074f6e : sub esi, eax ; mov dword ptr [esp], esi ; call dword ptr [edx]
0x00194c5d : sub esi, edi ; call dword ptr [eax]
0x000c5c69 : sub esi, edx ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x000f8e67 : sub esp, 0x10 ; call 0x129d7c
0x000a7b71 : sub esp, 0x48 ; call 0x129d7c
0x00149c30 : test ah, 0xf0 ; jne 0x149c59 ; lea eax, dword ptr [edi - 8] ; pop edi ; ret
0x00019258 : test ah, dl ; pop es ; add byte ptr [ecx - 0x47fbdbbc], cl ; ret 0
0x00148a24 : test al, 0 ; add byte ptr [eax], al ; lea eax, dword ptr [edx + 7] ; ret
0x00035b44 : test al, 0x63 ; add byte ptr [eax], al ; add esp, 0x18 ; pop ebx ; ret
0x00186841 : test al, 0x68 ; jmp dword ptr [edx]
0x00168464 : test al, 0xac ; add byte ptr [eax], al ; add al, 0x96 ; in al, dx ; call eax
0x00176535 : test al, 0xc1 ; out dx, al ; jmp dword ptr [edx]
0x00175349 : test al, 0xd5 ; in eax, dx ; jmp dword ptr [edx]
0x00174366 : test al, 0xec ; jmp dword ptr [edx]
0x0018545d : test al, 0xf1 ; jmp dword ptr [edx]
0x00168c38 : test bl, bh ; out dx, al ; jmp dword ptr [eax]
0x000e5326 : test byte ptr [eax + edi], ah ; add al, 0 ; add byte ptr [ecx], cl ; ret 0x850f
0x00047358 : test byte ptr [eax], bh ; ret 0xffff
0x0007562b : test byte ptr [ebp - 0x76fffffb], bh ; ret 0xd285
0x000b9d6b : test byte ptr [ebx - 0xe9280], dh ; jmp eax
0x00128c6b : test byte ptr [ebx - 0xf76eb3c], 0x5b ; pop esi ; ret
0x00167554 : test byte ptr [ebx - 3], cl ; push dword ptr [esp + ecx*2] ; std ; jmp esp
0x00187034 : test byte ptr [ecx + 1], bh ; add byte ptr [ecx + 1], bh ; call dword ptr [eax]
0x000f7230 : test byte ptr [ecx + eax*2 + 1], 0x40 ; cmove eax, edx ; ret
0x00099332 : test byte ptr [ecx - 0x7b000000], cl ; ror byte ptr [edi], 0x95 ; ret 0xf883
0x00045262 : test byte ptr [ecx - 0x7d000000], dh ; ret 0x8301
0x00146c58 : test byte ptr [ecx], al ; add byte ptr [eax], al ; pop ebx ; ret
0x0018746c : test byte ptr [ecx], cl ; call edi
0x000a4c62 : test byte ptr [edi], 0x95 ; ret 0xd029
0x00146859 : test byte ptr [edx - 0xa000000], ah ; ret 0x7501
0x0017616f : test byte ptr [esi + 0xd1cffee], bh ; jb 0x17613d ; out dx, al ; jmp dword ptr [edx]
0x00167238 : test byte ptr [esi], ch ; std ; jmp esp
0x00117142 : test byte ptr [esp + 0x38], 8 ; jne 0x117108 ; jmp 0x117116
0x0014707a : test dl, 0x40 ; jne 0x1470ec ; add eax, 7 ; ret
0x00147079 : test dl, 0x40 ; jne 0x1470ed ; add eax, 7 ; ret
0x0014705b : test dl, 4 ; jne 0x1470dc ; add eax, 3 ; ret
0x00087977 : test dword ptr [0x5bfffffe], edx ; ret
0x0008784f : test dword ptr [0x5bffffff], edi ; ret
0x00059725 : test dword ptr [eax + 0x39ffffef], esi ; ret 0x1c77
0x0005933c : test dword ptr [eax + 0x39ffffef], esi ; ret 0x7d77
0x000a7147 : test dword ptr [eax + eax + 0x5e5f0000], esp ; ret
0x00056d4b : test dword ptr [eax - 0x16000011], esi ; ret 0xfffc
0x00148a23 : test dword ptr [eax - 0x73000000], ebp ; inc edx ; pop es ; ret
0x00147853 : test dword ptr [eax - 0x73000000], ecx ; inc edi ; hlt ; pop edi ; ret
0x0014822b : test dword ptr [eax - 0x77ffffff], esi ; ret 0xe280
0x00148356 : test dword ptr [ebp - 0x78000000], eax ; ret 0xe280
0x00148666 : test dword ptr [ebp - 0x7d000000], esp ; ret 0xf0c
0x0014782e : test dword ptr [ebp], edi ; add byte ptr [eax], al ; lea eax, dword ptr [edi - 0x10] ; pop edi ; ret
0x00147268 : test dword ptr [ebx + 2], esi ; add byte ptr [eax], al ; lea eax, dword ptr [edi + 7] ; pop edi ; ret
0x0008746f : test dword ptr [ebx + eax], ebx ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00148e7d : test dword ptr [ebx - 0x7cfffffd], ebx ; ror byte ptr [ebx], 0x5f ; ret
0x00034768 : test dword ptr [ebx - 0x7d000000], ebx ; ret 0x3901
0x000a7162 : test dword ptr [ecx + 0x5f000000], ecx ; pop esi ; ret
0x00148f3a : test dword ptr [ecx - 0xa000000], esi ; ret 0xf04
0x000a712c : test dword ptr [edi + 0x5f000000], edi ; pop esi ; ret
0x0014863c : test dword ptr [edi - 0x7d000000], ebx ; ret 0xf08
0x00148f64 : test dword ptr [edi - 0xa000000], esp ; ret 0xf20
0x00087539 : test dword ptr [edx + 2], edx ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00087567 : test dword ptr [edx + eax], esp ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x00148e4d : test dword ptr [edx - 0x9fffffd], esi ; ret 0xf40
0x00188540 : test dword ptr [edx], ebx ; hlt ; call dword ptr [eax]
0x00087171 : test dword ptr [edx], ebx ; push es ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x0008712d : test dword ptr [esi + 6], ebx ; add byte ptr [eax], al ; pop edi ; pop ebx ; ret
0x0014787d : test dword ptr [esi - 0x73000000], ecx ; inc edi ; clc ; pop edi ; ret
0x00148e56 : test dword ptr [esi - 0x7cfffffd], ebp ; rol byte ptr [edi], 0x5f ; ret
0x00148e44 : test dword ptr [esi - 0x9fffffd], esi ; ret 0xf20
0x00148f6d : test dword ptr [esi - 0xa000000], ebp ; ret 0xf40
0x0008744d : test dword ptr [esi], edi ; add eax, dword ptr [eax] ; add byte ptr [edi + 0x5b], bl ; ret
0x00199b61 : test eax, 0x5bbc0002 ; clc ; call dword ptr [ecx]
0x00116953 : test eax, eax ; je 0x116963 ; mov dword ptr [esp], esi ; call eax
0x00078326 : test eax, eax ; je 0x78330 ; call eax
0x00127938 : test eax, eax ; jne 0x127969 ; xor eax, eax ; add esp, 0xc ; ret
0x00127e58 : test eax, eax ; jne 0x127e89 ; xor eax, eax ; add esp, 0xc ; ret
0x00095552 : test eax, eax ; jne 0x955b7 ; xor eax, eax ; pop edi ; ret
0x00099965 : test eax, eax ; jne 0x99930 ; mov eax, edi ; pop esi ; pop edi ; ret
0x00068129 : test eax, eax ; js 0x68135 ; ret
0x00148e27 : test eax, esp ; add eax, dword ptr [eax] ; add dh, dh ; ret 0xf04
0x000c6c48 : test ebp, ebp ; add al, byte ptr [eax] ; add byte ptr [ecx], bh ; ret 0x840f
0x0009547d : test ebp, esi ; add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; xlatb ; ret 0xc085
0x00098171 : test ecx, ecx ; jne 0x9816f ; pop esi ; pop edi ; pop ebp ; ret
0x00098551 : test ecx, ecx ; jne 0x98547 ; pop esi ; pop edi ; pop ebp ; ret
0x0014724e : test edi, ebp ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf20
0x0014723d : test edi, esi ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf10
0x00149a73 : test edi, esp ; add dword ptr [eax], eax ; add byte ptr [esi - 0x77], dl ; ret 0xfe89
0x0014725f : test edi, esp ; add dword ptr [eax], eax ; add dh, dh ; ret 0xf40
0x000a8458 : test edx, edx ; je 0xa8465 ; mov dword ptr [edx], eax ; ret
0x00126e32 : test edx, edx ; jne 0x126e49 ; add esp, 0x34 ; pop ebx ; pop esi ; ret
0x00098931 : test edx, edx ; sete al ; ret
0x00095756 : test esi, ebp ; add byte ptr [eax], al ; add byte ptr [esi + 0xf], ah ; xlatb ; ret
0x000c5d65 : test esi, esi ; jne 0xc5d61 ; add esp, 0x14 ; pop ebx ; pop esi ; ret
0x00179241 : wait ; add byte ptr [eax], al ; ret
0x00177079 : wait ; iretd ; out dx, al ; jmp dword ptr [edx]
0x0011975b : wait ; sti ; inc dword ptr [ebx] ; xchg eax, esp ; ret
0x00187f3f : xchg byte ptr [ebx + eax], al ; pop ebp ; push es ; ret
0x0018473c : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx] ; imul eax, dword ptr [ecx], 0xa ; ret
0x00177e70 : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx] ; int1 ; add dword ptr [edx], ecx ; ret
0x00174a4c : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx] ; pop ecx ; add al, 0xa ; ret
0x00187f6c : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx] ; push ebx ; add cl, byte ptr [edx] ; ret
0x0019887c : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx] ; salc ; add cl, byte ptr [edx] ; ret
0x00187c38 : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [ebx] ; xchg byte ptr [edx + ecx], al ; ret
0x00196d44 : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [edx] ; je 0x196d5c ; ret
0x00195e2c : xchg byte ptr [edi + eax*4], al ; add eax, dword ptr [edx] ; jno 0x195e44 ; ret
0x00166e60 : xchg byte ptr [edi], cl ; std ; dec dword ptr [eax] ; adc ch, bh ; jmp edx
0x00186533 : xchg byte ptr [edx + eax], al ; jl 0x186547 ; ret
0x00187c3d : xchg byte ptr [edx + ecx], al ; ret
0x00185c21 : xchg byte ptr [edx], al ; add ah, byte ptr [edx + 0xe] ; add al, 0xc6 ; ret
0x00197528 : xchg byte ptr [edx], al ; add bl, byte ptr [eax + 0xe] ; add al, 0xc6 ; ret
0x00196a2c : xchg byte ptr [edx], al ; add dl, byte ptr [ecx + 0xa] ; push cs ; add al, 0xc6 ; ret
0x0019595d : xchg byte ptr [edx], al ; add dword ptr [ebx], 2 ; pop ecx ; push cs ; add al, 0xc6 ; ret
0x00179d35 : xchg byte ptr [edx], al ; inc esp ; add dword ptr [ebx], 0x79 ; push cs ; add al, 0xc6 ; ret
0x00186b4c : xchg byte ptr [edx], al ; ja 0x186b61 ; push cs ; add al, 0xc6 ; ret
0x00195768 : xchg byte ptr [edx], al ; ja 0x19577d ; push cs ; add al, 0xc6 ; ret
0x00196864 : xchg byte ptr [edx], al ; ja 0x196879 ; push cs ; add al, 0xc6 ; ret
0x00197038 : xchg byte ptr [edx], al ; jno 0x197050 ; add al, 0xc6 ; ret
0x00195b44 : xchg byte ptr [edx], al ; jo 0x195b5c ; add al, 0xc6 ; ret
0x00179c70 : xchg byte ptr [edx], al ; jp 0x179c85 ; push cs ; add al, 0xc6 ; ret
0x0017427c : xchg byte ptr [edx], al ; or cl, byte ptr gs:[esi] ; add al, 0xc6 ; ret
0x0019816c : xchg byte ptr [edx], al ; pop ebp ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00185830 : xchg byte ptr [edx], al ; pop edx ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00174224 : xchg byte ptr [edx], al ; pop esp ; or cl, byte ptr [esi] ; add al, 0xc6 ; ret
0x00198c44 : xchg byte ptr [edx], al ; push 0xc6040e0a ; ret
0x00166f44 : xchg byte ptr [esi], bl ; std ; call esi
0x00167d5d : xchg dword ptr [eax], eax ; add ah, dl ; mov al, 0xeb ; call eax
0x0017485e : xchg dword ptr [ebx], eax ; add ah, al ; ret
0x00188322 : xchg dword ptr [ebx], eax ; add ah, byte ptr [esi + 0xa] ; ret
0x00185662 : xchg dword ptr [ebx], eax ; add cl, byte ptr [edi + 0xa] ; ret
0x00195e2e : xchg dword ptr [ebx], eax ; add dh, byte ptr [ecx + 0xa] ; ret
0x00187552 : xchg dword ptr [ebx], eax ; add ebx, esi ; add dword ptr [edx], ecx ; ret
0x0019887e : xchg dword ptr [ebx], eax ; add edx, esi ; add cl, byte ptr [edx] ; ret
0x00196032 : xchg dword ptr [ebx], eax ; add esi, dword ptr [ecx + eax + 0xa] ; ret
0x00177e72 : xchg dword ptr [ebx], eax ; add esi, ecx ; add dword ptr [edx], ecx ; ret
0x00196e3b : xchg dword ptr [edx], eax ; add dl, byte ptr [edx - 0x3938fbf2] ; ret
0x0018793c : xchg dword ptr [edx], eax ; insb byte ptr es:[edi], dx ; or cl, byte ptr [esi] ; add al, 0xc7 ; ret
0x00158d2f : xchg dword ptr [esp + eax + 0x6fa9ce9d], esp ; ret
0x0019877d : xchg eax, ebp ; add al, byte ptr [eax] ; pushal ; sbb eax, edi ; call edx
0x00096b33 : xchg eax, ebp ; add byte ptr [ebx + 0x29202454], cl ; ret 0xc083
0x00158848 : xchg eax, ebp ; push es ; cld ; ret
0x00077928 : xchg eax, ebp ; ret 0x440b
0x000f7c5a : xchg eax, ebp ; ret 0x7c8b
0x000a4c64 : xchg eax, ebp ; ret 0xd029
0x00114e49 : xchg eax, ebp ; ret 0xd089
0x000a8156 : xchg eax, ebp ; ret 0xd138
0x000a5d62 : xchg eax, ebp ; ret 0xd589
0x00027927 : xchg eax, ebp ; ret 0xd789
0x00114e7a : xchg eax, ebp ; rol byte ptr [ebx - 0x49f0e33c], 0xc0 ; ret
0x0018856d : xchg eax, ebx ; add dword ptr [eax], eax ; pushal ; xlatb ; jmp dword ptr [ecx]
0x0010997b : xchg eax, ebx ; call eax
0x00167979 : xchg eax, ebx ; cld ; call eax
0x00119759 : xchg eax, ebx ; dec esp ; wait ; sti ; inc dword ptr [ebx] ; xchg eax, esp ; ret
0x00096827 : xchg eax, ebx ; dec esp ; xor al, 0xef ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x00166344 : xchg eax, ebx ; fdivr st(4) ; call ebx
0x00166354 : xchg eax, ebx ; frndint ; call ebx
0x00019a2c : xchg eax, ebx ; mov al, byte ptr [0x89000036] ; ret 0xc589
0x000a7921 : xchg eax, ebx ; or al, 0x7d ; sti ; dec dword ptr [edi] ; inc ebp ; ret 0xa5eb
0x000c5c67 : xchg eax, ebx ; pushfd ; sub esi, edx ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x00027943 : xchg eax, ebx ; ret 0xd789
0x00019349 : xchg eax, ecx ; add al, 5 ; add byte ptr [eax], al ; pop ebx ; ret
0x00188879 : xchg eax, ecx ; add dword ptr [eax], eax ; cld ; hlt ; call dword ptr [eax]
0x00139351 : xchg eax, ecx ; fld qword ptr [edx] ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x00168850 : xchg eax, ecx ; je 0x168843 ; jmp eax
0x00139151 : xchg eax, ecx ; loopne 0x13915d ; add byte ptr [ebx], al ; sbb al, 0x8b ; jmp ebx
0x000b9a5f : xchg eax, ecx ; mov eax, 0xff ; jne 0xb9a41 ; ret
0x00178929 : xchg eax, edi ; add byte ptr [eax], al ; inc esp ; sub ch, bh ; jmp dword ptr [ebx]
0x00178139 : xchg eax, edi ; fsubp st(6) ; jmp dword ptr [edx]
0x00177151 : xchg eax, edi ; iretd ; out dx, al ; jmp dword ptr [edx]
0x00198061 : xchg eax, edi ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x000e5468 : xchg eax, edi ; ret 0xd689
0x0002795f : xchg eax, edi ; ret 0xd789
0x000b984b : xchg eax, edi ; ror byte ptr [edi], 0x92 ; ret 0xd028
0x00166e78 : xchg eax, edx ; adc ch, bh ; jmp dword ptr [edx]
0x0019895d : xchg eax, edx ; add al, byte ptr [eax] ; cdq ; xor bh, al ; call dword ptr [eax]
0x00167f5d : xchg eax, edx ; add byte ptr [eax], al ; imul bl ; jmp eax
0x00167975 : xchg eax, edx ; cld ; inc dword ptr [eax - 0x6d] ; cld ; call eax
0x00167634 : xchg eax, edx ; dec esi ; std ; call dword ptr [edx]
0x00168441 : xchg eax, edx ; in al, dx ; jmp eax
0x00129045 : xchg eax, edx ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00166f24 : xchg eax, edx ; push ds ; std ; jmp edx
0x00094874 : xchg eax, edx ; pushal ; or al, 0 ; add ecx, dword ptr [ecx + edx*4] ; jmp ecx
0x000b984e : xchg eax, edx ; ret 0xd028
0x000e546d : xchg eax, edx ; ret 0xf189
0x00166a24 : xchg eax, edx ; stc ; cld ; jmp dword ptr [edx]
0x00168469 : xchg eax, esi ; in al, dx ; call eax
0x00167d49 : xchg eax, esi ; jmp 0x167d4d
0x00198641 : xchg eax, esp ; add al, byte ptr [eax] ; jl 0x19865f ; clc ; jmp dword ptr [edi]
0x00188659 : xchg eax, esp ; add dword ptr [eax], eax ; and al, 0xd8 ; jmp dword ptr [esi]
0x000d7622 : xchg eax, esp ; lea esp, dword ptr [ebp - 0xc] ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
0x00178144 : xchg eax, esp ; mov al, byte ptr [eax] ; add dh, ch ; sti ; call dword ptr [eax]
0x0018676b : xchg eax, esp ; push 0xd1cfff2 ; jl 0x1867e3 ; jmp dword ptr [edx]
0x00017f25 : xchg eax, esp ; ret 0x348d
0x000d4869 : xchg eax, esp ; ret 0x3d
0x0006527a : xchg eax, esp ; ret 0x548d
0x000c8d7c : xchg eax, esp ; ret 0xa5e9
0x000e6d62 : xchg eax, esp ; ret 0xb
0x00019548 : xchg eax, esp ; ret 0xc031
0x0010556d : xchg eax, esp ; ret 0xd285
0x00109a30 : xchg eax, esp ; rol byte ptr [ebx + 0x5e5b5cc4], 0x5f ; pop ebp ; ret
0x00166c54 : xchg eax, esp ; std ; cld ; push dword ptr [esi + edi*8] ; cld ; call esp
0x00167d48 : xchg eax, esp ; xchg eax, esi ; jmp 0x167d4e
0x000a8456 : xchg ebx, ecx ; test edx, edx ; je 0xa8467 ; mov dword ptr [edx], eax ; ret
0x000c5b42 : xchg ebx, edi ; neg eax ; pop edi ; ret
0x0013945b : xchg esp, ebx ; add al, byte ptr [eax] ; add ebx, dword ptr [ebx + ecx*4] ; jmp ebx
0x0016632d : xlatb ; cld ; call dword ptr [ebx - 0x3c000329]
0x00166339 : xlatb ; cld ; jmp dword ptr [ebx]
0x00166335 : xlatb ; cld ; push ebx ; xlatb ; cld ; jmp dword ptr [ebx]
0x00188571 : xlatb ; jmp dword ptr [ecx]
0x000c774a : xlatb ; ret 0xfffb
0x00095c3f : xlatb ; rol byte ptr [ebp + 0x663b75c0], 0xf ; xlatb ; ret 0xc085
0x00095550 : xlatb ; rol dword ptr [ebp + 0x315a75c0], -0x40 ; pop edi ; ret
0x00177a75 : xlatb ; xlatb ; out dx, al ; jmp dword ptr [edx]
0x00178361 : xor ah, bl ; cli ; jmp dword ptr [edx]
0x00069d5a : xor al, 0x24 ; call 0x669a6
0x00064561 : xor al, 0x24 ; call 0x707e4
0x00114163 : xor al, 0x24 ; call dword ptr [eax]
0x00074f71 : xor al, 0x24 ; call dword ptr [edx]
0x00167540 : xor al, 0x4b ; std ; jmp esp
0x00167558 : xor al, 0x4c ; std ; jmp esp
0x00186f29 : xor al, 0x72 ; jmp dword ptr [edx]
0x00168358 : xor al, 0x73 ; in al, dx ; call dword ptr [eax]
0x00197134 : xor al, 0x7f ; add al, byte ptr [eax] ; dec eax ; mov cl, 0xf7 ; jmp dword ptr [esi]
0x000d5043 : xor al, 0x83 ; ret 0x8b01
0x0006866f : xor al, 0x89 ; ret 0xfac1
0x00076c29 : xor al, 0x89 ; xor ch, cl ; ret 0xfffe
0x00109979 : xor al, 0x8d ; xchg eax, ebx ; call eax
0x00168c34 : xor al, 0xda ; add byte ptr [eax], al ; test bl, bh ; out dx, al ; jmp dword ptr [eax]
0x00096829 : xor al, 0xef ; dec dword ptr [edi] ; inc esp ; ret 0xc483
0x0002705a : xor al, 0xf ; mov bh, 4 ; push eax ; and eax, 1 ; ret
0x0002715a : xor al, 0xf ; mov bh, 4 ; push eax ; and eax, 4 ; ret
0x0002707a : xor al, 0xf ; mov bh, 4 ; push eax ; and eax, 8 ; ret
0x00187b31 : xor al, 0xf3 ; call dword ptr [esi]
0x000e5a6c : xor al, 0xf6 ; ret 0x7420
0x00166c58 : xor al, 0xfe ; cld ; call esp
0x00118a60 : xor al, 4 ; add byte ptr [eax], al ; mov eax, edx ; pop esi ; pop edi ; ret
0x0018737d : xor al, byte ptr [ecx] ; or cl, byte ptr [esi] ; adc al, 0x43 ; ret
0x000e9938 : xor al, ch ; xor eax, 0x81000404 ; ret
0x00198961 : xor bh, al ; call dword ptr [eax]
0x00195045 : xor bh, dh ; call dword ptr [eax]
0x00094956 : xor byte ptr [eax + 0xc], ah ; add byte ptr [ebx], al ; or al, 0x99 ; jmp ecx
0x0003567b : xor byte ptr [ebx + 0x1642444], cl ; ret 0x448b
0x000e5a66 : xor byte ptr [ebx + 0x4e894050], cl ; xor al, 0xf6 ; ret 0x7420
0x000f767c : xor byte ptr [ebx + 0x5e5b5cc4], al ; pop edi ; pop ebp ; ret
0x000b5560 : xor byte ptr [ebx + 0x5e], bl ; pop edi ; ret
0x000d705b : xor byte ptr [ebx + 0xcb838], cl ; add byte ptr [eax], al ; jmp 0xd7031
0x0019544d : xor byte ptr [ecx - 0xa], al ; jmp dword ptr [edx]
0x00095875 : xor byte ptr [ecx], al ; ret 0x267c
0x00199130 : xor byte ptr [edi + 0x3ebc0002], bl ; clc ; jmp dword ptr [eax]
0x00167d5c : xor byte ptr [edi - 0x4f2c0000], al ; jmp 0x167d6a
0x00184430 : xor byte ptr [edx + 1], dl ; add ah, bl ; cmc ; int1 ; call dword ptr [ebx]
0x00199c68 : xor byte ptr [edx], al ; inc edi ; push cs ; or byte ptr [esi + ecx + 4], al ; ret
0x00168f2c : xor ch, ch ; add byte ptr [eax], al ; aam 0xee ; out dx, eax ; jmp dword ptr [eax]
0x00095966 : xor ch, ch ; add eax, ecx ; pop edi ; ret
0x00076c2b : xor ch, cl ; ret 0xfffe
0x00188f51 : xor dh, ah ; jmp dword ptr [esi]
0x0019535d : xor dh, bh ; call ebx
0x00158843 : xor dl, byte ptr [ebx + 0x71] ; cld ; out -0x6b, eax ; push es ; cld ; ret
0x00075657 : xor dword ptr [ecx], edi ; ret 0xcc75
0x000e993a : xor eax, 0x81000404 ; ret
0x00194550 : xor eax, 0xd1cfff6 ; in al, dx ; xor al, 0xf6 ; jmp dword ptr [edx]
0x0001952c : xor eax, dword ptr [0x18] ; call eax
0x0001952b : xor eax, dword ptr gs:[0x18] ; call eax
0x00055670 : xor eax, eax ; add esp, 0xc ; ret
0x0009892f : xor eax, eax ; test edx, edx ; sete al ; ret
0x00167c31 : xor ebp, ebx ; jmp esp
0x000d564b : xor ebx, ebp ; ret
0x00169e49 : xor ecx, esi ; call esp
0x00169e21 : xor ecx, esi ; jmp esp
0x00167375 : xor edi, ebp ; jmp eax
0x00068526 : xor edi, edi ; pop ebx ; mov eax, edi ; pop esi ; pop edi ; pop ebp ; ret
0x000e9638 : xor edx, edx ; jmp 0xe9601
0x00175742 : xor esi, ebp ; jmp dword ptr [edx]
0x00128c6a : xor esi, esi ; add esp, 0x14 ; mov eax, esi ; pop ebx ; pop esi ; ret
0x00148f2c : xor esi, esi ; ret 0xf01

Unique gadgets found: 26964
